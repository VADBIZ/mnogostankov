<modification>
	<name>Purpletree Multivendor for OpenCart 3.x</name>
	<code>Purpletree Multivendor for OpenCart 3.x</code>
	<version>3.x</version>
	<author>Purpletree</author>
	<file path="admin/controller/common/column_left.php">
		<operation error="skip"> 
			<search><![CDATA[$report = array();]]></search> 
			<add position="before"><![CDATA[
			/*********   Purpletree Multivendor Left Menu   ************/ 
			if ($this->config->get('module_purpletree_multivendor_status')) {
						$purpletree_multivendor = array();
			if ($this->user->hasPermission('access', 'extension/module/purpletree_multivendor')) {
				$purpletree_multivendor[] = array(
					'name'	   => $this->language->get('text_pt_setting'),
					'href'     => $this->url->link('extension/module/purpletree_multivendor', 'user_token=' . $this->session->data['user_token'], true),
					'children' => array()		
				);	
			}
			if ($this->user->hasPermission('access', 'extension/purpletree_multivendor/vendor')) {
				$purpletree_multivendor[] = array(
					'name'	   => $this->language->get('text_pt_vendors'),
					'href'     => $this->url->link('extension/purpletree_multivendor/vendor', 'user_token=' . $this->session->data['user_token'], true),
					'children' => array()		
				);	
			}
			if ($this->user->hasPermission('access', 'extension/purpletree_multivendor/stores')) {
				$purpletree_multivendor[] = array(
					'name'	   => $this->language->get('text_pt_stores'),
					'href'     => $this->url->link('extension/purpletree_multivendor/stores', 'user_token=' . $this->session->data['user_token'], true),
					'children' => array()		
				);	
			}
			if ($this->user->hasPermission('access', 'extension/purpletree_multivendor/sellercustomfield')) {
				$purpletree_multivendor[] = array(
					'name'	   => $this->language->get('text_pt_customfield'),
					'href'     => $this->url->link('extension/purpletree_multivendor/sellercustomfield', 'user_token=' . $this->session->data['user_token'], true),
					'children' => array()		
				);	
			}
			
			if ($this->user->hasPermission('access', 'extension/purpletree_multivendor/sellerproducts')) {
				$purpletree_multivendor[] = array(
					'name'	   => $this->language->get('text_pt_sellerproducts'),
					'href'     => $this->url->link('extension/purpletree_multivendor/sellerproducts', 'user_token=' . $this->session->data['user_token'], true),
					'children' => array()		
				);	
			}
			if($this->config->get('module_purpletree_multivendor_seller_product_template')){
			if ($this->user->hasPermission('access', 'extension/purpletree_multivendor/admintemplate')) {
				$purpletree_multivendor[] = array(
					'name'	   => $this->language->get('text_admintemplate'),
					'href'     => $this->url->link('extension/purpletree_multivendor/admintemplate', 'user_token=' . $this->session->data['user_token'], true),
					'children' => array()		
				);	
			}
			if ($this->user->hasPermission('access', 'extension/purpletree_multivendor/admintemplate')) {
				$purpletree_multivendor[] = array(
					'name'	   => $this->language->get('text_sellertemplate'),
					'href'     => $this->url->link('extension/purpletree_multivendor/producttemplate', 'user_token=' . $this->session->data['user_token'], true),
					'children' => array()		
				);	
			}
			}
			$orderstatus = 0;
			if(null !== $this->config->get('module_purpletree_multivendor_commission_status')) {
				$orderstatus = $this->config->get('module_purpletree_multivendor_commission_status');
			}
			if ($this->user->hasPermission('access', 'extension/purpletree_multivendor/sellerorders')) {
				$purpletree_multivendor[] = array(
					'name'	   => $this->language->get('text_pt_sellerorders'),
					'href'     => $this->url->link('extension/purpletree_multivendor/sellerorders', 'filter_order_status='."".'&filter_admin_order_status='."".'&user_token=' . $this->session->data['user_token'], true),
					'children' => array()		
				);	
			}
			if ($this->user->hasPermission('access', 'extension/purpletree_multivendor/commissioninvoice')) {
				$purpletree_multivendor[] = array(
					'name'	   => $this->language->get('text_pt_commissioninvoice'),
					'href'     => $this->url->link('extension/purpletree_multivendor/commissioninvoice', 'user_token=' . $this->session->data['user_token'], true),
					'children' => array()		
				);	
			}
			if ($this->user->hasPermission('access', 'extension/purpletree_multivendor/sellercommission')) {
				$purpletree_multivendor[] = array(
					'name'	   => $this->language->get('text_pt_sellercommission'),
					'href'     => $this->url->link('extension/purpletree_multivendor/sellercommission', 'user_token=' . $this->session->data['user_token'], true),
					'children' => array()		
				);	
			}			
			if ($this->user->hasPermission('access', 'extension/purpletree_multivendor/sellerreviews')) {
				$purpletree_multivendor[] = array(
					'name'	   => $this->language->get('text_pt_sellerreviews'),
					'href'     => $this->url->link('extension/purpletree_multivendor/sellerreviews', 'user_token=' . $this->session->data['user_token'], true),
					'children' => array()		
				);	
			}
			if ($this->user->hasPermission('access', 'extension/purpletree_multivendor/sellercontacts')) {
				$purpletree_multivendor[] = array(
					'name'	   => $this->language->get('text_pt_sellercontacts'),
					'href'     => $this->url->link('extension/purpletree_multivendor/sellercontacts', 'user_token=' . $this->session->data['user_token'], true),
					'children' => array()		
				);	
			}
			if ($this->user->hasPermission('access', 'extension/purpletree_multivendor/sellerenquiries')) {
				$purpletree_multivendor[] = array(
					'name'	   => $this->language->get('text_pt_seller_enquiries'),
					'href'     => $this->url->link('extension/purpletree_multivendor/sellerenquiries', 'user_token=' . $this->session->data['user_token'], true),
					'children' => array()		
				);	
			}
			//***** Seller area ******//
			if ($this->user->hasPermission('access', 'extension/purpletree_multivendor/sellerarea')) {
				$purpletree_multivendor[] = array(
					'name'	   => $this->language->get('text_pt_seller_area'),
					'href'     => $this->url->link('extension/purpletree_multivendor/sellerarea', 'user_token=' . $this->session->data['user_token'], true),
					'children' => array()		
				);	
			}
			//***** Seller area ******//
		   /*********   Purpletree Multivendor Seller Bloog   ************/
		   if ($this->config->get('module_purpletree_sellerblog_status')) {
			$purpletree_multivendor_seller_blog = array();
			
				if ($this->user->hasPermission('access', 'extension/purpletree_multivendor/sellerblogpost')) {
				$purpletree_multivendor_seller_blog[] = array(
					'name'	   => $this->language->get('text_blog_post'),
					'href'     => $this->url->link('extension/purpletree_multivendor/sellerblogpost', 'user_token=' . $this->session->data['user_token'], true),
					'children' => array()		
				);	
			}
				if ($this->user->hasPermission('access', 'extension/purpletree_multivendor/sellerblogcomment')) {
				$purpletree_multivendor_seller_blog[] = array(
					'name'	   => $this->language->get('text_blog_comment'),
					'href'     => $this->url->link('extension/purpletree_multivendor/sellerblogcomment', 'user_token=' . $this->session->data['user_token'], true),
					'children' => array()		
				);	
			}
		
			if ($purpletree_multivendor_seller_blog) {
				$purpletree_multivendor[] = array(				
					'name'	   => $this->language->get('text_seller_purpletree_blog'),
					'href'     => '',
					'children' => $purpletree_multivendor_seller_blog
				);	
			}
			}
		  /*********   End Purpletree Multivendor Seller Bloog   ************/
			
			if ($this->user->hasPermission('access', 'extension/purpletree_multivendor/categoriescommission')) {
				$purpletree_multivendor[] = array(
					'name'	   => $this->language->get('text_pt_categoriescommission'),
					'href'     => $this->url->link('extension/purpletree_multivendor/categoriescommission', 'user_token=' . $this->session->data['user_token'], true),
					'children' => array()		
				);	
			}
			if($this->config->get('module_purpletree_multivendor_shippingtype')){
				if ($this->user->hasPermission('access', 'extension/purpletree_multivendor/geozone')) {
					$purpletree_multivendor[] = array(
						'name'	   => $this->language->get('text_pt_shipping'),
						'href'     => $this->url->link('extension/purpletree_multivendor/geozone', 'user_token=' . $this->session->data['user_token'], true),
						'children' => array()		
					);	
				}
			}else{
				if ($this->user->hasPermission('access', 'extension/purpletree_multivendor/shipping')) {
				$purpletree_multivendor[] = array(
			    'name'  => $this->language->get('text_pt_shipping'),
				'href'  => $this->url->link('extension/purpletree_multivendor/shipping', 'user_token=' . $this->session->data['user_token'], true),
					'children' => array()		
				);	
			}
			}
			if ($this->user->hasPermission('access', 'extension/purpletree_multivendor/bulkproductupload')) {				$purpletree_multivendor[] = array(
			    'name'  => $this->language->get('text_pt_bulkproductupload'),
				'href'  => $this->url->link('extension/purpletree_multivendor/bulkproductupload', 'user_token=' . $this->session->data['user_token'], true),
					'children' => array()		
				);	
			}
			
			
				if ($this->user->hasPermission('access', 'extension/purpletree_multivendor/subscriptionplan')) {
				if($this->config->get('module_purpletree_multivendor_subscription_plans')) {
				$purpletree_multivendor[] = array(
				'name'  => $this->language->get('text_pt_vendor_subscription_plan'),
				'href'  => $this->url->link('extension/purpletree_multivendor/subscriptionplan', 'user_token=' . $this->session->data['user_token'], true),
					'children' => array()		
				);	
				}
			}
			
			if ($this->user->hasPermission('access', 'extension/purpletree_multivendor/subscriptionplan')) {
				if($this->config->get('module_purpletree_multivendor_subscription_plans')) {
				$purpletree_multivendor[] = array(
				'name'  => $this->language->get('text_pt_subscription_invoice'),
				'href'  => $this->url->link('extension/purpletree_multivendor/subscriptionplan_pendinginvoice', 'user_token=' . $this->session->data['user_token'], true),
					'children' => array()		
				);	
				}
			}
			
			if ($this->user->hasPermission('access', 'extension/purpletree_multivendor/managesubscriptionplan')) {
			if($this->config->get('module_purpletree_multivendor_subscription_plans')) {
			$purpletree_multivendor[] = array(
				'name'  => $this->language->get('text_pt_manage_subscription_plan'),
				'href'  => $this->url->link('extension/purpletree_multivendor/managesubscriptionplan', 'user_token=' . $this->session->data['user_token'], true),
					'children' => array()		
				);
			}				
			}
			if ($this->user->hasPermission('access', 'extension/purpletree_multivendor/planinvoicestatus')) {
			$purpletree_multivendor[] = array(
				'name'  => $this->language->get('text_pt_plan_invoice_status'),
				'href'  => $this->url->link('extension/purpletree_multivendor/planinvoicestatus', 'user_token=' . $this->session->data['user_token'], true),
					'children' => array()		
				);	
			}
			
			if ($this->user->hasPermission('access', 'extension/purpletree_multivendor/selleremail')) {				$purpletree_multivendor[] = array(
				'name'  => $this->language->get('text_pt_selleremail'),
				'href'  => $this->url->link('extension/purpletree_multivendor/selleremail', 'user_token=' . $this->session->data['user_token'], true),
					'children' => array()		
				);	
			}
			
			if ($this->user->hasPermission('access', 'extension/purpletree_multivendor/upgradedatabase')) {				$purpletree_multivendor[] = array(
				'name'  => $this->language->get('text_pt_upgradedatabase'),
				'href'  => $this->url->link('extension/purpletree_multivendor/upgradedatabase', 'user_token=' . $this->session->data['user_token'], true),
					'children' => array()		
				);	
			}
			
			if ($purpletree_multivendor) {
				$data['menus'][] = array(
					'id'       => 'menu-purpletree-multivendor',
					'icon'	   => 'fa-user', 
					'name'	   => $this->language->get('text_pt_multivendor'),
					'href'     => '',
					'children' => $purpletree_multivendor
				);	
			}
			}
			]]></add>
		</operation>
		<operation error="skip">
				<search><![CDATA[$this->load->language('common/column_left');]]></search>
				<add position="before"><![CDATA[
					$this->load->language('customer/ptscustomer');
					
				]]></add>
			</operation>
	</file>
	<file path="admin/controller/extension/extension/module.php">
		<operation error="skip">
			<search><![CDATA[$this->model_setting_extension->install('module', $this->request->get['extension']);]]></search>
			<add position="after"><![CDATA[
			/***********    Create Tables For Multivendor Extension when module installs     ***********/
			if($this->request->get['extension']=="purpletree_multivendor"){
			$query = $this->db->query("SHOW TABLES LIKE '" . DB_PREFIX . "purpletree_vendor_stores'");	
				if($query->num_rows==0) 
		{
			$seller_layout = $this->db->query("SELECT layout_id FROM " . DB_PREFIX . "layout WHERE name='Account'");
			
			if($seller_layout->num_rows > 0){
				$data = $seller_layout->row;
					$this->db->query("INSERT into " . DB_PREFIX . "layout_route SET layout_id='".$data['layout_id']."', store_id='0', route='extension/account/%'");	
			}
		$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_stores` (
  							`id` int(11) NOT NULL AUTO_INCREMENT,
  							`seller_id` int(11) NOT NULL,
  							`store_name` varchar(256) NOT NULL,
  							`store_logo` varchar(150) NOT NULL,
  							`store_email` varchar(200) NOT NULL,
  							`store_phone` varchar(32) NOT NULL,
  							`store_banner` varchar(150) NOT NULL,
  							`document` varchar(150) NOT NULL,
  							`store_description` text NOT NULL,
  							`store_address` text NOT NULL,
  							`store_city` varchar(200) NOT NULL,
  							`store_country` int(11) NOT NULL,
  							`store_state` int(11) NOT NULL,
  							`store_zipcode` varchar(11) NOT NULL,
							`store_area` varchar(255) NOT NULL,
  							`store_shipping_policy` text NOT NULL,
							`store_return_policy` text NOT NULL,
							`store_meta_keywords` text NOT NULL,
							`store_meta_descriptions` text NOT NULL,
							`store_bank_details` varchar(356) NOT NULL,
  							`store_tin` varchar(50) NOT NULL,
							`store_shipping_type` varchar(50) NOT NULL,
							`store_shipping_order_type` varchar(50) NOT NULL,
  							`store_shipping_charge` decimal(6,2) NULL DEFAULT NULL,
							`store_live_chat_enable` tinyint(1) NOT NULL,
							`store_live_chat_code` text NOT NULL,
  							`store_status` tinyint(1) NOT NULL,
  							`store_commission` float(6,4) NULL DEFAULT NULL,
  							`is_removed` tinyint(1) NOT NULL,
  							`store_created_at` date NOT NULL,
  							`store_updated_at` date NOT NULL,
  							`seller_paypal_id` varchar(50) NOT NULL,
							`store_image` varchar(50) NOT NULL,
							`store_video` text NOT NULL,
							`google_map` text NOT NULL,
							`google_map_link` text NOT NULL,
							`store_timings` text NOT NULL,
							`multi_store_id` varchar(100) NOT NULL,
							`vacation` tinyint(1) NOT NULL,
							`sort_order` int(11) NOT NULL,
  							PRIMARY KEY (`id`)  ) CHARACTER SET utf8 COLLATE utf8_unicode_ci
						");
						$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_social_links` (
								`id` int(11) NOT NULL AUTO_INCREMENT,
								`store_id` int(11) NOT NULL,
								`facebook_link` varchar(255) NOT NULL,
								`google_link` varchar(255) NOT NULL,
								`instagram_link` varchar(255) NOT NULL,
								`twitter_link` varchar(255) NOT NULL,
								`pinterest_link` varchar(255) NOT NULL,
								`wesbsite_link` varchar(255) NOT NULL,	
								`whatsapp_link` varchar(255) NOT NULL,	
								PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
			            ");
				
				$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_products` (
  							`id` int(11) NOT NULL AUTO_INCREMENT,
  							`seller_id` int(11) NOT NULL,
  							`product_id` int(11) NOT NULL,
							`is_featured` int(11) NOT NULL,
							`is_category_featured` int(11) NOT NULL,
							`delivery_address` varchar(255) NOT NULL,
							`deliveraddresslat` varchar(255) NOT NULL,
							`deliveraddresslon` varchar(255) NULL,
  							`is_approved` tinyint(1) NOT NULL,
  							`created_at` date NOT NULL,
  							`updated_at` date NOT NULL,
							`vacation` tinyint(1) NOT NULL,
  							PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
						");
				$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_orders` (
  							`id` int(11) NOT NULL AUTO_INCREMENT,
  							`seller_id` int(11) NOT NULL,
  							`product_id` int(11) NOT NULL,
  							`order_id` int(11) NOT NULL,
  							`shipping` decimal(6,2) NOT NULL,
  							`quantity` int(11) NOT NULL,
  							`unit_price` decimal(10,2) NOT NULL,
  							`total_price` decimal(10,2) NOT NULL,
  							`order_status_id` int(3) NOT NULL,
  							`created_at` date NOT NULL,
  							`updated_at` date NOT NULL,
							`seen` int(11) NOT NULL DEFAULT '1',
  							PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
						");
				$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_order_total` (
  							`order_total_id` int(11) NOT NULL AUTO_INCREMENT,
  							`order_id` int(11) NOT NULL,
  							`seller_id` int(11) NOT NULL,
  							`code` varchar(32) NOT NULL,
  							`title` varchar(255) NOT NULL,
  							`value` decimal(15,4) NOT NULL,
  							`sort_order` int(3) NOT NULL,
  							PRIMARY KEY (`order_total_id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
						");
				$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_orders_history` (
  							`id` int(11) NOT NULL AUTO_INCREMENT,
  							`seller_id` int(11) NOT NULL,
  							`order_id` int(11) NOT NULL,
  							`order_status_id` int(11) NOT NULL,
  							`comment` varchar(250) NOT NULL,
							`notify` tinyint(1) NOT NULL,
  							`created_at` date NOT NULL,
  							PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
						");
				$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_reviews` (
  							`id` int(11) NOT NULL AUTO_INCREMENT,
  							`seller_id` int(11) NOT NULL,
  							`customer_id` int(11) NOT NULL,
  							`review_title` varchar(150) NOT NULL,
  							`review_description` text NOT NULL,
  							`rating` int(11) NOT NULL,
  							`status` tinyint(1) NOT NULL,
  							`created_at` date NOT NULL,
  							`updated_at` date NOT NULL,
  							PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
						");
				$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_commissions` (
  							`id` int(11) NOT NULL AUTO_INCREMENT,
  							`seller_id` int(11) NOT NULL,
  							`order_id` int(11) NOT NULL,
  							`product_id` int(11) NOT NULL,
							`vendor_order_table_id` int(11) NOT NULL,
							`commission_fixed` double NOT NULL DEFAULT '0',
							`commission_percent` decimal(4,2) NOT NULL DEFAULT '0.00',
							`commission_shipping` float(8,2) NOT NULL DEFAULT '0.00',
							`invoice_status` int(50) NOT NULL DEFAULT '0',
  							`commission` decimal(10,2) NOT NULL,
  							`status` varchar(50) NOT NULL,
  							`created_at` date NOT NULL,
  							`updated_at` date NOT NULL,
  							PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
						");
				$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_payments` (
  							`id` int(11) NOT NULL AUTO_INCREMENT,
  							`invoice_id` int(11) NOT NULL,
  							`seller_id` int(11) NOT NULL,
  							`transaction_id` varchar(20) NOT NULL,
  							`amount` decimal(10,2) NOT NULL,
  							`payment_mode` varchar(50) NOT NULL,
  							`status` varchar(50) NOT NULL,
  							`created_at` date NOT NULL,
  							`updated_at` date NOT NULL,
  							PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
						");
				       $this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_contact` (
							  `id` int(10) NOT NULL AUTO_INCREMENT,
							  `seller_id` int(10) NOT NULL,
							  `customer_id` int(10) NOT NULL,
							  `contact_from` int(10) NOT NULL,
							  `customer_name` varchar(150) NOT NULL,
							  `customer_email` varchar(150) NOT NULL,
							  `customer_message` text NOT NULL,
							  `created_at` datetime NOT NULL,
							  `updated_at` datetime NOT NULL,
							  `seen` int(11) NOT NULL DEFAULT '1',
							  PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
					");
					$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_categories_commission` (
  							`id` int(11) NOT NULL AUTO_INCREMENT,
  							`category_id` int(11) NOT NULL,
  							`commission` decimal(4,2) NOT NULL,
							`commison_fixed` double NULL DEFAULT NULL,
  							`seller_group` int(50) NOT NULL DEFAULT '1',
  							PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
						");	
						$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_shipping` (
						`id` int(11) NOT NULL AUTO_INCREMENT,
						`seller_id` int(11) NOT NULL,
						`shipping_country` int(11) NOT NULL,
						`zipcode_from` varchar(11) NOT NULL,
						`zipcode_to` varchar(11) NOT NULL,
						`shipping_price` decimal(15,2) NOT NULL,
						`weight_from` decimal(15,2) NOT NULL,
						`weight_to` decimal(15,2) NOT NULL,
						`max_days` int(11) NOT NULL,
						PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
					");
						$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_downloads` (
  							`id` int(11) NOT NULL AUTO_INCREMENT,
  							`download_id` int(11) NOT NULL,
  							`seller_id` int(11) NOT NULL,
  							PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
						");	
						// Subscription Plan
		$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_plan_invoice_status` (
				`status_id` int(11) NOT NULL AUTO_INCREMENT,
				`created_date` datetime NOT NULL,
				`modified_date` datetime NOT NULL,
				PRIMARY KEY (`status_id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
			");
			$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_coupons` (
				`coupon_id` int(11) NOT NULL AUTO_INCREMENT,
				`seller_id` int(11) NOT NULL,
				PRIMARY KEY (`coupon_id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
			");
			$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_attribute` (
				`id` int(11) NOT NULL AUTO_INCREMENT,
				`seller_id` int(11) NOT NULL,
				`attribute_id` int(11) NOT NULL,
				PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
			");		
			$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_attribute_group` (
				`id` int(11) NOT NULL AUTO_INCREMENT,
				`seller_id` int(11) NOT NULL,
				`attribute_group_id` int(11) NOT NULL,
				PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
			");		
			$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_option` (
				`id` int(11) NOT NULL AUTO_INCREMENT,
				`seller_id` int(11) NOT NULL,
				`option_id` int(11) NOT NULL,
				PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
			");
			$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_plan_invoice_status_l` (
				`id` int(11) NOT NULL AUTO_INCREMENT,
				`status_id` int(11) NOT NULL,
				`language_id` int(11) NOT NULL,
				`status` varchar(30) NOT NULL,
				PRIMARY KEY (`id`),FOREIGN KEY (`status_id`) REFERENCES " . DB_PREFIX . "purpletree_vendor_plan_invoice_status(`status_id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
			");
			
			$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_plan` (
				`plan_id` int(11) NOT NULL AUTO_INCREMENT,
				`no_of_product` int(11) NOT NULL,
				`no_of_featured_product` int(10) NOT NULL,
				`no_of_category_featured_product` int(10) NOT NULL,
				`featured_store` int(10) NOT NULL,
				`joining_fee` decimal(15,4) NOT NULL,
				`subscription_price` decimal(15,4) NOT NULL,
				`validity` int(11) NOT NULL,
				`default_subscription_plan` int(1) NOT NULL,
				`status` int(1) NOT NULL,
				`created_date` datetime NOT NULL,
				`modified_date` datetime NOT NULL,
				PRIMARY KEY (`plan_id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
			");	
			
			$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_plan_description` (
				`id` int(11) NOT NULL AUTO_INCREMENT,
				`plan_id` int(11) NOT NULL,
				`language_id` int(11) NOT NULL,
				`plan_name` varchar(30) NOT NULL,
				`plan_description` TEXT NOT NULL,
				`plan_short_description` TEXT NOT NULL,
				PRIMARY KEY (`id`),FOREIGN KEY (`plan_id`) REFERENCES " . DB_PREFIX . "purpletree_vendor_plan(`plan_id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
			");	
				
			$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_seller_plan` (
				`id` int(11) NOT NULL AUTO_INCREMENT,
				`invoice_id` int(11) NOT NULL,
				`plan_id` int(11) NOT NULL,
				`seller_id` int(11) NOT NULL,
				`reminder` int(1) NOT NULL,
				`reminder1` int(1) NOT NULL,
				`reminder2` int(1) NOT NULL,
				`status` int(1) NOT NULL,
				`new_status` int(1) NOT NULL,
				`start_date` datetime NOT NULL,
				`end_date` datetime NOT NULL,
				`new_end_date` datetime NOT NULL,
				`created_date` datetime NOT NULL,
				`modified_date` datetime NOT NULL,
				PRIMARY KEY (`id`),FOREIGN KEY (`plan_id`) REFERENCES " . DB_PREFIX . "purpletree_vendor_plan(`plan_id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
			");	
			
			$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_plan_invoice` (
				`invoice_id` int(11) NOT NULL AUTO_INCREMENT,
				`seller_id` int(11) NOT NULL,
				`plan_id` int(11) NOT NULL,
				`payment_mode` varchar(30) NOT NULL,
				`status_id` int(11) NOT NULL,
				`created_date` datetime NOT NULL,
				PRIMARY KEY (`invoice_id`),FOREIGN KEY (`plan_id`) REFERENCES " . DB_PREFIX . "purpletree_vendor_plan(`plan_id`),FOREIGN KEY (`status_id`) REFERENCES " . DB_PREFIX . "purpletree_vendor_plan_invoice_status(`status_id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
			");	
			
			$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_plan_invoice_item` (
				`id` int(11) NOT NULL AUTO_INCREMENT,
				`invoice_id` int(11) NOT NULL,
				`code` varchar(30) NOT NULL,
				`title` varchar(30) NOT NULL,
				`price` decimal(15,4) NOT NULL,
				`sort_order` int(11) NOT NULL,
				PRIMARY KEY (`id`),FOREIGN KEY (`invoice_id`) REFERENCES " . DB_PREFIX . "purpletree_vendor_plan_invoice(`invoice_id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
			");	

				$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_plan_invoice_history` (
				`id` int(11) NOT NULL AUTO_INCREMENT,
				`invoice_id` int(11) NOT NULL,
				`status_id` int(11) NOT NULL,
				`payment_mode` varchar(30) NOT NULL,
				`transaction_id` varchar(30) NOT NULL,
				`comment` text NOT NULL,
				`created_date` datetime NOT NULL,
				`modified_date` datetime NOT NULL,
				PRIMARY KEY (`id`),FOREIGN KEY (`invoice_id`) REFERENCES " . DB_PREFIX . "purpletree_vendor_plan_invoice(`invoice_id`),FOREIGN KEY (`status_id`) REFERENCES " . DB_PREFIX . "purpletree_vendor_plan_invoice_status(`status_id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
			");
			$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_plan_subscription` (
				`id` int(11) NOT NULL AUTO_INCREMENT,
				`seller_id` int(11) NOT NULL,
				`status_id` int(1) NOT NULL,
				`created_date` datetime NOT NULL,
				`modified_date` datetime NOT NULL,
				PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
			");
			$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_customfield` (
				`id` int(11) NOT NULL AUTO_INCREMENT,
				`custom_field_id` int(11) NOT NULL,
				`step_location` varchar(30) NOT NULL,
				PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
			");
			$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_commission_invoice_items` (
  							`id` int(11) NOT NULL AUTO_INCREMENT,
							`commission_id` int(11) NOT NULL,
							`link_id` int(50) NOT NULL,
  							`order_id` int(50) NOT NULL,
  							`product_id` int(50) NOT NULL,
  							`seller_id` int(50) NOT NULL,
  							`commission_fixed` double NOT NULL DEFAULT '0',
  							`commission_percent` decimal(4,2) NOT NULL DEFAULT '0.00',
  							`commission_shipping` decimal(4,2) NOT NULL DEFAULT '0.00',
  							`total_commission` float(8,2) NOT NULL,
  							PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
						");
						$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_commission_invoice` (
  							`id` int(11) NOT NULL AUTO_INCREMENT,
							`total_amount` decimal(11,2) NOT NULL DEFAULT '0.00',
							`total_commission` decimal(11,2) NOT NULL DEFAULT '0.00',
							`total_pay_amount` decimal(11,2) NOT NULL DEFAULT '0.00',
  							`created_at` date NOT NULL,
  							PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
						");
					// Pending
			$querry = $this->db->query("SELECT * FROM " . DB_PREFIX . "purpletree_vendor_plan_invoice_status WHERE status_id = 1");
			if($querry->num_rows){} else {
			$this->db->query("INSERT INTO " . DB_PREFIX . "purpletree_vendor_plan_invoice_status SET status_id = '1', created_date = NOW(), modified_date = NOW()");
			
			$status_id = $this->db->getLastId();   
			
			$this->load->model('localisation/language');            
		    $languages = $this->model_localisation_language->getLanguages();
			
			foreach ($languages as $language_id ) {
				$this->db->query("INSERT INTO " . DB_PREFIX . "purpletree_vendor_plan_invoice_status_l SET status_id = '" . (int)$status_id . "', language_id = '" . (int)$language_id['language_id'] . "', status = 'Pending'");
			}
			}
			// Pending
			// Complete
			$querry1 = $this->db->query("SELECT * FROM " . DB_PREFIX . "purpletree_vendor_plan_invoice_status WHERE status_id = 2");
			if($querry1->num_rows){} else {
			$this->db->query("INSERT INTO " . DB_PREFIX . "purpletree_vendor_plan_invoice_status SET status_id = '2', created_date = NOW(), modified_date = NOW()");
			
			$status_id = $this->db->getLastId();   
			
			$this->load->model('localisation/language');            
		    $languages = $this->model_localisation_language->getLanguages();
			
			foreach ($languages as $language_id ) {
			$this->db->query("INSERT INTO " . DB_PREFIX . "purpletree_vendor_plan_invoice_status_l SET status_id = '" . (int)$status_id . "', language_id = '" . (int)$language_id['language_id'] . "', status = 'Complete'");
		}
			}
			// Complete
		// Subscription Plan
		       // Start seller blog
					$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_blog_post` (
  							`blog_post_id` int(11) NOT NULL AUTO_INCREMENT,
							`seller_id` int(11) NOT NULL,
  							`image` varchar(255) NOT NULL,  							
  							`sort_order` int(11) NOT NULL,
							`status` tinyint(1) NOT NULL,
							`created_at` datetime NOT NULL,
  							`updated_at` datetime NOT NULL, 							
							PRIMARY KEY (`blog_post_id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
						");
						
                  $this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_blog_post_comment` (
  							`blog_comment_id` int(11) NOT NULL AUTO_INCREMENT,
  							`blog_post_id` int(11) NOT NULL,
  							`name` varchar(150) NOT NULL,
  							`email_id` varchar(150) NOT NULL,
  							`text` text NOT NULL,
							`status` tinyint(1) NOT NULL,
							`created_at` datetime NOT NULL,
  							`updated_at` datetime NOT NULL,
  							PRIMARY KEY (`blog_comment_id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
						");
						
				$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_blog_post_description` (
  							`blog_post_id` int(11) NOT NULL,
  							`language_id` int(11) NOT NULL,
  							`title` varchar(255) NOT NULL,
  							`description` text NOT NULL,
							`meta_title` varchar(255) NOT NULL,
  							`meta_description` varchar(255) NOT NULL,
  							`meta_keyword` varchar(255) NOT NULL,
  							`post_tags` varchar(255) NOT NULL)
							CHARACTER SET utf8 COLLATE utf8_unicode_ci
						");
						// End seller blog
						$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_payment_settlement_history` (
  							`id` int(11) NOT NULL AUTO_INCREMENT,
  							`invoice_id` int(11) NOT NULL,
  							`status_id` int(11) NOT NULL,
  							`payment_mode` varchar(50) NOT NULL,
  							`transaction_id` varchar(50) NOT NULL,
  							`comment` text NOT NULL,
							`created_date` datetime NOT NULL,
  							`modified_date` datetime NOT NULL, 	
							PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
						");	
				$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_enquiries` (
					`id` int(11) NOT NULL AUTO_INCREMENT,
					`seller_id` int(11) NOT NULL,
					`contact_from` int(11) NOT NULL,
					`message` varchar(3000) NOT NULL,
					`created_at` datetime NOT NULL,
					`updated_at` datetime NOT NULL, 
					`seen` int(11) NOT NULL DEFAULT '1',					
					PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
				");
									

	$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_subscription_products` (
				`id` int(11) NOT NULL AUTO_INCREMENT,
				`product_id` int(11) NOT NULL,
				`product_plan_id` int(11) NOT NULL,
				`featured_product_plan_id` int(11) NOT NULL,
				`category_featured_product_plan_id` varchar(255) NOT NULL,
				PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
		");	
    $this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_template` (
				`id` int(11) NOT NULL AUTO_INCREMENT,
				`product_id` int(11) NOT NULL,
				`status` tinyint(1) NOT NULL DEFAULT '0',		
				PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
		");  
	// stripe account
			$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_stripe_account` (				
			`id` int(11) NOT NULL AUTO_INCREMENT,
			`seller_id` int(11) NOT NULL,
			`account_id` varchar(100) NOT NULL,
			`livemode` tinyint(1) NOT NULL DEFAULT '0',
			`scope` varchar(100) NOT NULL,
			`created_date` datetime NOT NULL,
			PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
			");	
	// stripe account	
 	$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_allowed_category` (
				`id` int(11) NOT NULL AUTO_INCREMENT,
				`seller_id` int(11) NOT NULL,
				`category_id` varchar(255) NOT NULL,
				`type` tinyint(1) NOT NULL DEFAULT '1',				
				PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
		"); 	
    $this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_template_products` (				
				`id` int(11) NOT NULL AUTO_INCREMENT,
				`template_id` int(11) NOT NULL,
				`seller_id` int(11) NOT NULL,
				`quantity` int(4) NOT NULL DEFAULT '0',
				`price` decimal(15,4) NOT NULL DEFAULT '0.0000',
				`stock_status_id` int(11) NOT NULL,
				`subtract` tinyint(1) NOT NULL DEFAULT '1',
				`t_description` text NOT NULL,
				`comment` text NOT NULL,
				`status` tinyint(1) NOT NULL DEFAULT '0',				
				PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
		");	
      $this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_cart` (				
				`id` int(11) NOT NULL AUTO_INCREMENT,
                `cart_id` int(11) NOT NULL,
                `seller_id` int(11) NOT NULL,				
				PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
		");		

		$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_adaptive_paykey` (
							`id` int(11) NOT NULL AUTO_INCREMENT,
							`order_id` int(11) NOT NULL,
							`payment_key` VARCHAR(50) NOT NULL,
							PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
						");	
		$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_products_return` (				
					`id` int(11) NOT NULL AUTO_INCREMENT,
					`return_id` int(11) NOT NULL,
					`order_id` int(11) NOT NULL,
					`product_id` int(11) NOT NULL,
					`seller_id` int(11) NOT NULL,				
					`status` tinyint(1) NOT NULL DEFAULT '0',
					`created_date` datetime NOT NULL,
					`modified_date` datetime NOT NULL, 
					PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
				");			
		$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_geozone` (				
					`id` int(11) NOT NULL AUTO_INCREMENT,
					`geo_zone_id` int(11) NOT NULL,
					`seller_id` int(11) NOT NULL,
					`weight_from` decimal(15,4) NOT NULL,
					`weight_to` decimal(15,4) NOT NULL,
					`price` decimal(15,4) NOT NULL,
					PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
		");
		//// quick order ////
		$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_quick_order_product` (
				`id` int(11) NOT NULL AUTO_INCREMENT,
				`seller_id` int(11) NOT NULL,
				`product_id` int(11) NOT NULL,
				`status` tinyint(1) NOT NULL,
				PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
			");
		//// end quick order ////
		///////  Start email  template ///////
		///////  Start seller email ///////
			$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_email` (
			`id` int(11) NOT NULL AUTO_INCREMENT,
			`language_code` varchar(256) NOT NULL,
			`email_code` varchar(256) NOT NULL,
			`title` varchar(256) NOT NULL,
			`subject` varchar(256) NOT NULL,
			`new_subject` varchar(256) NOT NULL,
			`message` text NOT NULL,
			`new_message` text NOT NULL,
			`note` varchar(256) NOT NULL,
			`note_subject` varchar(256) NOT NULL,
			`type` varchar(256) NOT NULL,
			PRIMARY KEY (`id`)  ) CHARACTER SET utf8 COLLATE utf8_unicode_ci
			");
			//// vacation mode  ////
		    $this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_store_time` (
				`id` int(11) NOT NULL AUTO_INCREMENT,
				`store_id` int(11) NOT NULL,
				`day_id` int(11) NOT NULL,
				`day_name` varchar(30) NOT NULL,
				`open_time` time NOT NULL,
				`close_time` time NOT NULL,
				PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
			");
			$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_holiday` (
				`id` int(11) NOT NULL AUTO_INCREMENT,
				`store_id` int(11) NOT NULL,
		        `date` date NOT NULL,	
				PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
			");
			//// vacation mode  ////
			
			// cusotmer seller enquiries 
			$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_customer_vendor_enquiries` (
				`id` int(11) NOT NULL AUTO_INCREMENT,
				`chat_id` int(11) NOT NULL,
				`image_name` varchar(255) NOT NULL,
				`image` varchar(255) NOT NULL,
				PRIMARY KEY (`id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
			");
			// cusotmer seller enquiries 
			//// Seller area /////
			$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_area` (
				`area_id` int(11) NOT NULL AUTO_INCREMENT,
				`language_id` int(11) NOT NULL,
				`area_name` varchar(150) NOT NULL,				
				`sort_order` int(11) NOT NULL,
				`status` tinyint(1) NOT NULL,
				PRIMARY KEY (`area_id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
			");	
			
			$this->db->query("CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "purpletree_vendor_area_discaription` (
				`id` int(11) NOT NULL AUTO_INCREMENT,
				`area_id` int(11) NOT NULL,
				`language_id` int(11) NOT NULL,
				`area_name` varchar(150) NOT NULL,		
				PRIMARY KEY (`id`),FOREIGN KEY (`area_id`) REFERENCES " . DB_PREFIX . "purpletree_vendor_area(`area_id`)) CHARACTER SET utf8 COLLATE utf8_unicode_ci
			");
		//// Seller area /////
		//// seller event ///// 
		$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "event WHERE  code = 'pts_getjournal3filterproducts'");
			if($query->num_rows){} else {
		        $this->db->query("INSERT INTO `" . DB_PREFIX . "event` ( `code`, `trigger`, `action`, `status`) VALUES ('pts_getjournal3filterproducts', 'catalog/model/journal3/filter/getProducts/after', 'extension/account/purpletree_multivendor/events/getFilterProducts', 1)");
		   }
		
		$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "event WHERE  code = 'pts_getfilterproducts'");
			if($query->num_rows){} else {
		        $this->db->query("INSERT INTO `" . DB_PREFIX . "event` ( `code`, `trigger`, `action`, `status`) VALUES ('pts_getfilterproducts', 'catalog/model/catalog/product/getProducts/after', 'extension/account/purpletree_multivendor/events/getFilterProducts', 1)");
		   }
		   
		 $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "event WHERE  code = 'pts_getfiltertotalproducts'");
			if($query->num_rows){} else {
		        $this->db->query("INSERT INTO `" . DB_PREFIX . "event` ( `code`, `trigger`, `action`, `status`) VALUES ('pts_getfiltertotalproducts', 'catalog/model/catalog/product/getTotalProducts/after', 'extension/account/purpletree_multivendor/events/getFilterTotalProducts', 1)");
		   }
		  $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "event WHERE  code = 'pts_getfilterproduct'");
			if($query->num_rows){} else {
		        $this->db->query("INSERT INTO `" . DB_PREFIX . "event` ( `code`, `trigger`, `action`, `status`) VALUES ('pts_getfilterproduct', 'catalog/model/catalog/product/getProduct/after', 'extension/account/purpletree_multivendor/events/getFilterProduct', 1)");
		   }

		   $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "event WHERE  code = 'pts_admin_header'");
			if($query->num_rows){} else {
		        $this->db->query("INSERT INTO `" . DB_PREFIX . "event` ( `code`, `trigger`, `action`, `status`) VALUES ('pts_admin_header', 'catalog/controller/common/header/after', 'extension/account/purpletree_multivendor/events/beforeheader', 1)");
		   }
		///end seller event ///	
		//***** Start admin event ******//
		 $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "event WHERE  code = 'pts_addShippingCharge'");
			if($query->num_rows){} else {
		        $this->db->query("INSERT INTO `" . DB_PREFIX . "event` ( `code`, `trigger`, `action`, `status`) VALUES ('pts_addShippingCharge', 'admin/model/catalog/product/addProduct/after', 'extension/purpletree_multivendor/events/addShippingCharge', 1)");
		   }
		   $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "event WHERE  code = 'pts_editShippingCharge'");
			if($query->num_rows){} else {
		        $this->db->query("INSERT INTO `" . DB_PREFIX . "event` ( `code`, `trigger`, `action`, `status`) VALUES ('pts_editShippingCharge', 'admin/model/catalog/product/editProduct/after', 'extension/purpletree_multivendor/events/editShippingCharge', 1)");
		   }
		//***** end admin event ******//
				       ####----Start Metal code-----####
		# create new fields metal and price_extra in table product if not exists
		    $field_query = $this->db->query("SHOW COLUMNS FROM `" . DB_PREFIX . "product` LIKE 'metal'");
			$field1_query = $this->db->query("SET SESSION sql_mode =''");
			if (!$field_query->num_rows) {
			$this->db->query("ALTER TABLE `" . DB_PREFIX . "product`  ADD `metal` INT(1) NOT NULL DEFAULT '0' AFTER `product_id`");
			}
			
			$field_query = $this->db->query("SHOW COLUMNS FROM `" . DB_PREFIX . "product` LIKE 'price_extra'");
			if (!$field_query->num_rows) {
			$this->db->query("ALTER TABLE `" . DB_PREFIX . "product`  ADD `price_extra` DECIMAL(15,4) NOT NULL DEFAULT '0.00' AFTER `price`");
			}
			
			$field_query = $this->db->query("SHOW COLUMNS FROM `" . DB_PREFIX . "product` LIKE 'price_extra_type'");
			if (!$field_query->num_rows) {
			$this->db->query("ALTER TABLE `" . DB_PREFIX . "product`  ADD `price_extra_type` INT(1) NOT NULL DEFAULT '0' AFTER `price`");
			}
		####----Edit Metal code-----####
		////free shipping///
		$field_query = $this->db->query("SHOW COLUMNS FROM `" . DB_PREFIX . "product` LIKE 'shipping_charge'");
		if (!$field_query->num_rows) {
	     $this->db->query("ALTER TABLE `" . DB_PREFIX . "product`  ADD `shipping_charge` double NULL DEFAULT NULL AFTER `shipping`");
		}
		///end free shipping ///
/////-------------------Seller Email Template-------------------------/////
$this->load->model('extension/purpletree_multivendor/upgradedatabase');
$this->model_extension_purpletree_multivendor_upgradedatabase->addtemplateinsert();
//////-------------------End email template------------------------///////
			}
			}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$this->model_setting_extension->uninstall('module', $this->request->get['extension']);]]></search>
			<add position="after"><![CDATA[
			/*******  Drop Tables Of Multivendor Extension when module un-installs  *******/
			if($this->request->get['extension']=="purpletree_multivendor"){
				$query = $this->db->query("SHOW TABLES LIKE '" . DB_PREFIX . "purpletree_vendor_stores'");	
				if($query->num_rows==1) 
				{
				$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_cart");
				$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_template");
				$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_allowed_category");
				$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_template_products");
				$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_downloads");
				$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_shipping");
				$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_stores");
				$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_products");
				$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_orders");
				$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_reviews");
				$this->db->query("DROP TABLE IF EXISTS ".DB_PREFIX."purpletree_vendor_commissions");
				$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_payments");
				$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_order_total");
		        $this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_orders_history");
		
				$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_contact");
				$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_customer_vendor_enquiries");
					
					//subscription plan_description
				
					$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_plan_description");
					
					$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_seller_plan");
					
					$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_plan_invoice_item");
					
					$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_plan_invoice_history");
					
					$this->db->query("DELETE FROM " . DB_PREFIX . "seo_url WHERE query LIKE '%seller_store_id%'");
					$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_categories_commission");
						
					$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_plan_invoice");
					
					$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_plan");
					
					$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_plan_invoice_status_l");
					
					$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_plan_invoice_status");
					$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_plan_subscription");
					//Start Seller blog
					$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_blog_post_description");
                     $this->db->query("DELETE FROM ". DB_PREFIX ."seo_url WHERE query LIKE 'blog_post%'");	
					$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_blog_post_comment");
					$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_blog_post");                				
				//End seller blog
					$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_commission_invoice_items");
					$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_commission_invoice");
					$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_payment_settlement_history");
					$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_subscription_products");
					$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."pts_vendor_shipping");
					$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_social_links");
					$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_adaptive_paykey");
					$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_products_return");
					$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_geozone");
					$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_coupons");
					$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_email");
					$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_customfield");			
					$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_quick_order_product");		$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_holiday");					
					$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_store_time");						
					$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_area_discaription");
					$this->db->query("DROP TABLE IF EXISTS ". DB_PREFIX ."purpletree_vendor_area");
				   //// seller event Delete /////					
		            $this->db->query("DELETE FROM " . DB_PREFIX . "event WHERE  code = 'pts_getfilterproducts'");		   
		           $this->db->query("DELETE FROM " . DB_PREFIX . "event WHERE  code = 'pts_getfiltertotalproducts'");			
		           $this->db->query("DELETE FROM " . DB_PREFIX . "event WHERE  code = 'pts_getfilterproduct'");
				   $this->db->query("DELETE FROM " . DB_PREFIX . "event WHERE  code = 'pts_admin_header'");
		          ///end seller event ///
				  //***** Start admin event ******//
				  $this->db->query("DELETE FROM " . DB_PREFIX . "event WHERE  code = 'pts_addShippingCharge'");
				  $this->db->query("DELETE FROM " . DB_PREFIX . "event WHERE  code = 'pts_editShippingCharge'");		
		          //***** end admin event ******//
					
				}
			}
			]]></add>
		</operation>
	</file>
	<file path="system/library/document.php">
		<operation error="log">
			<search><![CDATA[private $styles = array();]]></search>
			<add position="after"><![CDATA[
				private $stylespts = array();
				private $scriptspts = array();
			]]></add>
		</operation>
		<operation error="log">
			<search><![CDATA[function addStyle]]></search>
			<add position="before"><![CDATA[
					public function addStylepts($href, $rel = 'stylesheet', $media = 'screen') {
						$this->stylespts[$href] = array(
							'href'  => $href,
							'rel'   => $rel,
							'media' => $media
						);
					}
					public function getStylespts() {
						return $this->stylespts;
					}
					public function addScriptpts($href, $postion = 'header') {
						$this->scriptspts[$postion][$href] = $href;
					}
					public function getScriptspts($postion = 'header') {
						if (isset($this->scriptspts[$postion])) {
							return $this->scriptspts[$postion];
						} else {
							return array();
						}
					}
			]]></add>
		</operation>
	</file>	
	<file path="catalog/controller/common/footer.php">
		<operation error="skip">
			<search><![CDATA[public function index() {]]></search>
			<add position="after"><![CDATA[
					$data['seller_chat'] = '';
			if(NULL !== $this->config->get('module_purpletree_multivendor_status')){
			if($this->config->get('module_purpletree_multivendor_status')){
				if(NULL !== $this->config->get('module_purpletree_multivendor_allow_live_chat')) {
				if($this->config->get('module_purpletree_multivendor_allow_live_chat')) {	
				if(isset($this->session->data['seller_sto_page'])){
					$seller_store_idd = $this->session->data['seller_sto_page'];
					  $query = $this->db->query("SELECT `store_live_chat_enable` ,`store_live_chat_code` FROM " . DB_PREFIX . "purpletree_vendor_stores WHERE `id` = '" . (int)$seller_store_idd . "'");
					    if ($query->num_rows) {
							if($query->row['store_live_chat_enable']) {
								if($query->row['store_live_chat_code'] != '') {
										unset($this->session->data['seller_sto_page']);
									$data['seller_chat'] = '1';
								}
							}
						}
				}
				}
				}
			}
			}
			]]></add>
		</operation>
	</file>
	<file path="catalog/controller/extension/module/account.php">
		<operation error="skip">
			<search><![CDATA[public function index() {]]></search>
			<add position="after"><![CDATA[$data['sellercontact'] = $this->url->link('extension/account/purpletree_multivendor/sellercontact/customerContactlist', '', true);]]></add>
		</operation>
	</file>
	<file path="admin/controller/startup/permission.php">
		<operation error="skip">
			<search><![CDATA[$extension = array(]]></search>
			<add position="after"><![CDATA['extension/purpletree_multivendor',]]></add>
		</operation>
	</file>
	<file path="admin/model/catalog/download.php">
		<operation error="skip">
		<search><![CDATA[public function deleteDownload($download_id) {]]></search>
				<add position="after"><![CDATA[
$this->db->query("DELETE FROM " . DB_PREFIX . "purpletree_vendor_downloads WHERE download_id = '" . (int)$download_id . "'");
				]]></add>
			</operation>
			<operation error="skip">
		<search><![CDATA[$download_id = $this->db->getLastId();]]></search>
				<add position="after"><![CDATA[
$this->db->query("INSERT INTO " . DB_PREFIX . "purpletree_vendor_downloads SET download_id='" .(int)$download_id. "', seller_id='".(int)$data['seller_id']."'");
				]]></add>
			</operation>
			<operation error="skip">
		<search><![CDATA[public function editDownload($download_id, $data) {]]></search>
				<add position="after"><![CDATA[
$this->db->query("UPDATE " . DB_PREFIX . "purpletree_vendor_downloads SET seller_id ='" . (int)$data['seller_id'] . "' WHERE download_id = '" . (int)$download_id . "'");
				]]></add>
			</operation>
			<operation error="skip">
		<search><![CDATA[public function getDownloads($data = array()) {]]></search>
				<add position="before"><![CDATA[
	public function getDownloadSellerid($download_id) {
		$query = $this->db->query("SELECT pvd.seller_id,pvs.store_name FROM " . DB_PREFIX . "purpletree_vendor_downloads pvd LEFT JOIN " . DB_PREFIX . "purpletree_vendor_stores pvs ON (pvs.seller_id = pvd.seller_id) WHERE pvd.download_id = '" . (int)$download_id . "'");

		if($query->num_rows > 0) {
			return $query->row;
		} else {
			return "";
		}
	}
				]]></add>
			</operation>
	</file>
	<file path="admin/view/template/catalog/download_list.twig">
		<operation error="skip">
		<search><![CDATA[<td class="text-right">{{ column_action }}</td>]]></search>
				<add position="before"><![CDATA[
					<td class="text-right">{{ column_store }}</td>
				]]></add>
			</operation>
			<operation error="skip">
		<search><![CDATA[<td class="text-right">{{ download.date_added }}</td>]]></search>
				<add position="after"><![CDATA[
					<td class="text-right">{{ download.seller }}</td>
				]]></add>
			</operation>
		</file>
	<file path="admin/view/template/catalog/download_form.twig">
		<operation error="skip">
		<search><![CDATA[{{ footer }}]]></search>
				<add position="before"><![CDATA[<style>
.catdivdrop ul{
	overflow: auto;
	max-height: 100px;
	width: 30%;
}
</style>]]></add>
			</operation>
			<operation error="skip">
		<search><![CDATA[<form action="{{ action }}" method="post" enctype="multipart/form-data" id="form-download" class="form-horizontal">]]></search>
				<add position="after"><![CDATA[
						<div class="form-group required">
						    <label class="col-sm-2 control-label" for="input-filter_name">{{ column_store }}</label>
						    <div class="col-sm-10 catdivdrop">
						      <input type="hidden" name="seller_id" value="{{ seller_id }}" class="form-control ptsnewcss" />
						       <input type="text" name="filter_name" value="{% if seller_id or seller_id=='0' %}{{ filter_name }}{% endif %}" placeholder="{{ column_store }}" id="input-name" class="form-control" />
							 {% if error_filter_name %}
                            <div class="text-danger">{{ error_filter_name }}</div>
                            {% endif %}</div>
						  </div>
				]]></add>
			</operation>
			<operation error="skip">
		<search><![CDATA[$('#button-upload').on('click', function() {]]></search>
				<add position="before"><![CDATA[
						$('input[name=\'filter_name\']').autocomplete({
							'source': function(request, response) {
							$.ajax({
								url: 'index.php?route=extension/purpletree_multivendor/shipping/autocompleteseller&user_token={{ user_token }}',
								dataType: 'json',	
									success: function(json) {
										response($.map(json, function(item) {
											return {
												label: item['name'],
												value: item['vendor_id']
											}
										}));
									}
							});
								$('input[name=\'seller_id\']').val('');

							},
							'select': function(item) {
							$('input[name=\'filter_name\']').val(item['label']);
							$('input[name=\'seller_id\']').val(item['value']);
							}	
							});
				]]></add>
			</operation>
		</file>
	<file path="admin/controller/catalog/download.php">
		<operation error="skip">
		<search><![CDATA[if (isset($this->request->post['download_description'])) {]]></search>
				<add position="before"><![CDATA[
				//seller
		$seller = $this->model_catalog_download->getDownloadSellerid($data['download_id']);
		$sellerName = $this->language->get('na');
		$sellerId    =0;
		if (isset($this->request->post['filter_name'])) {
					$data['filter_name'] = $this->request->post['filter_name'];		
		} elseif (!empty($download_info)) {
			if($seller != '') {
						$sellerName = $seller['store_name'];
					}
			$data['filter_name'] = $sellerName;
		} else {
			$data['filter_name'] = '';
		}
		if (isset($this->request->post['seller_id'])) {
				$data['seller_id'] = $this->request->post['seller_id'];
		} elseif (!empty($download_info)) {
						if($seller != '') {
							$sellerId = $seller['seller_id'];
					}
					$data['seller_id']  = $sellerId;
		} else {
			$data['seller_id'] = '';
		}
		// seller
				]]></add>
			</operation>
			<operation error="skip">
		<search><![CDATA[if (isset($this->error['filename'])) {]]></search>
				<add position="before"><![CDATA[
						// seller
				if (isset($this->error['filter_name'])) {
			$data['error_filter_name'] = $this->error['filter_name'];
		} else {
			$data['error_filter_name'] = '';
		}
		//seller
				]]></add>
			</operation>
			<operation error="skip">
		<search><![CDATA[if (!is_file(DIR_DOWNLOAD . $this->request->post['filename'])) {]]></search>
				<add position="before"><![CDATA[
				//seller
		if (utf8_strlen($this->request->post['filter_name']) == '') {
			$this->error['filter_name'] = $this->language->get('error_filter_name');
		}
		if(!isset($this->request->post['seller_id']) || $this->request->post['seller_id'] == '') {
			$this->error['filter_name'] = $this->language->get('error_filter_name');
		}
		//seller
				]]></add>
			</operation>
			<operation error="skip">
		<search><![CDATA[$data['downloads'][] = array(]]></search>
				<add position="before"><![CDATA[
				$this->load->language('customer/ptscustomer');
					$seller = $this->model_catalog_download->getDownloadSellerid($result['download_id']);
					$sellerName = '';
					if($seller != '') {
						$sellerName = $seller['store_name'];
					}
				]]></add>
			</operation>
			<operation error="skip">
		<search><![CDATA[$data['downloads'][] = array(]]></search>
				<add position="after"><![CDATA[
					'seller'        => $sellerName,
				]]></add>
			</operation>
			<operation error="skip">
		<search><![CDATA[$this->load->language('catalog/download');]]></search>
				<add position="after"><![CDATA[
					$this->load->language('customer/ptscustomer');
				]]></add>
			</operation>
</file>
	<file path="admin/controller/catalog/product.php">
	       <operation error="skip">
			<search><![CDATA[$data['breadcrumbs'] = array();]]></search>
			<add position="before"><![CDATA[			
			///Help code///	
			$data['module_purpletree_multivendor_status'] = $this->config->get('module_purpletree_multivendor_status');
			if($this->config->get('module_purpletree_multivendor_status')){			
			$data['helplink'] = "https://www.purpletreesoftware.com/knowledgebase/tag/opencart-multivendor-seller-product";
			if (defined ('DISABLED_PTS_HELP')){if(DISABLED_PTS_HELP == 0){$data['helpcheck'] = 1;}else{$data['helpcheck'] = 0;}}else{$data['helpcheck'] = 1;}
			if ($this->request->server['HTTPS']) {
				$data['helpimage'] = HTTPS_SERVER . 'view/image/help.png';
			 } else {
				$data['helpimage'] = HTTP_SERVER . 'view/image/help.png';
			}
			}
			/// End Help code///
			]]></add>
		</operation>
			<operation error="skip">
			<search><![CDATA[$product_total = $this->model_catalog_product->getTotalProducts($filter_data);]]></search>
				<add position="after" offset="2"><![CDATA[
		$resultsTemplates = $this->model_catalog_product->getTemplateprod();
		$templapr = array();
		$templacount = 0;
		if(!empty($resultsTemplates)){
			foreach($resultsTemplates as $reslttem) {
				$templapr[] = $reslttem['product_id'];
			}
		}
				]]></add>
			</operation>		
			<operation error="skip">
			<search><![CDATA[if (is_file(DIR_IMAGE . $result['image'])) {]]></search>
				<add position="before" index="0"><![CDATA[
if(!in_array($result['product_id'],$templapr)) {
				]]></add>
			</operation>			
			<operation error="skip">
			<search><![CDATA['edit'       => $this->url->link('catalog/product/edit', 'user_token=' . $this->session->data['user_token'] . '&product_id=' . $result['product_id'] . $url, true)]]></search>
				<add position="after" offset="1"><![CDATA[
		} else {
			$templacount++;
		}
				]]></add>
			</operation>			
			<operation error="skip">
			<search><![CDATA[$pagination = new Pagination();]]></search>
				<add position="before"><![CDATA[
$product_total = $product_total - $templacount;
				]]></add>
			</operation>		
			<operation error="skip">
		<search><![CDATA[$this->load->language('catalog/product');]]></search>
				<add position="after"><![CDATA[
					$this->load->language('customer/ptscustomer');
				]]></add>
			</operation>
			<operation error="skip">
			<search><![CDATA[$data['cancel'] = $this->url->link('catalog/product', 'user_token=' . $this->session->data['user_token'] . $url, true);]]></search>
			<add position="after"><![CDATA[
				/*** Load multivendor vendor model ***/
				$this->load->model('extension/purpletree_multivendor/vendor');
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$data['cancel'] = $this->url->link('catalog/product', 'user_token=' . $this->session->data['user_token'] . $url);]]></search>
			<add position="after"><![CDATA[
				/*** Load multivendor vendor model ***/
				$this->load->model('extension/purpletree_multivendor/vendor');
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$product_info = $this->model_catalog_product->getProduct($this->request->get['product_id']);]]></search>
			<add position="after"><![CDATA[
				/*** Get seller associated with this product ***/
				$product_seller = $this->model_extension_purpletree_multivendor_vendor->getProductSeller($this->request->get['product_id']);
				$product_assign_plan = $this->model_catalog_product->getSellerProductPlan($this->request->get['product_id']);
				$seller_pro1 = $this->model_extension_purpletree_multivendor_vendor->getProductSeller($this->request->get['product_id']);
				////// quick order //////
				$quick_order_status = $this->model_extension_purpletree_multivendor_vendor->getQucikOrderStatus($this->request->get['product_id']);				
				////// end quick order //////
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$data['tab_openbay']]]></search>
			<add position="before"><![CDATA[
				$data['tab_vendor'] = $this->language->get('tab_vendor');
		
			$data['error_vendor'] = $this->language->get('error_vendor');
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$this->load->model('catalog/recurring');]]></search>
			<add position="before"><![CDATA[
			/** get vendor name for this product if any **/
			///// quick order /////
			if (defined('QUICK_ORDER') && QUICK_ORDER == 1 ){
			     $data['quick_order_check'] = QUICK_ORDER;
				}
			$data['quick_order_tab_position'] = $this->config->get('module_purpletree_multivendor_quick_order_tab_position');
			    if (isset($this->request->post['quick_order'])) {
					$data['quick_order'] = $this->request->post['quick_order'];
				} elseif (!empty($quick_order_status)) {
					$data['quick_order'] = (int)$quick_order_status;
				} else {
					$data['quick_order'] = '';
				}
		   ////// End quick order ///////
		   if ($this->config->get('config_theme') == 'journal3') {
					$data['journal3'] = 1;
				}  else {
					$data['journal3'] = '';
				}
				if (isset($this->request->post['vendor'])) {
					$data['vendor'] = $this->request->post['vendor'];
				} elseif (!empty($product_seller)) {
					$data['vendor'] = (int)$product_seller['seller_id'];
				} else {
					$data['vendor'] = '';
				}
			    if (isset($this->request->post['product_plan_id'])) {
					$data['product_plan_id'] = $this->request->post['product_plan_id'];
				} elseif (!empty($product_assign_plan)) {
					$data['product_plan_id'] = $product_assign_plan['product_plan_id'];
				} else {
					$data['product_plan_id'] = '';
				}
				
				if (isset($this->request->post['featured_product_plan_id'])) {
					$data['featured_product_plan_id'] = $this->request->post['featured_product_plan_id'];
				} elseif (!empty($product_assign_plan)) {
					$data['featured_product_plan_id'] = $product_assign_plan['featured_product_plan_id'];
				} else {
					$data['featured_product_plan_id'] = '';
				}
				
				if (isset($this->request->post['category_featured_product_plan_id'])) {
					$data['category_featured_product_plan_id'] = $this->request->post['category_featured_product_plan_id'];
				} elseif (!empty($product_assign_plan)) {
					$data['category_featured_product_plan_id'] = $product_assign_plan['category_featured_product_plan_id'];
				} else {
					$data['category_featured_product_plan_id'] = '';
				}
				/** get all vendors **/
				$data['vendors'] = $this->model_extension_purpletree_multivendor_vendor->getVendors();
				///Help code///	
				$data['helplink'] = "https://www.purpletreesoftware.com/knowledgebase/tag/opencart-multivendor-seller-product";
				if (defined ('DISABLED_PTS_HELP')){if(DISABLED_PTS_HELP == 0){$data['helpcheck'] = 1;}else{$data['helpcheck'] = 0;}}else{$data['helpcheck'] = 1;}
				if ($this->request->server['HTTPS']) {
					$data['helpimage'] = HTTPS_SERVER . 'view/image/help.png';
				 } else {
					$data['helpimage'] = HTTP_SERVER . 'view/image/help.png';
				}
				/// End Help code///
			]]></add>
		</operation>
				<operation error="skip">
			<search><![CDATA[public function autocomplete() {]]></search>
			<add position="before"><![CDATA[
	public function getSellerPlan() {
		$json = array();
		$this->load->language('catalog/product');
		if (isset($this->request->get['seller_id'])) {
			
			if (isset($this->request->get['seller_id'])) {
				$seller_id = $this->request->get['seller_id'];
			} else {
				$seller_id = '';
			}

			$this->load->model('catalog/product');

			$result = $this->model_catalog_product->getSellerSubscriptionPlan($seller_id);
			if(!empty($result)){
				foreach($result as $key=>$value){
						$json[]=array(
						'plan_id'=>$value['plan_id'],
						'plan_name'=>$value['plan_name']
						);			
				}
			}
		}
		
		$this->response->addHeader('Content-Type: application/json');
		$this->response->setOutput(json_encode($json));
	}
			]]></add>
		</operation>	
		<operation error="skip">
			<search><![CDATA[$this->load->model('catalog/recurring');]]></search>
			<add position="before"><![CDATA[
				$data['module_purpletree_multivendor_subscription_plans'] = $this->config->get('module_purpletree_multivendor_subscription_plans');
				$data['module_purpletree_multivendor_multiple_subscription_plan_active'] = $this->config->get('module_purpletree_multivendor_multiple_subscription_plan_active');
			]]></add>
		</operation>	
		<operation error="skip">
			<search><![CDATA[$data['location'] = '';]]></search>
			<add position="after" offset="2"><![CDATA[
			$data['module_purpletree_multivendor_status'] = $this->config->get('module_purpletree_multivendor_status');
		$seller_id=0;
		if(isset($seller_pro1['seller_id'])){
		$seller_id = $seller_pro1['seller_id'];
		}
		$this->load->model('extension/purpletree_multivendor/vendor');
		if (isset($this->request->get['product_id'])){
			$data['hidetab'] = $this->model_extension_purpletree_multivendor_vendor->getAdmintempProductId($this->request->get['product_id']);			
		}		
		$data['product_plan_info'] = $this->model_catalog_product->getSellerSubscriptionPlan($seller_id);
        $this->load->language('customer/ptscustomer');
        $product_plan_name='';
		$featured_product_plan_name='';
		$category_featured_product_plan_name='';
		if(isset($this->request->get['product_id'])){
			$product_plan_name= $this->model_extension_purpletree_multivendor_vendor->productPlanName($this->request->get['product_id']);
			$featured_product_plan_name= $this->model_extension_purpletree_multivendor_vendor->featuredProductPlanName($this->request->get['product_id']);
			$category_featured_product_plan_name= $this->model_extension_purpletree_multivendor_vendor->categoryFeaturedProductPlanName($this->request->get['product_id']);
		}
		if (isset($this->request->post['product_plan_id'])) {
			$data['product_plan_id'] = $this->request->post['product_plan_id'];
		} elseif ($product_plan_name) {
			$data['product_plan_id'] =$this->model_extension_purpletree_multivendor_vendor->featuredProductPlanName($this->request->get['product_id']);
		} else {
			$data['product_plan_id'] = '';
		}
		if (isset($this->request->post['featured_product_plan_id'])) {
			$data['featured_product_plan_id'] = $this->request->post['featured_product_plan_id'];
		} elseif ($product_plan_name) {
			$data['featured_product_plan_id'] =$this->model_extension_purpletree_multivendor_vendor->featuredProductPlanName($this->request->get['product_id']);
		} else {
			$data['featured_product_plan_id'] = '';
		}
		if (isset($this->request->post['category_featured_product_plan_id'])) {
			$data['category_featured_product_plan_id'] = $this->request->post['category_featured_product_plan_id'];
		} elseif ($product_plan_name) {
			$data['category_featured_product_plan_id'] =$this->model_extension_purpletree_multivendor_vendor->categoryFeaturedProductPlanName($this->request->get['product_id']);
		} else {
			$data['category_featured_product_plan_id'] = '';
		}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[if (isset($this->request->post['shipping'])) {]]></search>
			<add position="before"><![CDATA[
			if(NULL !== $this->config->get('module_purpletree_multivendor_status')){
			//****** pts shipping *******//			
			$data['text_shipping_charge'] = $this->language->get('text_shipping_charge');
        if (isset($this->request->post['pts_shipping_charge'])) {
			$data['pts_shipping_charge'] = $this->request->post['pts_shipping_charge'];
		} elseif (!empty($product_info['shipping_charge'])) {
			$data['pts_shipping_charge'] = $product_info['shipping_charge'];
		} else {
			$data['pts_shipping_charge'] = '';
		}
		}
		//****** End pts shipping *******//]]></add>
		</operation>
	</file>
	<file path="admin/view/template/catalog/product_form.twig">
	    <operation error="skip">
				<search><![CDATA[<a href="{{ cancel }}" data-toggle="tooltip" title="{{ button_cancel }}" class="btn btn-default"><i class="fa fa-reply"></i></a></div>]]></search>
				<add position="replace"><![CDATA[
				<a href="{{ cancel }}" data-toggle="tooltip" title="{{ button_cancel }}" class="btn btn-default"><i class="fa fa-reply"></i></a>
				{% if module_purpletree_multivendor_status %}
				 {% if helpcheck %}
				<!--<a href="{{ helplink }}" target="_blank" id="button-pts-help" class="btn"><img src="{{ helpimage }}" alt="Help" width="85" height="43"></a>-->
				
		{% endif %}
		{% endif %}
		</div>
				]]></add>					
			</operation>
		<operation error="skip">
			<search><![CDATA[<li><a href="#tab-design" data-toggle="tab">{{ tab_design }}</a></li>]]></search>
			<add position="after"><![CDATA[
			<!-- Vendor Tab-->
				<li><a href="#tab-vendor" data-toggle="tab">{{ tab_vendor }}</a></li>
			<!-- Quick order -->
				{% if quick_order_check == 1 %}
			  {% if not quick_order_tab_position %}
				   <li><a href="#tab-quick-order" data-toggle="tab">Quick order</a></li>
		        {% endif %}
			{% endif %}
			    <!-- End Quick order -->	
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[</form>]]></search>
			<add position="before" offset="1"><![CDATA[
			<!-- Quick order -->
			{% if quick_order_check == 1 %}
			<div class="tab-pane {% if quick_order_tab_position %} active {% endif %}" id="tab-quick-order">
			     <div class="form-group">
					<label class="col-sm-2 control-label" for="input-quick-order">Quick order product</label>
					<div class="col-sm-10">
					<select name="quick_order" id="input-quick-order" class="form-control">
						{% if quick_order == 1 %}
						<option value="1" selected="selected">{{ text_yes }}</option>
						<option value="0">{{ text_no }}</option>
						{% else %}
						<option value="1">{{ text_yes }}</option>
						<option value="0" selected="selected">{{ text_no }}</option>
						{% endif %}
					  </select>
					</div>
                </div>
            </div>
			{% endif %}
            <!-- End Quick order -->
			<!-- Vendor Tab-->
				<div class="tab-pane" id="tab-vendor">
				<div class="form-group">
				<label class="col-sm-2 control-label" for="input-vendor">{{ tab_vendor }}</label>
				<div class="col-sm-10">
				<select name="vendor" id="input-vendor" class="form-control">
					<option value="0">{{ text_none }}</option>
					{% for vendr in vendors %}
					{% if vendor == vendr.seller_id %}
					<option value="{{ vendr.seller_id }}" selected="selected">{{ vendr.store_name }}( {{ vendr.name }} )</option>
					{% else %}
					<option value="{{ vendr.seller_id }}">{{ vendr.store_name }}( {{ vendr.name }} )</option>
					{% endif %}
					{% endfor %}
				  </select>
				</div>
              </div>
			{% if module_purpletree_multivendor_subscription_plans %}
			  {% if module_purpletree_multivendor_multiple_subscription_plan_active %}
			<div class="pts-form-group">
			 <div class="subscription form-group" style="display:none">
				<label class="col-sm-2 control-label" for="subscription-plan">{{ text_subscription_plan_product }}</label>
				<div class="col-sm-10">
				<select name="product_plan_id" id="input-subscription_plan" class="form-control">
					<option value="0">{{ text_none }}</option>
					{% if product_plan_info %}
					 {% for plans in product_plan_info %} 
				      <option  value="{{ plans.plan_id }}" {% if plans.plan_id == product_plan_id %} selected="selected" {% endif %} >{{ plans.plan_name }}</option>
					{% endfor %} 
					{% endif %}
				</select>
				</div>
			  </div>
            </div>
			  {% endif %}
			 {% endif %}	
			{% if module_purpletree_multivendor_subscription_plans %}
			{% if module_purpletree_multivendor_multiple_subscription_plan_active %}
			<div class="pts-form-group">
			 <div class="subscription form-group" style="display:none">
				<label class="col-sm-2 control-label" for="subscription-plan">{{ text_featured_product_for_category }}</label>
				<div class="col-sm-10">
				<select name="featured_product_plan_id" id="input-featured_product_plan_id" class="form-control">
					<option value="0">{{ text_none }}</option>
					{% if product_plan_info %}
					 {% for plans in product_plan_info %} 
				      <option  value="{{ plans.plan_id }}" {% if plans.plan_id == featured_product_plan_id %} selected="selected" {% endif %} >{{ plans.plan_name }}</option>
					{% endfor %} 
					{% endif %}
				</select>
				</div>
			  </div>
            </div>
			 {% endif %}
			 {% endif %}	
			 {% if module_purpletree_multivendor_subscription_plans %}
			  {% if module_purpletree_multivendor_multiple_subscription_plan_active %}
				<div class="pts-form-group">
				 <div class="subscription form-group" style="display:none">
					<label class="col-sm-2 control-label" for="subscription-plan">{{ text_featured_product_for_carousel }}</label>
					<div class="col-sm-10">
					<select name="category_featured_product_plan_id" id="input-category_featured_product_plan_id" class="form-control">
						<option value="0">{{ text_none }}</option>
						{% if product_plan_info %}
						 {% for plans in product_plan_info %} 
						  <option  value="{{ plans.plan_id }}" {% if plans.plan_id == category_featured_product_plan_id %} selected="selected" {% endif %} >{{ plans.plan_name }}</option>
						{% endfor %} 
						{% endif %}
					</select>
					</div>
				  </div>
				</div>
			  {% endif %}
			 {% endif %}
            </div>
			
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[<li class="active"><a href="#tab-general" data-toggle="tab">{{ tab_general }}</a></li>]]></search>
			<add position="replace"><![CDATA[
			{% if quick_order_check == 1 %}
			  {% if quick_order_tab_position %}
		    <li class="active"><a href="#tab-quick-order" data-toggle="tab">Quick order</a></li>
            <li ><a href="#tab-general" data-toggle="tab">{{ tab_general }}</a></li>
			 {% else %}
			 <li class="active"><a href="#tab-general" data-toggle="tab">{{ tab_general }}</a></li>
			 {% endif %}
			{% else %}
			 <li class="active"><a href="#tab-general" data-toggle="tab">{{ tab_general }}</a></li>
			{% endif %}				
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[<div class="tab-pane active" id="tab-general">]]></search>
			<add position="replace"><![CDATA[
				<div class="tab-pane {% if not quick_order_tab_position %} active {% endif %}" id="tab-general">
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[<label class="col-sm-2 control-label" for="input-price"><span data-toggle="tooltip" title="{{ help_price }}">{{ entry_price }}</span></label>]]></search>
			<add position="before" offset="1"><![CDATA[
				{% if not hidetab %}
			]]></add>
		</operation>		
		<operation error="skip">
			<search><![CDATA[<label class="col-sm-2 control-label" for="input-tax-class">{{ entry_tax_class }}</label>]]></search>
			<add position="before" offset="1"><![CDATA[
				{% endif %}
			]]></add>
		</operation>				
		<operation error="skip">
			<search><![CDATA[<label class="col-sm-2 control-label" for="input-quantity">{{ entry_quantity }}</label>]]></search>
			<add position="before" offset="1"><![CDATA[
				{% if not hidetab %}
			]]></add>
		</operation>		
		<operation error="skip">
			<search><![CDATA[<label class="col-sm-2 control-label" for="input-minimum"><span data-toggle="tooltip" title="{{ help_minimum }}">{{ entry_minimum }}</span></label>]]></search>
			<add position="before" offset="1"><![CDATA[
				{% endif %}
			]]></add>
		</operation>		
		<operation error="skip">
			<search><![CDATA[<label class="col-sm-2 control-label" for="input-subtract">{{ entry_subtract }}</label>]]></search>
			<add position="before" offset="1"><![CDATA[
				{% if not hidetab %}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[<label class="col-sm-2 control-label">{{ entry_shipping }}</label>]]></search>
			<add position="before" offset="1"><![CDATA[
				{% endif %}
			]]></add>
		</operation>		
		<operation error="skip">
			<search><![CDATA[{{ tab_special }}]]></search>
			<add position="before"><![CDATA[
				{% if not hidetab %}
			]]></add>
		</operation>		
		<operation error="skip">
			<search><![CDATA[{{ tab_special }}]]></search>
			<add position="after"><![CDATA[
				{% endif %}
			]]></add>
		</operation>		
				<operation error="skip">
			<search><![CDATA[// Manufacturer]]></search>
			<add position="before"><![CDATA[
  var seller_id = $('select[id=\'input-vendor\']').val();
	  if(seller_id!=0){
		$('.subscription').css('display','block');   
	  }
		$('select[id="input-vendor"]').on('change', function(){
			var seller_id = $(this).val();
			if(seller_id == "0") {
				$('.subscription').css('display','none');
			} else {
				$('.subscription').css('display','block');
								$('#input-subscription_plan').empty();
				$('#input-subscription_plan').append($('<option value="">---None---</option>'));
				
				$('#input-featured_product_plan_id').empty();
				$('#input-featured_product_plan_id').append($('<option value="">---None---</option>'));
				
				$('#input-category_featured_product_plan_id').empty();
				$('#input-category_featured_product_plan_id').append($('<option value="">---None---</option>'));
		$.ajax({
			url: 'index.php?route=catalog/product/getSellerPlan&user_token={{ user_token }}&seller_id='+seller_id,
			dataType: 'json',
			success: function(json) {
				
				$.each(json,function(key,result){
				 $('#input-subscription_plan').append($('<option></option>').val(result['plan_id']).html(result['plan_name']));
				 
				 $('#input-featured_product_plan_id').append($('<option></option>').val(result['plan_id']).html(result['plan_name']));
				 
				 $('#input-category_featured_product_plan_id').append($('<option></option>').val(result['plan_id']).html(result['plan_name']));
				});

			},
			error: function(xhr, ajaxOptions, thrownError) {
				alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
			}
	    }); 
				
    }
})

			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[<script type="text/javascript" src="view/javascript/summernote/summernote.js"></script>]]></search>
			<add position="replace"><![CDATA[
			  {% if module_purpletree_multivendor_status %}
    {% if journal3 %}
			<script type="text/javascript" src="view/javascript/summernote/summernote.js"></script>
		   {% else %}
		   <script type="text/javascript" src="view/javascript/purpletreejs/summernote.js"></script>
		  {% endif %}
  {% else %}
	<script type="text/javascript" src="view/javascript/summernote/summernote.js"></script>
  {% endif %}
			]]></add>
		</operation>
	    <operation error="skip">
			<search><![CDATA[<label class="col-sm-2 control-label" for="input-date-available">{{ entry_date_available }}</label>]]></search>
			<add position="before" offset="1"><![CDATA[ {% if module_purpletree_multivendor_status %} 			
			<!--Pts shipping-->
			     <div class="form-group">
                <label class="col-sm-2 control-label" for="input-pts_shipping_charge">{{ text_shipping_charge }}</label>
                <div class="col-sm-10">
                  <input type="text" name="pts_shipping_charge" value="{{ pts_shipping_charge }}" placeholder="{{ text_shipping_charge }}" id="input-pts_shipping_charge" class="form-control"/>
                </div>
              </div>
			  <!--End Pts shipping-->
			  {% endif %}
			  ]]></add>
		</operation>
	</file>
	<file path="admin/model/catalog/product.php">
		<operation error="skip">
			<search><![CDATA[if (isset($data['product_attribute'])) {]]></search>
			<add position="before"><![CDATA[
			/** update product status according to mv config setting **/
				if (isset($data['vendor']) && !empty($data['vendor'])) {
					if($this->config->get('module_purpletree_multivendor_product_approval')){
						$is_approved = 0;
						$data['status'] = 0;
						$this->db->query("UPDATE " . DB_PREFIX . "product SET status = '0' WHERE product_id = '" . (int)$product_id . "'");
					} else{
						$is_approved = 1;
					}
		$is_featured = 0;
		if(isset($data['is_featured'])){
		  $is_featured = $data['is_featured'];
		} elseif(isset($data['featured_product_plan_id'])){
			if($data['featured_product_plan_id'] > 0) {
			$is_featured = 1;
			}
		}
		$is_category_featured = 0;
		if(isset($data['is_category_featured'])){
		  $is_category_featured = $data['is_category_featured'];
		}
		elseif(isset($data['category_featured_product_plan_id'])){
			if($data['category_featured_product_plan_id'] > 0) {
			$is_category_featured = 1;
			}
		}
		$this->db->query("INSERT INTO " . DB_PREFIX . "purpletree_vendor_products SET product_id = '" . (int)$product_id."', seller_id = '".(int)$data['vendor']."', is_approved ='".(int)$is_approved."',is_featured ='".(int)$is_featured."',is_category_featured ='".(int)$is_category_featured."', created_at =NOW(), updated_at =NOW()");
		         if(isset($data['product_plan_id'])){
						
					}else{
						$data['product_plan_id'] = 0;
					}
					if(isset($data['featured_product_plan_id'])){
						
					}else{
						$data['featured_product_plan_id'] = 0;
					}
					if(isset($data['category_featured_product_plan_id'])){
						
					}else{
						$data['category_featured_product_plan_id'] = 0;
					}
		$this->db->query("INSERT INTO " . DB_PREFIX . "purpletree_vendor_subscription_products SET product_id = '" . (int)$product_id . "',product_plan_id = '" . (int)$data['product_plan_id']. "',featured_product_plan_id = '" . (int)$data['featured_product_plan_id']. "',category_featured_product_plan_id = '" . (int)$data['category_featured_product_plan_id']. "'");
					
	}
	//// quick order ////	
		if (isset($data['quick_order'])) {
		     $this->db->query("INSERT INTO " . DB_PREFIX . "purpletree_vendor_quick_order_product SET product_id = '" . (int)$product_id . "',seller_id = '".(int)$data['vendor']."',status = '" . (int)$data['quick_order'] . "'");
			}
	   ////  end quick order ////
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[if (!empty($data['product_attribute'])) {]]></search>
			<add position="before"><![CDATA[
			/** update or insert into seller products **/
				if (isset($data['product_plan_id'])) {
				$query= $this->db->query("SELECT * FROM " . DB_PREFIX . "purpletree_vendor_subscription_products WHERE product_id = '".(int)$product_id."'");
				if($query->num_rows>0){
				$this->db->query("UPDATE " . DB_PREFIX . "purpletree_vendor_subscription_products SET product_plan_id = '" . (int)$data['product_plan_id'] . "' WHERE product_id = '".(int)$product_id."'");
				}
			}
			
			$is_featured = 0;
			if (isset($data['featured_product_plan_id'])) {
			if($data['featured_product_plan_id'] > 0) {
			$is_featured = 1;
			}
				$query= $this->db->query("SELECT * FROM " . DB_PREFIX . "purpletree_vendor_subscription_products WHERE product_id = '".(int)$product_id."'");
				if($query->num_rows>0){
				$this->db->query("UPDATE " . DB_PREFIX . "purpletree_vendor_subscription_products SET featured_product_plan_id = '" . (int)$data['featured_product_plan_id'] . "' WHERE product_id = '".(int)$product_id."'");
				}
			}
			
		$is_category_featured = 0;
		if (isset($data['category_featured_product_plan_id'])) {
		if($data['category_featured_product_plan_id'] > 0) {
			 $is_category_featured = 1;
			}
				$query= $this->db->query("SELECT * FROM " . DB_PREFIX . "purpletree_vendor_subscription_products WHERE product_id = '".(int)$product_id."'");
				if($query->num_rows>0){
				$this->db->query("UPDATE " . DB_PREFIX . "purpletree_vendor_subscription_products SET category_featured_product_plan_id = '" . (int)$data['category_featured_product_plan_id'] . "' WHERE product_id = '".(int)$product_id."'");
				}
			}
				if (isset($data['vendor'])  && !empty($data['vendor'])) {
				if(isset($data['product_plan_id'])){
						
					}else{
						$data['product_plan_id'] = 0;
					}
					if(isset($data['featured_product_plan_id'])){
						
					}else{
						$data['featured_product_plan_id'] = 0;
					}
					if(isset($data['category_featured_product_plan_id'])){
						
					}else{
						$data['category_featured_product_plan_id'] = 0;
					}
					$query = $this->db->query("SELECT seller_id FROM " . DB_PREFIX . "purpletree_vendor_products WHERE product_id='".(int)$product_id."'");
					$query1 = $this->db->query("SELECT * FROM " . DB_PREFIX . "purpletree_vendor_subscription_products WHERE product_id='".(int)$product_id."'");
					
					if(!$query1->num_rows) {
					$this->db->query("INSERT INTO " . DB_PREFIX . "purpletree_vendor_subscription_products SET product_id = '" . (int)$product_id . "',product_plan_id = '" . (int)$data['product_plan_id']. "',featured_product_plan_id = '" . (int)$data['featured_product_plan_id']. "',category_featured_product_plan_id = '" . (int)$data['category_featured_product_plan_id']. "'");		
					}
					if($query->num_rows > 0) {
						$this->db->query("UPDATE " . DB_PREFIX . "purpletree_vendor_products SET seller_id = '" . (int)$data['vendor'] . "', updated_at =NOW(),is_category_featured ='".(int)$is_category_featured."',is_featured ='".(int)$is_featured."' WHERE product_id = '".(int)$product_id."'");
					} else {
						if($this->config->get('purpletree_multivendor_product_approval')){
							$is_approved = 0;
							$this->db->query("UPDATE " . DB_PREFIX . "product SET status = '0' WHERE product_id = '" . (int)$product_id . "'");
						} else{
							$is_approved = 1;
						}
						$this->db->query("INSERT INTO " . DB_PREFIX . "purpletree_vendor_products SET product_id = '" . (int)$product_id . "', seller_id = '" . (int)$data['vendor'] . "',is_category_featured ='".(int)$is_category_featured."',is_featured ='".(int)$is_featured."', created_at =NOW(), updated_at =NOW(), is_approved = '".(int)$is_approved."'");
						
					}
				} else {
					$query = $this->db->query("DELETE FROM " . DB_PREFIX . "purpletree_vendor_products WHERE product_id='".(int)$product_id."'");
					
						$query = $this->db->query("DELETE FROM " . DB_PREFIX . "purpletree_vendor_subscription_products WHERE product_id='".(int)$product_id."'");
				}
		//// quick order ////	
		if (isset($data['quick_order'])) {
		      $query = $this->db->query("SELECT status FROM " . DB_PREFIX . "purpletree_vendor_quick_order_product WHERE product_id='".(int)$product_id."'");
			
			if($query->num_rows){
				$this->db->query("UPDATE " . DB_PREFIX . "purpletree_vendor_quick_order_product SET status = '" . (int)$data['quick_order'] . "',seller_id = '".(int)$data['vendor']."' WHERE product_id='".(int)$product_id."'");
				} else {
		        $this->db->query("INSERT INTO " . DB_PREFIX . "purpletree_vendor_quick_order_product SET product_id = '" . (int)$product_id . "',seller_id = '".(int)$data['vendor']."',status = '" . (int)$data['quick_order'] . "'");
			}
		     
			}
	   ////  end quick order ////	
			]]></add>
		</operation>
		<operation error="skip">
		<search><![CDATA[public function getTotalProductsByLayoutId($layout_id) {]]></search>
		<add position="before"><![CDATA[
	  public function getSellerSubscriptionPlan($seller_id) {	
		$status='status';
		if($this->config->get('module_purpletree_multivendor_multiple_subscription_plan_active')){
		$status='new_status';	
	  }
       $sql = "SELECT pvsp.plan_id,pvpd.plan_name FROM " . DB_PREFIX . "purpletree_vendor_seller_plan pvsp LEFT JOIN  " . DB_PREFIX . "purpletree_vendor_plan_subscription pvps ON(pvsp.seller_id=pvps.seller_id) LEFT JOIN " . DB_PREFIX . "purpletree_vendor_plan_description pvpd ON(pvsp.plan_id=pvpd.plan_id) LEFT JOIN " . DB_PREFIX . "purpletree_vendor_plan pvp ON(pvp.plan_id=pvpd.plan_id) WHERE pvsp.seller_id='".(int)$seller_id."' AND pvsp.".$status."=1 AND pvps.status_id=1 AND pvpd.language_id='" . (int)$this->config->get('config_language_id') . "' AND pvp.status=1";
		$query = $this->db->query($sql);
			if($query->num_rows>0){
					return $query->rows;
			}else {
				return NULL;
			}
	}
	public function getSellerProductPlan($product_id) {	
       $sql = "SELECT product_plan_id,featured_product_plan_id,category_featured_product_plan_id FROM " . DB_PREFIX . "purpletree_vendor_subscription_products WHERE product_id='".(int)$product_id."'";
		$query = $this->db->query($sql);
			if($query->num_rows>0){
					return $query->row;
			}else {
				return NULL;
			}
	}

			]]></add>
		</operation>
		<operation error="skip">
		<search><![CDATA[public function getTotalProductsByLayoutId($layout_id) {]]></search>
		<add position="before"><![CDATA[
						public function getTemplateprod() {
		$query = $this->db->query("SELECT product_id FROM " . DB_PREFIX . "purpletree_vendor_template");
			if($query->num_rows>0){
		return $query->rows;
			}
	}
			]]></add>
		</operation>
		<operation error="skip">
		<search><![CDATA[public function deleteProduct($product_id) {]]></search>
		<add position="after"><![CDATA[
		   //// quick order ////	
		     $this->db->query("DELETE FROM " . DB_PREFIX . "purpletree_vendor_quick_order_product WHERE product_id='".(int)$product_id."'");
	       ////  end quick order ////
			]]></add>
		</operation>
	</file>
	<file path="catalog/controller/account/account.php">
	<operation error="skip">
			<search><![CDATA[public function index() {]]></search>
			<add position="after"><![CDATA[
			if (isset($this->session->data['quick_redirect'])) {		
				$this->response->redirect($this->session->data['quick_redirect']);
		    }
			if($this->config->get('module_purpletree_multivendor_hide_user_menu')){
				$data['purpletree_module_status'] =$this->config->get('module_purpletree_multivendor_status');
				$store_detail = $this->customer->isSeller();		
				if(isset($data['purpletree_module_status'])){
				$stores=array();
						if(isset($store_detail['multi_store_id'])){
							$stores=explode(',',$store_detail['multi_store_id']);
						}
					if(isset($store_detail['store_status']) && $store_detail['store_status'] == 1 && (in_array($this->config->get('config_store_id'),$stores))){	
						$this->response->redirect($this->url->link('extension/account/purpletree_multivendor/dashboardicons','', true));
				   }
				 }
			 }
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[if (isset($this->session->data['success'])) {]]></search>
			<add position="before"><![CDATA[
				if (isset($this->session->data['error_warning'])) {
					$data['error_warning'] = $this->session->data['error_warning'];

					unset($this->session->data['error_warning']);
				}
			]]></add>
		</operation>
	</file>
	<file path="catalog/view/theme/*/template/account/account.twig">
		<operation error="skip">
			<search><![CDATA[ {% if success %}]]></search>
			<add position="before"><![CDATA[
			{% if error_warning %}
			 <div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i> {{ error_warning }}</div>
			 {% endif %}
			]]></add>
		</operation>
	</file>
	<file path="catalog/controller/extension/module/account.php">
		<operation error="skip">
			<search><![CDATA[$data['recurring'] = $this->url->link('account/recurring', '', true);]]></search>
			<add position="after"><![CDATA[
				$this->load->language('account/ptsregister');
				$data['sellercontact'] = $this->url->link('extension/account/purpletree_multivendor/sellercontact/customerContactlist', '', true);
				$data['sellercontact_module'] =$this->config->get('module_purpletree_multivendor_seller_contact');	
		$data['purpletree_module_status'] =$this->config->get('module_purpletree_multivendor_status');	
			]]></add>
		</operation>
		
		<operation error="skip">
			<search><![CDATA[return $this->load->view('extension/module/account', $data);]]></search>
			<add position="replace"><![CDATA[
				$store_detail = $this->customer->isSeller();
				if(!isset($store_detail['store_status'])){
					return $this->load->view('extension/module/account', $data);
				 }
				if(isset($store_detail['store_status'])){
				$stores=array();
				
						if(isset($store_detail['multi_store_id'])){
							$stores=explode(',',$store_detail['multi_store_id']);
						}
					if(isset($store_detail['multi_store_id']) && in_array($this->config->get('config_store_id'),$stores)){
						if($this->config->get('module_purpletree_multivendor_hide_user_menu')){ } else{
					
					return $this->load->view('extension/module/account', $data);
					}
					}else{
					  return $this->load->view('extension/module/account', $data);	
					}
				
				}
			]]></add>
		</operation>
	</file>
	<file path="catalog/view/theme/*/template/extension/module/account.twig">
		<operation error="skip">
			<search><![CDATA[ <a href="{{ newsletter }}" class="list-group-item">{{ text_newsletter }}</a>]]></search>
			<add position="before"><![CDATA[
			{% if sellercontact_module==1 and purpletree_module_status==1 %}
			<a href="{{ sellercontact }}" class="list-group-item">{{  text_seller_contact1 }}</a>
				{% endif %}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[return $this->load->view('extension/module/account', $data);]]></search>
			<add position="replace"><![CDATA[
			if($this->config->get('module_purpletree_multivendor_hide_user_menu')){ } else{
			
				return $this->load->view('extension/module/account', $data);
		    }
			]]></add>
		</operation>
	</file>
	<file path="admin/controller/customer/customer.php">
		<operation error="skip">
			<search><![CDATA[$data['user_token'] = $this->session->data['user_token'];]]></search>
			<add position="after"><![CDATA[
				$data['text_confirm_seller'] = $this->language->get('text_confirm_seller');
				$data['module_purpletree_multivendor_status'] = $this->config->get('module_purpletree_multivendor_status');
			$data['module_purpletree_multivendor_become_seller'] = $this->config->get('module_purpletree_multivendor_become_seller');
				$data['text_seller'] = $this->language->get('text_seller');
				$data['text_store_name'] = $this->language->get('text_store_name');
			]]></add>
		</operation>
		<operation error="skip">
		<search><![CDATA[$this->load->language('customer/customer');]]></search>
				<add position="after"><![CDATA[
				$this->load->language('customer/ptscustomer');
				]]></add>
			</operation>
		<operation error="skip">
			<search><![CDATA[$this->model_customer_customer->addCustomer($this->request->post);]]></search>
			<add position="replace"><![CDATA[		
			/** add seller **/
			$store_name = '';
					$customer_id = $this->model_customer_customer->addCustomer($this->request->post);
		    if(isset($this->request->post['become_seller'])){			
			if($this->request->post['become_seller']==1){			
			     $livecheck = 1;
		      if (!$this->customer->validateSeller($livecheck)) {
				$this->load->language('purpletree_multivendor/ptsmultivendor');
				$this->session->data['error_warning'] = $this->language->get('error_license');
				$this->response->redirect($this->url->link('customer/customer', 'user_token=' . $this->session->data['user_token'] . $url, true));
			     }
				 if(isset($this->request->post['seller_storename'])){
			     $store_name = trim($this->request->post['seller_storename']);
				}	$this->load->model('extension/purpletree_multivendor/vendor');
							$file ='';
							$this->model_extension_purpletree_multivendor_vendor->addSeller($customer_id,$store_name, $this->request->post['become_seller'],$file);
				
			 }
			}	
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$this->model_customer_customer->editCustomer($this->request->get['customer_id'], $this->request->post);]]></search>
			<add position="after"><![CDATA[		
			/** edit seller **/
			$store_name = '';
					$customer_id = $this->request->get['customer_id'];
				if(isset($this->request->post['become_seller'])){	
					if($this->request->post['become_seller']==1){			
			     $livecheck = 1;
		      if (!$this->customer->validateSeller($livecheck)) {
				$this->load->language('purpletree_multivendor/ptsmultivendor');
				$this->session->data['error_warning'] = $this->language->get('error_license');
				$this->response->redirect($this->url->link('customer/customer', 'user_token=' . $this->session->data['user_token'] . $url, true));
			     }
				  if(isset($this->request->post['seller_storename'])){
					$store_name = trim($this->request->post['seller_storename']);
					}
					$this->load->model('extension/purpletree_multivendor/vendor');
							$file ='';
							$this->model_extension_purpletree_multivendor_vendor->editSeller($customer_id,$store_name, $this->request->post['become_seller'],$file);
							
				}else{
				 if(isset($this->request->post['seller_storename'])){
				    $store_name = trim($this->request->post['seller_storename']);
					}
					$this->load->model('extension/purpletree_multivendor/vendor');
							$file ='';
							$this->model_extension_purpletree_multivendor_vendor->editSeller($customer_id,$store_name, $this->request->post['become_seller'],$file);
				}
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$customer_info = $this->model_customer_customer->getCustomer($this->request->get['customer_id']);]]></search>
			<add position="after"><![CDATA[
			/** get seller store information **/
			$this->load->model('extension/purpletree_multivendor/stores');
			$seller_info = $this->model_extension_purpletree_multivendor_stores->getStoreDetail($this->request->get['customer_id']);
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[protected function validateForm() {]]></search>
			<add position="after"><![CDATA[
			$c_id = '';
			if(isset($this->request->get['customer_id'])) {
				$c_id = $this->request->get['customer_id'];
			}
			$this->load->model('extension/purpletree_multivendor/vendor');
			if(isset($this->request->post['become_seller'])){
			if(!$this->customer->validateSeller()) {
				$this->error['warning1'] = $this->language->get('error_license');
			}	
			$this->load->language('customer/ptscustomer');
		 if(isset($this->request->post['seller_storename'])){
		  if(isset($this->request->post['become_seller']) && ($this->request->post['become_seller'] == 1)){
			if ((utf8_strlen($this->request->post['seller_storename']) < 5) || (utf8_strlen(trim($this->request->post['seller_storename'])) > 50)) {
			$this->error['seller_store'] = $this->language->get('error_storename');
		}
		}
		}
				     $this->load->model('extension/purpletree_multivendor/stores');				
            $store_info1 = $this->model_extension_purpletree_multivendor_stores->getStoreNameByStoreName($this->request->post['seller_storename']);
		 
		if(isset($this->request->get['customer_id'])) {
			if ($store_info1 && ($this->request->get['customer_id'] != $store_info1['seller_id'] && strtoupper(trim($this->request->post['seller_storename']))==strtoupper($store_info1['store_name']))) {
				$this->error['seller_store'] = $this->language->get('error_exist_storename');
				$this->error['warning'] = $this->language->get('error_warning');
		}
		} 	else {
        if ($store_info1 && (strtoupper(trim($this->request->post['seller_storename']))==strtoupper($store_info1['store_name']))) {
				$this->error['seller_store'] = $this->language->get('error_exist_storename');
				$this->error['warning'] = $this->language->get('error_warning');
		}
		}		
			
			
		}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[if (isset($this->request->post['customer_group_id'])) {]]></search>
			<add position="before"><![CDATA[
			/***  get become seller status and seller store name **/
			if (isset($this->request->post['become_seller'])) {
			$data['become_seller'] = $this->request->post['become_seller'];
		} elseif (!empty($seller_info)) {
			$data['become_seller'] = 1;
		} else {
			$data['become_seller'] = '';
			}
 		
		$data['become_seller_base'] = '';
		if (!empty($seller_info)) {
			$data['become_seller_base'] = $seller_info['store_status'];
		}
		if (isset($this->request->post['seller_storename'])) {
			$data['seller_storename'] = $this->request->post['seller_storename'];
		} elseif (!empty($seller_info)) {
			$data['seller_storename'] = $seller_info['store_name'];
		} else {
			$data['seller_storename'] = '';
		}
		///Help code///	
			$data['helplink'] = "https://www.purpletreesoftware.com/knowledgebase/tag/opencart-multivendor-seller";
            if (defined ('DISABLED_PTS_HELP')){if(DISABLED_PTS_HELP == 0){$data['helpcheck'] = 1;}else{$data['helpcheck'] = 0;}}else{$data['helpcheck'] = 1;}
			if ($this->request->server['HTTPS']) {
				$data['helpimage'] = HTTPS_SERVER . 'view/image/help.png';
			 } else {
				$data['helpimage'] = HTTP_SERVER . 'view/image/help.png';
			}
			/// End Help code///
		
		]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[if (isset($this->error['address'])) {]]></search>
			<add position="before"><![CDATA[if (isset($this->error['seller_store'])) {
				$data['error_sellerstore'] = $this->error['seller_store'];
			} else {
				$data['error_sellerstore'] = '';
			}
			if (isset($this->error['warning1'])) {
			$data['error_warning1'] = $this->error['warning1'];
			} else {
				$data['error_warning1'] = '';
			}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$data['error_warning'] = $this->error['warning'];]]></search>
			<add position="after"><![CDATA[}elseif(isset($this->session->data['error_warning'])){
			$data['error_warning'] = $this->session->data['error_warning'];
			unset($this->session->data['error_warning']);
			]]></add>
		</operation>
	</file>
	<file path="admin/view/template/customer/customer_form.twig">
		<operation error="skip">
			<search><![CDATA[{{ entry_safe }}]]></search>
			<add position="after" index="1" offset="12"><![CDATA[
				{% if module_purpletree_multivendor_status %}
				<div class="form-group">
				<label class="col-sm-2 control-label">{{ text_seller }}</label>
				<div class="col-sm-10">
				<label class="radio-inline">
                <input type="radio" name="become_seller" id="pts_no" value="0" checked="checked" id="add_document"/>
                {{ text_no }}</label>
				<label class="radio-inline">
                <input type="radio" name="become_seller" id="pts_yes" value="1" {% if become_seller %} checked="checked"  {% endif %}   id="remove_document"/>
                {{ text_yes }}</label>
				</div> 
			</div>
			<div class="form-group">
				<label class="col-sm-2 control-label">{{ text_store_name }}</label>
				<div class="col-sm-10">
                <input type="text" name="seller_storename" value="{{ seller_storename }}" class="form-control"  />
				 {% if error_sellerstore %}
              <div class="text-danger">{{ error_sellerstore }}</div>
              {% endif %}
            </div>
            </div>
			{% endif %}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[<button type="submit" form="form-customer" data-toggle="tooltip" title="{{ button_save }}" class="btn btn-primary"><i class="fa fa-save"></i></button>]]></search>
			<add position="replace" index="0" offset="0"><![CDATA[<button type="button" onclick="checkdata()" data-toggle="tooltip" title="{{ button_save }}" class="btn btn-primary"><i class="fa fa-save"></i></button>		
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[{% if error_warning %}]]></search>
			<add position="before"><![CDATA[
				{% if error_warning1 %}
				<div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i> {{ error_warning1 }}
				  <button type="button" class="close" data-dismiss="alert">&times;</button>
				</div>
				{% endif %}
			]]></add>
		</operation>
		
		<operation error="skip">
				<search><![CDATA[{{ footer }]]></search>
				<add position="before"><![CDATA[
				 <script>
				  function checkdata(){			
						 
				       {% if become_seller_base != '' %}
						if($('#add_document').is(':checked')) {  
								confirm("{{ text_confirm_seller }}") ? $('#form-customer').submit() : false;
						} else {
							$('#form-customer').submit();
						}
				  {% else %}
					$('#form-customer').submit();
				  {% endif %}
  
                  }
				 </script>
				]]></add>					
			</operation>	
			<operation error="skip">
				<search><![CDATA[<a href="{{ cancel }}" data-toggle="tooltip" title="{{ button_cancel }}" class="btn btn-default"><i class="fa fa-reply"></i></a></div>]]></search>
				<add position="replace"><![CDATA[
				<a href="{{ cancel }}" data-toggle="tooltip" title="{{ button_cancel }}" class="btn btn-default"><i class="fa fa-reply"></i></a>
				{% if module_purpletree_multivendor_status %}
				 {% if helpcheck %}
				<a href="{{ helplink }}" target="_blank" id="button-pts-help" class="btn"><img src="{{ helpimage }}" alt="Help" width="85" height="43"></a>				
		{% endif %}
		{% endif %}
		</div>
				]]></add>					
			</operation>
	</file>
	<file path="catalog/model/extension/d_quickcheckout/order.php">   
		 <operation error="skip">
			<search><![CDATA[public function addOrder($data) {]]></search>
			<add position="after"><![CDATA[
			$total = 0;	
			$vendor_or_teb_id = 0;	
			$seller_sub_total = array();
			$seller_final_total = array();
			$seller_tax_data = array();
			$seller_total_tax = array();
			$tax_data = array();
			$seller = array();
			$seller_shipping = array();
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$data['products'][] = array(]]></search>
			<add position="before"><![CDATA[
			$seller_id='';
			if(!empty($product['cart_id'])){
			$seller_id = $this->cart->getvendorcart($product['cart_id']);
			}
			]]></add>
		</operation>
		
		<operation error="skip">
			<search><![CDATA[$data['products'][] = array(]]></search>
			<add position="after"><![CDATA[
			'seller_id' => $seller_id,
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[ getOrder()]]></search>
			<add position="after"><![CDATA[
			$total = 0;	
			$vendor_or_teb_id = 0;	
			$seller_sub_total = array();
			$seller_final_total = array();
			$seller_tax_data = array();
			$seller_total_tax = array();
			$tax_data = array();
			$seller = array();
			$seller_shipping = array();
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[public function updateOrder($order_id, $data) {]]></search>
			<add position="after"><![CDATA[
			$total = 0;	
			$vendor_or_teb_id = 0;	
			$seller_sub_total = array();
			$seller_final_total = array();
			$seller_tax_data = array();
			$seller_total_tax = array();
			$tax_data = array();
			$seller = array();
			$seller_shipping = array();
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[updateOrder(){]]></search>
			<add position="after"><![CDATA[
			$total = 0;	
			$vendor_or_teb_id = 0;	
			$seller_sub_total = array();
			$seller_final_total = array();
			$seller_tax_data = array();
			$seller_total_tax = array();
			$tax_data = array();
			$seller = array();
			$seller_shipping = array();
			]]></add>
		</operation>
		
		 <operation error="skip">
			<search><![CDATA[$this->db->query("DELETE FROM " . DB_PREFIX . "order_option WHERE order_id = '" . (int) $order_id . "'");]]></search>
			<add position="after"><![CDATA[
			$this->db->query("DELETE FROM " . DB_PREFIX . "purpletree_vendor_orders WHERE order_id = '" . (int)$order_id . "'");
			$this->db->query("DELETE FROM " . DB_PREFIX . "purpletree_vendor_commissions WHERE order_id = '" . (int)$order_id . "'");
			]]></add>
		 </operation>
		 
		 <operation error="skip">
			<search><![CDATA[$this->db->query("DELETE FROM " . DB_PREFIX . "order_voucher WHERE order_id = '" . (int) $order_id . "'");]]></search>
			<add position="after"><![CDATA[
			$this->db->query("DELETE FROM " . DB_PREFIX . "purpletree_order_total WHERE order_id = '" . (int)$order_id . "'");
			]]></add>
		</operation>
		 
		 <operation error="skip">
			<search><![CDATA[public function addOrder($data) {]]></search>
			<add position="before"><![CDATA[
			public function getProductCategory($productid){
		
		$sql = "SELECT category_id FROM " . DB_PREFIX . "product_to_category where 	product_id = '".(int)$productid."'"; 
		
		  $query = $this->db->query($sql);
		  
		  return $query->rows;  
		}
			public function getVendorOrderProducts($order_id) {
		$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "purpletree_vendor_orders WHERE order_id = '" . (int)$order_id . "'");
		
		return $query->rows;
	}
		public function getMatrixShippingCharge($address,$totalweight,$seller_id){
			if(!$this->config->get('module_purpletree_multivendor_shippingtype')){
			$seller_id2 = -1;
			 $sql2 = "SELECT * FROM " . DB_PREFIX . "purpletree_vendor_shipping pvss WHERE pvss.seller_id =".$seller_id2." AND pvss.shipping_country = '".$address['shipping_country_id']."'";
			 if($address['shipping_postcode'] != '') {
				 if(!is_numeric($address['shipping_postcode'])) {
						 $sql2 .= " AND pvss.zipcode_from = '".$address['shipping_postcode']."' AND pvss.zipcode_to = '".$address['shipping_postcode']."'";
						 }
			 }
			 if($this->db->query($sql2)->num_rows){		
				$shippingqery = $this->db->query($sql2)->rows;
			 }else{
				$sql = "SELECT * FROM " . DB_PREFIX . "purpletree_vendor_shipping pvss WHERE pvss.seller_id =".$seller_id." AND pvss.shipping_country = '".$address['shipping_country_id']."'";
						 if(!is_numeric($address['shipping_postcode'])) {
						 $sql .= " AND pvss.zipcode_from = '".$address['shipping_postcode']."' AND pvss.zipcode_to = '".$address['shipping_postcode']."'";
						 }
						 $shippingqery = $this->db->query($sql)->rows;
			}
						if(!empty($shippingqery)) {
							$shipprice = array();
							foreach($shippingqery as $shipp) {
								if($totalweight >= $shipp['weight_from'] && $totalweight <= $shipp['weight_to']) {
								 if(($shipp['zipcode_from'] == '')&&($shipp['zipcode_to'] == '')) {
							$shipprice[] = $shipp['shipping_price'];
					           }else{
									 if(is_numeric($address['shipping_postcode'])) {
										 if($address['shipping_postcode'] >= $shipp['zipcode_from'] && $address['shipping_postcode'] <= $shipp['zipcode_to']) {
											$shipprice[] = $shipp['shipping_price'];
										 }
									 } else {
										$shipprice[] = $shipp['shipping_price'];
									 }
							   }
								}
							}

							if(!empty($shipprice)) {
								return max($shipprice);
							}
								
						}
				if(empty($shipprice)){
					$sql = "SELECT * FROM " . DB_PREFIX . "purpletree_vendor_shipping pvss WHERE pvss.seller_id =".$seller_id." AND pvss.shipping_country = '".$address['shipping_country_id']."'";
						 if(!is_numeric($address['shipping_postcode'])) {
						 $sql .= " AND pvss.zipcode_from = '".$address['shipping_postcode']."' AND pvss.zipcode_to = '".$address['shipping_postcode']."'";
						 }
						 $shippingqery = $this->db->query($sql)->rows;
			
						if(!empty($shippingqery)) {
							$shipprice = array();
							foreach($shippingqery as $shipp) {
								if($totalweight >= $shipp['weight_from'] && $totalweight <= $shipp['weight_to']) {
								 if(($shipp['zipcode_from'] == '')&&($shipp['zipcode_to'] == '')) {
							$shipprice[] = $shipp['shipping_price'];
					           }else{
									 if(is_numeric($address['shipping_postcode'])) {
										 if($address['shipping_postcode'] >= $shipp['zipcode_from'] && $address['shipping_postcode'] <= $shipp['zipcode_to']) {
											$shipprice[] = $shipp['shipping_price'];
										 }
									 } else {
										$shipprice[] = $shipp['shipping_price'];
									 }
							   }
								}
							}

							if(!empty($shipprice)) {
								return max($shipprice);
							}
								
						}
					}		
			}else{
				$sql = "SELECT * FROM  " . DB_PREFIX . "zone_to_geo_zone ztgz INNER JOIN " . DB_PREFIX . "purpletree_vendor_geozone pvz ON (ztgz.geo_zone_id = pvz.geo_zone_id) WHERE pvz.seller_id =".$seller_id." AND ztgz.country_id = '" . (int)$address['shipping_country_id'] . "' AND (ztgz.zone_id = '" . (int)$address['shipping_zone_id'] . "' OR ztgz.zone_id = '0')";

					$shippingqery = $this->db->query($sql)->rows;
					if(!empty($shippingqery)) {
						$shipprice = array();
						foreach($shippingqery as $shipp) {
							if($totalweight >= $shipp['weight_from'] && $totalweight <= $shipp['weight_to']) {
							$shipprice[] = $shipp['price'];
							}
						}
						if(!empty($shipprice)) {
							return max($shipprice);
						}
					}					
					return '0';
			}
	}
	public function getoptionsweight($product){
		$productsql = "SELECT weight,weight_class_id FROM ".DB_PREFIX."product WHERE product_id =".$product['product_id']."";
				$productquery = $this->db->query($productsql)->row;
				$totweight = $productquery['weight'];
			if(!empty($product['option'])) {
				foreach($product['option'] as $productsoptin) {
					//echo "c";
					$productsql1 = "SELECT pov.weight,pov.weight_prefix,p.weight_class_id FROM ".DB_PREFIX."product p JOIN ". DB_PREFIX ."product_option_value pov ON(pov.product_id = p.product_id) WHERE pov.product_option_value_id = '".$productsoptin['product_option_value_id']."' AND pov.product_option_id = '".$productsoptin['product_option_id']."' AND pov.product_id = '".$product['product_id']."' AND pov.option_id = '".$productsoptin['option_id']."' AND pov.option_value_id = '".$productsoptin['option_value_id']."'";
					$productquery1 = $this->db->query($productsql1)->row;
					if(!empty($productquery1)){
						if ($productquery1['weight_prefix'] == '+') {
							$totweight += $totweight+($productquery1['weight'] * $product['quantity']);	
						} elseif ($product_option_value_info['weight_prefix'] == '-') {
							$totweight -= $totweight-($productquery1['weight'] * $product['quantity']);
						}
					}
				}
			} else {
					$totweight = $totweight * $product['quantity'];
			}
		$totalweight = $this->weight->convert($totweight, $productquery['weight_class_id'], $this->config->get('config_weight_class_id'));
		return $totalweight;
	}
	public function getShippingCharge($productid){		
		$sql = "SELECT 	shipping_charge FROM " . DB_PREFIX . "product WHERE product_id = '".(int)$productid."'"; 
		
		  $query = $this->db->query($sql);
		  
		  if($query->num_rows){		
				return $query->row['shipping_charge'];
			 }else{
				return null;
			 }	
		}
	public function getsellershipping($seller_shipping,$product,$address) {

		if($seller_shipping['seller_id'] == '0'){
	
				$shipping_purpletree_shipping_type = (null !== $this->config->get('shipping_purpletree_shipping_type'))? $this->config->get('shipping_purpletree_shipping_type') : 'pts_flat_rate_shipping';
			$shipping_purpletree_shipping_order_type = (null !== $this->config->get('shipping_purpletree_shipping_order_type'))? $this->config->get('shipping_purpletree_shipping_order_type') : 'pts_product_wise';
			$shipping_purpletree_shipping_charge = (null !== $this->config->get('shipping_purpletree_shipping_charge'))? $this->config->get('shipping_purpletree_shipping_charge') : '0';

		} else {
		$shipping_purpletree_shipping_type 			= $seller_shipping['store_shipping_type'] != '' ? $seller_shipping['store_shipping_type'] : 'pts_flat_rate_shipping';
		$shipping_purpletree_shipping_order_type 	= $seller_shipping['store_shipping_order_type'] != '' ? $seller_shipping['store_shipping_order_type'] : 'pts_product_wise';
		$shipping_purpletree_shipping_charge 		= $seller_shipping['store_shipping_charge'] != '' ? $seller_shipping['store_shipping_charge'] : '0';
		}
		$total = 0;
		$product_shipping_charge = '';
		$product_shipping_charge = $this->getShippingCharge($product['product_id']);
		 if(isset($product_shipping_charge)){
		 if($shipping_purpletree_shipping_order_type == 'pts_order_wise'){
						$total += $product_shipping_charge;
			}else{
			           $total += $product_shipping_charge*$product['quantity'];	
			}
		    }else{
		$totalweight = $this->getoptionsweight($product);
		$getMatrixShippingCharge = $this->getMatrixShippingCharge($address,$totalweight,$seller_shipping['seller_id']);
		// if Matric shipping
		
		if($shipping_purpletree_shipping_type == 'pts_matrix_shipping'){
			if(!$this->config->get('module_purpletree_multivendor_shippingtype')){
				//if($address['shipping_postcode'] != '') {
					if($shipping_purpletree_shipping_order_type == 'pts_product_wise'){
						if($getMatrixShippingCharge) {
							$total = $getMatrixShippingCharge;
						}
					} 
				//}	
			} else{
				if($shipping_purpletree_shipping_order_type == 'pts_product_wise'){
					if($getMatrixShippingCharge) {
						$total = $getMatrixShippingCharge;
					}
				} 
			}			
		} // if Matric shipping
		// if Flexible shipping
		elseif($shipping_purpletree_shipping_type  == 'pts_flexible_shipping'){
		if(!$this->config->get('module_purpletree_multivendor_shippingtype')){
			//if($address['shipping_postcode'] != '') {
				if($shipping_purpletree_shipping_order_type == 'pts_product_wise'){
					if($getMatrixShippingCharge) {
						 $total = $getMatrixShippingCharge;
					} else {
						 $total = $shipping_purpletree_shipping_charge;
					}
				}
			/* } else {
				if($shipping_purpletree_shipping_order_type == 'pts_product_wise'){
					 $total = $shipping_purpletree_shipping_charge;
				}
			} */
		} else {
			if($shipping_purpletree_shipping_order_type == 'pts_product_wise'){
				if($getMatrixShippingCharge) {
					 $total = $getMatrixShippingCharge;
				} else {
					$total = $shipping_purpletree_shipping_charge;
				}
			}
		}
	} // if Flexible shipping
		// if Flat Rate shipping
			else {
			if($shipping_purpletree_shipping_order_type == 'pts_product_wise'){
				 $total = $shipping_purpletree_shipping_charge;
			}
		}
		
		// if Flat Rate shipping
		}
		return $total;	
	}
	public function getsellershipping1($seller_shipping,$product,$address) {
		if($seller_shipping['seller_id'] == '0'){
			$shipping_purpletree_shipping_type = (null !== $this->config->get('shipping_purpletree_shipping_type'))? $this->config->get('shipping_purpletree_shipping_type') : 'pts_flat_rate_shipping';
			$shipping_purpletree_shipping_order_type = (null !== $this->config->get('shipping_purpletree_shipping_order_type'))? $this->config->get('shipping_purpletree_shipping_order_type') : 'pts_product_wise';
			$shipping_purpletree_shipping_charge = (null !== $this->config->get('shipping_purpletree_shipping_charge'))? $this->config->get('shipping_purpletree_shipping_charge') : '0';

		} else {
		$shipping_purpletree_shipping_type 			= $seller_shipping['store_shipping_type'] != '' ? $seller_shipping['store_shipping_type'] : 'pts_flat_rate_shipping';
		$shipping_purpletree_shipping_order_type 	= $seller_shipping['store_shipping_order_type'] != '' ? $seller_shipping['store_shipping_order_type'] : 'pts_product_wise';
		$shipping_purpletree_shipping_charge 		= $seller_shipping['store_shipping_charge'] != '' ? $seller_shipping['store_shipping_charge'] : '0';
		}
		$weightt = 0;
		// if Matric shipping
		if($shipping_purpletree_shipping_type == 'pts_matrix_shipping'){
			//if($address['shipping_postcode'] != '') {
				if($shipping_purpletree_shipping_order_type == 'pts_order_wise'){
					 $weightt = $this->getoptionsweight($product);
				}
			//}					
		}// if Matric shipping
		// if Flexible shipping
		elseif($shipping_purpletree_shipping_type  == 'pts_flexible_shipping'){
			//if($address['shipping_postcode'] != '') {
				if($shipping_purpletree_shipping_order_type == 'pts_order_wise'){
					  $weightt = $this->getoptionsweight($product);
				}
			/* } else {
				if($shipping_purpletree_shipping_order_type == 'pts_order_wise'){
				 $weightt = $this->getoptionsweight($product);
				}
			} */
		} // if Flexible shipping
		// if Flat Rate shipping
			else {
			if($shipping_purpletree_shipping_order_type == 'pts_order_wise'){
				 
				  $weightt = $this->getoptionsweight($product);
			}
		}
		
		// if Flat Rate shipping
		return $weightt;	
	}
	]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[getOrder() {]]></search>
			<add position="before"><![CDATA[
			public function getProductCategory($productid){
		
		$sql = "SELECT category_id FROM " . DB_PREFIX . "product_to_category where 	product_id = '".(int)$productid."'"; 
		
		  $query = $this->db->query($sql);
		  
		  return $query->rows;  
		}
			public function getVendorOrderProducts($order_id) {
		$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "purpletree_vendor_orders WHERE order_id = '" . (int)$order_id . "'");
		
		return $query->rows;
	}
	    public function getMatrixShippingCharge($address,$totalweight,$seller_id){
			if(!$this->config->get('module_purpletree_multivendor_shippingtype')){
				$sql = "SELECT * FROM " . DB_PREFIX . "purpletree_vendor_shipping pvss WHERE pvss.seller_id =".$seller_id." AND pvss.shipping_country = '".$address['shipping_country_id']."'";
						 if(!is_numeric($address['shipping_postcode'])) {
						 $sql .= " AND pvss.zipcode_from = '".$address['shipping_postcode']."' AND pvss.zipcode_to = '".$address['shipping_postcode']."'";
						 }
						 $shippingqery = $this->db->query($sql)->rows;
						if(!empty($shippingqery)) {
							$shipprice = array();
							foreach($shippingqery as $shipp) {
								if($totalweight >= $shipp['weight_from'] && $totalweight <= $shipp['weight_to']) {
									 if(is_numeric($address['shipping_postcode'])) {
										 if($address['shipping_postcode'] >= $shipp['zipcode_from'] && $address['shipping_postcode'] <= $shipp['zipcode_to']) {
											$shipprice[] = $shipp['shipping_price'];
										 }
									 } else {
										$shipprice[] = $shipp['shipping_price'];
									 }
								}
							}

							if(!empty($shipprice)) {
								return max($shipprice);
							}
								
						}
			}else{
				$sql = "SELECT * FROM  " . DB_PREFIX . "zone_to_geo_zone ztgz INNER JOIN " . DB_PREFIX . "purpletree_vendor_geozone pvz ON (ztgz.geo_zone_id = pvz.geo_zone_id) WHERE pvz.seller_id =".$seller_id." AND ztgz.country_id = '" . (int)$address['shipping_country_id'] . "' AND (ztgz.zone_id = '" . (int)$address['shipping_zone_id'] . "' OR ztgz.zone_id = '0')";

					$shippingqery = $this->db->query($sql)->rows;
					if(!empty($shippingqery)) {
						$shipprice = array();
						foreach($shippingqery as $shipp) {
						if($totalweight >= $shipp['weight_from'] && $totalweight <= $shipp['weight_to']) {
							$shipprice[] = $shipp['price'];
							}
						}
						if(!empty($shipprice)) {
							return max($shipprice);
						}
					}
					return '0';
			}
	}
	public function getoptionsweight($product){
		$productsql = "SELECT weight,weight_class_id FROM ".DB_PREFIX."product WHERE product_id =".$product['product_id']."";
				$productquery = $this->db->query($productsql)->row;
				$totweight = $productquery['weight'];
			if(!empty($product['option'])) {
				foreach($product['option'] as $productsoptin) {
					//echo "c";
					$productsql1 = "SELECT pov.weight,pov.weight_prefix,p.weight_class_id FROM ".DB_PREFIX."product p JOIN ". DB_PREFIX ."product_option_value pov ON(pov.product_id = p.product_id) WHERE pov.product_option_value_id = '".$productsoptin['product_option_value_id']."' AND pov.product_option_id = '".$productsoptin['product_option_id']."' AND pov.product_id = '".$product['product_id']."' AND pov.option_id = '".$productsoptin['option_id']."' AND pov.option_value_id = '".$productsoptin['option_value_id']."'";
					$productquery1 = $this->db->query($productsql1)->row;
					if(!empty($productquery1)){
						if ($productquery1['weight_prefix'] == '+') {
							$totweight += $totweight+($productquery1['weight'] * $product['quantity']);	
						} elseif ($product_option_value_info['weight_prefix'] == '-') {
							$totweight -= $totweight-($productquery1['weight'] * $product['quantity']);
						}
					}
				}
			} else {
					$totweight = $totweight * $product['quantity'];
			}
		$totalweight = $this->weight->convert($totweight, $productquery['weight_class_id'], $this->config->get('config_weight_class_id'));
		return $totalweight;
	}	
	public function getShippingCharge($productid){		
		$sql = "SELECT 	shipping_charge FROM " . DB_PREFIX . "product WHERE product_id = '".(int)$productid."'"; 
		
		  $query = $this->db->query($sql);
		  
		  if($query->num_rows){		
				return $query->row['shipping_charge'];
			 }else{
				return null;
			 }	
		}
	public function getsellershipping($seller_shipping,$product,$address) {

		if($seller_shipping['seller_id'] == '0'){
	
				$shipping_purpletree_shipping_type = (null !== $this->config->get('shipping_purpletree_shipping_type'))? $this->config->get('shipping_purpletree_shipping_type') : 'pts_flat_rate_shipping';
			$shipping_purpletree_shipping_order_type = (null !== $this->config->get('shipping_purpletree_shipping_order_type'))? $this->config->get('shipping_purpletree_shipping_order_type') : 'pts_product_wise';
			$shipping_purpletree_shipping_charge = (null !== $this->config->get('shipping_purpletree_shipping_charge'))? $this->config->get('shipping_purpletree_shipping_charge') : '0';

		} else {
		$shipping_purpletree_shipping_type 			= $seller_shipping['store_shipping_type'] != '' ? $seller_shipping['store_shipping_type'] : 'pts_flat_rate_shipping';
		$shipping_purpletree_shipping_order_type 	= $seller_shipping['store_shipping_order_type'] != '' ? $seller_shipping['store_shipping_order_type'] : 'pts_product_wise';
		$shipping_purpletree_shipping_charge 		= $seller_shipping['store_shipping_charge'] != '' ? $seller_shipping['store_shipping_charge'] : '0';
		}
		$total = 0;
		$product_shipping_charge = '';
		$product_shipping_charge = $this->getShippingCharge($product['product_id']);
		 if(isset($product_shipping_charge)){
		 if($shipping_purpletree_shipping_order_type == 'pts_order_wise'){
						$total += $product_shipping_charge;
			}else{
			           $total += $product_shipping_charge*$product['quantity'];	
			}
		    }else{
		$totalweight = $this->getoptionsweight($product);
		$getMatrixShippingCharge = $this->getMatrixShippingCharge($address,$totalweight,$seller_shipping['seller_id']);
		// if Matric shipping
		
		if($shipping_purpletree_shipping_type == 'pts_matrix_shipping'){
		if(!$this->config->get('module_purpletree_multivendor_shippingtype')){
			if($address['shipping_postcode'] != '') {
				if($shipping_purpletree_shipping_order_type == 'pts_product_wise'){
					if($getMatrixShippingCharge) {
						$total = $getMatrixShippingCharge;
					}
				} 
			}	
		} else{
				if($shipping_purpletree_shipping_order_type == 'pts_product_wise'){
					if($getMatrixShippingCharge) {
						$total = $getMatrixShippingCharge;
					}
				} 
			}			
		} // if Matric shipping
		// if Flexible shipping
		elseif($shipping_purpletree_shipping_type  == 'pts_flexible_shipping'){
		if(!$this->config->get('module_purpletree_multivendor_shippingtype')){
			if($address['shipping_postcode'] != '') {
				if($shipping_purpletree_shipping_order_type == 'pts_product_wise'){
					if($getMatrixShippingCharge) {
						 $total = $getMatrixShippingCharge;
					} else {
						 $total = $shipping_purpletree_shipping_charge;
					}
				}
			} else {
				if($shipping_purpletree_shipping_order_type == 'pts_product_wise'){
					 $total = $shipping_purpletree_shipping_charge;
				}
			}
		} else {
			if($shipping_purpletree_shipping_order_type == 'pts_product_wise'){
				if($getMatrixShippingCharge) {
					 $total = $getMatrixShippingCharge;
				} else {
					$total = $shipping_purpletree_shipping_charge;
				}
			}
		}
	} // if Flexible shipping
		// if Flat Rate shipping
			else {
			if($shipping_purpletree_shipping_order_type == 'pts_product_wise'){
				 $total = $shipping_purpletree_shipping_charge;
			}
		}
		
		// if Flat Rate shipping
		}
		return $total;	
	}
	public function getsellershipping1($seller_shipping,$product,$address) {
		if($seller_shipping['seller_id'] == '0'){
			$shipping_purpletree_shipping_type = (null !== $this->config->get('shipping_purpletree_shipping_type'))? $this->config->get('shipping_purpletree_shipping_type') : 'pts_flat_rate_shipping';
			$shipping_purpletree_shipping_order_type = (null !== $this->config->get('shipping_purpletree_shipping_order_type'))? $this->config->get('shipping_purpletree_shipping_order_type') : 'pts_product_wise';
			$shipping_purpletree_shipping_charge = (null !== $this->config->get('shipping_purpletree_shipping_charge'))? $this->config->get('shipping_purpletree_shipping_charge') : '0';

		} else {
		$shipping_purpletree_shipping_type 			= $seller_shipping['store_shipping_type'] != '' ? $seller_shipping['store_shipping_type'] : 'pts_flat_rate_shipping';
		$shipping_purpletree_shipping_order_type 	= $seller_shipping['store_shipping_order_type'] != '' ? $seller_shipping['store_shipping_order_type'] : 'pts_product_wise';
		$shipping_purpletree_shipping_charge 		= $seller_shipping['store_shipping_charge'] != '' ? $seller_shipping['store_shipping_charge'] : '0';
		}
		$weightt = 0;
		// if Matric shipping
		if($shipping_purpletree_shipping_type == 'pts_matrix_shipping'){
			if($address['shipping_postcode'] != '') {
				if($shipping_purpletree_shipping_order_type == 'pts_order_wise'){
					 $weightt = $this->getoptionsweight($product);;
				}
			}					
		}// if Matric shipping
		// if Flexible shipping
		elseif($shipping_purpletree_shipping_type  == 'pts_flexible_shipping'){
			if($address['shipping_postcode'] != '') {
				if($shipping_purpletree_shipping_order_type == 'pts_order_wise'){
					  $weightt = $this->getoptionsweight($product);;
				}
			} else {
				if($shipping_purpletree_shipping_order_type == 'pts_order_wise'){
				 $weightt = $this->getoptionsweight($product);;
				}
			}
		} // if Flexible shipping
		// if Flat Rate shipping
			else {
			if($shipping_purpletree_shipping_order_type == 'pts_order_wise'){
				 
				  $weightt = $this->getoptionsweight($product);
			}
		}
		
		// if Flat Rate shipping
		return $weightt;	
	}
	]]></add>
		</operation>
		
		<operation error="skip">
			<search><![CDATA[foreach ($data['products'] as $product) {]]></search>
			<add position="before"><![CDATA[
			$store_shipping_type = array();
			]]></add>
		</operation>
		 
		 
		 <operation error="skip">
			<search><![CDATA[$order_product_id = $this->db->getLastId();]]></search>
			<add position="after"><![CDATA[
		 /*** insert into seller orders ****/
			if ($this->config->get('module_purpletree_multivendor_status')) {	
					
					$seller_id = $this->db->query("SELECT pvp.seller_id, pvs.store_shipping_charge,pvs.store_shipping_order_type,pvs.store_shipping_type,pvs.store_commission, p.tax_class_id FROM " . DB_PREFIX . "purpletree_vendor_products pvp JOIN " . DB_PREFIX . "purpletree_vendor_stores pvs ON(pvs.seller_id=pvp.seller_id) JOIN " . DB_PREFIX . "product p ON(p.product_id=pvp.product_id) WHERE pvp.product_id='".(int)$product['product_id']."' AND pvp.is_approved=1")->row;
					if($this->config->get('module_purpletree_multivendor_seller_product_template')){
					if(empty($seller_id['seller_id'])) {
						if(!empty($product['seller_id'])){
						$sseller_id = $product['seller_id'];
						$seller_id = $this->db->query("SELECT pvs.seller_id, pvs.store_shipping_charge,pvs.store_shipping_order_type,pvs.store_shipping_type,pvs.store_commission, p.tax_class_id FROM " . DB_PREFIX . "purpletree_vendor_template_products pvtp JOIN " . DB_PREFIX . "purpletree_vendor_stores pvs ON(pvs.seller_id=pvtp.seller_id) JOIN " . DB_PREFIX . "purpletree_vendor_template pvt ON(pvt.id=pvtp.template_id) JOIN " . DB_PREFIX . "product p ON(p.product_id=pvt.product_id) WHERE pvt.product_id='".(int)$product['product_id']."' AND pvs.seller_id=".$sseller_id."")->row;
					}
					}
					}
					if(!empty($seller_id['seller_id'])) {
						$seller_id_coupon = $seller_id['seller_id']; //for ALL type coupon use
						$this->db->query("INSERT INTO " . DB_PREFIX . "purpletree_vendor_orders SET order_id ='".(int)$order_id."', seller_id = '".(int)$seller_id['seller_id']."', product_id ='".(int)$product['product_id']."', shipping = '".(float)$seller_id['store_shipping_charge']."', quantity = '" . (int)$product['quantity'] . "', unit_price = '" . (float)$product['price'] . "', total_price = '" . (float)$product['total'] . "', created_at =NOW(), updated_at = NOW()");
						$vendor_or_teb_id = $this->db->getLastId();
						
						$this->db->query("INSERT INTO " . DB_PREFIX . "purpletree_vendor_commissions SET order_id = '" . (int)$order_id . "', product_id ='".(int)$product['product_id']."', seller_id = '" . (int)$seller_id['seller_id'] . "',vendor_order_table_id = '" . (int)$vendor_or_teb_id . "',commission_shipping = '0', commission_fixed = '0', commission_percent = '0', commission = '0', status = 'Pending', created_at = NOW(), updated_at = NOW()");
						//
		$proprice = $product['price'];
		$prototal = $product['total'];
		$this->load->model('extension/total/coupon');
		$coupon_discount = $this->model_extension_total_coupon->getsellercounponTotal($product['product_id']);
		if($coupon_discount) {
			$proprice = $product['price'] - $coupon_discount;
			$prototal = $product['total']-$coupon_discount;
		}
						//
						if(!isset($seller_sub_total[$seller_id['seller_id']])){
						$seller_sub_total[$seller_id['seller_id']] = $product['total'];
						} else {
							$seller_sub_total[$seller_id['seller_id']] += $product['total'];
						}
						
						if(!isset($seller_final_total[$seller_id['seller_id']])){
							$seller_final_total[$seller_id['seller_id']] = $this->tax->calculate($proprice, $seller_id['tax_class_id'], $this->config->get('config_tax')) * $product['quantity'];
						} else {
							$seller_final_total[$seller_id['seller_id']] += $this->tax->calculate($proprice, $seller_id['tax_class_id'], $this->config->get('config_tax')) * $product['quantity'];
						}
						
						$tax_rates = $this->tax->getRates($proprice, $seller_id['tax_class_id']);
			
						foreach ($tax_rates as $tax_rate) {
							if (!isset($seller_tax_data[$seller_id['seller_id']][$tax_rate['tax_rate_id']])) {
								$seller_tax_data[$seller_id['seller_id']][$tax_rate['tax_rate_id']] = ($tax_rate['amount'] * $product['quantity']);
							} else {
								$seller_tax_data[$seller_id['seller_id']][$tax_rate['tax_rate_id']] += ($tax_rate['amount'] * $product['quantity']);
							}
						}
				$shipping_purpletree_shipping_order_type 			= $seller_id['store_shipping_order_type'] != '' ? $seller_id['store_shipping_order_type']:'pts_product_wise' ;
				$shipping_purpletree_shipping_type 			= $seller_id['store_shipping_type'] != '' ? $seller_id['store_shipping_type']:'pts_flat_rate_shipping' ;
				$shipping_purpletree_shipping_charge 		= $seller_id['store_shipping_charge'] != '' ? $seller_id['store_shipping_charge'] : '0';
						$getsellershipping = $this->getsellershipping($seller_id,$product,$data);
						$getsellershipping1 = $this->getsellershipping1($seller_id,$product,$data);
						if(!isset($seller_shipping[$seller_id['seller_id']])){
							$seller_shipping[$seller_id['seller_id']] = $getsellershipping;
							$seller_shipping1[$seller_id['seller_id']] = $getsellershipping1;
						} else {
							$seller_shipping[$seller_id['seller_id']] += $getsellershipping;
							$seller_shipping1[$seller_id['seller_id']] += $getsellershipping1;
						}
					} else {
						$seller_id = array();
						$seller_id['seller_id'] = 0;
						$getsellershipping = $this->getsellershipping($seller_id,$product,$data);
						$getsellershipping1 = $this->getsellershipping1($seller_id,$product,$data);
						if(!isset($seller_shipping[$seller_id['seller_id']])){
							$seller_shipping[$seller_id['seller_id']] = $getsellershipping;
							$seller_shipping1[$seller_id['seller_id']] = $getsellershipping1;
						} else {
							$seller_shipping[$seller_id['seller_id']] += $getsellershipping;
							$seller_shipping1[$seller_id['seller_id']] += $getsellershipping1;
						}
				$shipping_purpletree_shipping_order_type = (null !== $this->config->get('shipping_purpletree_shipping_order_type'))? $this->config->get('shipping_purpletree_shipping_order_type') : 'pts_product_wise';
				$shipping_purpletree_shipping_type = (null !== $this->config->get('shipping_purpletree_shipping_type'))? $this->config->get('shipping_purpletree_shipping_type') : 'pts_flat_rate_shipping';
				$shipping_purpletree_shipping_charge = (null !== $this->config->get('shipping_purpletree_shipping_charge'))? $this->config->get('shipping_purpletree_shipping_charge') : '0';
					} 
				$store_shipping_type[$seller_id['seller_id']] = $shipping_purpletree_shipping_type;
				$store_shipping_charge[$seller_id['seller_id']] = $shipping_purpletree_shipping_charge;
				$store_shipping_order_type[$seller_id['seller_id']] = $shipping_purpletree_shipping_order_type;
				}
			]]></add>
		</operation>
		
		<operation error="skip">
			<search><![CDATA[foreach ($data['vouchers'] as $voucher) {]]></search>
			<add position="before"><![CDATA[
					if(!empty($seller_shipping1)) {
			foreach($seller_shipping1 as $sellerid => $totalweight) {
				if($store_shipping_order_type[$sellerid] == 'pts_order_wise')  {
					$getMatrixShippingCharge1 = $this->getMatrixShippingCharge($data,$totalweight,$sellerid);
					if($store_shipping_type[$sellerid] == 'pts_matrix_shipping') {
						if(!$this->config->get('module_purpletree_multivendor_shippingtype')){
							if($data['shipping_postcode'] != '') {
								if($getMatrixShippingCharge1) {
									$seller_shipping[$sellerid] += $getMatrixShippingCharge1;
								}
							} 
						}else{
							if($getMatrixShippingCharge1) {
								$seller_shipping[$sellerid] += $getMatrixShippingCharge1;
							}
						}
					} elseif($store_shipping_type[$sellerid] == 'pts_flexible_shipping') {
						if($getMatrixShippingCharge1) {
							$seller_shipping[$sellerid] += $getMatrixShippingCharge1;
						} else {
							$seller_shipping[$sellerid] += $store_shipping_charge[$sellerid];
						}
					} elseif($store_shipping_type[$sellerid] == 'pts_flat_rate_shipping') {
							$seller_shipping[$sellerid] += $store_shipping_charge[$sellerid];
					}		
				}
			}
		}
					$this->load->language('extension/total/total');
			/**************************************** For seller tax*******************************/
		if(! empty($seller_tax_data))
		{
		 $taxxx = 0;
			if (isset($data['totals'])) {
				foreach ($data['totals'] as $total) {
					if($total['code']=='tax'){
						$taxxx = $taxxx + $total['value'];
					}
				}
			}
			if($taxxx != 0) {
			foreach($seller_tax_data as $key=>$value){
				foreach ($value as $key1 => $value1) {
					if ($value1 > 0) {
						$tax_detail[$key][] = array(
							'code'       => 'tax',
							'title'      => $this->tax->getRateName($key1),
							'value'      => $value1,
							'sort_order' => $this->config->get('total_tax_sort_order')
						);
						if(!isset($seller_total_tax[$key])){
							$seller_total_tax[$key] = $value1;
						} else {
							$seller_total_tax[$key] +=$value1 ;
						}
					}
				}
			} 
			}
			}
			/**************************************** For seller shipping*******************************/
			$this->load->language('account/ptsregister');
			if($this->config->get('shipping_purpletree_shipping_status')){
			if($data['shipping_code'] == 'purpletree_shipping.purpletree_shipping') {
				foreach($seller_shipping as $key=>$value) {
					if ($value > 0) {
						$shippingtitle = $this->language->get('text_seller_shipping_total');
						if($key == 0) {
						$shippingtitle = $this->language->get('text_admin_shipping_total');
						}
						$tax_detail[$key][] = array(
							'code'       => 'seller_shipping',
							'title'      => $shippingtitle,
							'value'      => $value,
							'sort_order' => '2'
						);
					}
				}	
			}
			}
		
			/**************************************** For seller total*******************************/
			
			foreach($seller_final_total as $key=>$value) {
				if(!isset($seller_total_tax[$key])){
					$seller_total_tax[$key]=0;
				}
				if(!$this->config->get('shipping_purpletree_shipping_status')){
						$seller_shipping[$key]=0;
				}
				//echo $data['shipping_code'];
				if($data['shipping_code'] != 'purpletree_shipping.purpletree_shipping') {
						$seller_shipping[$key]=0;
				}
				if ($value > 0) { 
					$tax_detail[$key][] = array(
						'code'       => 'total',
						'title'      => $this->language->get('text_total'),
						'value'      => max(0, ($seller_sub_total[$key]+$seller_total_tax[$key]+$seller_shipping[$key])),
						'sort_order' => $this->config->get('total_total_sort_order')
					);
				}
			}
				
			/**************************************** For seller sub-total*******************************/
			foreach($seller_sub_total as $key=>$value) {
				if ($value > 0) {
					$tax_detail[$key][] = array(
						'code'       => 'sub_total',
						'title'      => $this->language->get('text_sub_total'),
						'value'      => $value,
						'sort_order' => $this->config->get('sub_total_sort_order')
					);
				}
			}
		if (isset($tax_detail)) {
			foreach ($tax_detail as $key=>$value) {
				foreach($value as $data_1){
					$this->db->query("INSERT INTO " . DB_PREFIX . "purpletree_order_total SET order_id = '" . (int)$order_id . "', seller_id = '".(int)$key."', code = '" . $this->db->escape($data_1['code']) . "', title = '" . $this->db->escape($data_1['title']) . "', `value` = '" . (float)$data_1['value'] . "', sort_order = '" . (int)$data_1['sort_order'] . "'");
				}
			}
		}
			]]></add>
		</operation>
	<operation error="skip">
		<search><![CDATA[return $order_id;]]></search>
			<add position="before"><![CDATA[
		if (isset($data['totals'])) {
				foreach ($data['totals'] as $total) {
					if($total['code']=='coupon'){
						//$couponn = substr($total['title'],8,-1);
						preg_match('#\((.*?)\)#', $total['title'], $match);
						$couponn = $match[1];
						$query6 = $this->db->query("SELECT pvc.seller_id,co.discount FROM `" . DB_PREFIX . "coupon` co INNER JOIN " . DB_PREFIX . "purpletree_vendor_coupons pvc ON(co.coupon_id=pvc.coupon_id) WHERE co.code = '".$couponn."'AND pvc.seller_id!=0");
					if($query6->num_rows){
						$seller_id = $query6->row['seller_id'];
						//for ALL type coupon
						if($seller_id == -1){
						  $seller_id = $seller_id_coupon;
							}
						$this->db->query("INSERT INTO " . DB_PREFIX . "purpletree_order_total SET order_id = '" . (int)$order_id . "', code = '" . $this->db->escape($total['code']) . "', title = '" . $this->db->escape($total['title']) . "', `value` = '" . (float)$total['value'] . "', sort_order = '" . (int)$total['sort_order'] . "', seller_id = '" .(int)$seller_id."'");
						
						$query7 = $this->db->query("SELECT order_total_id,value FROM `" . DB_PREFIX . "purpletree_order_total` WHERE order_id = '" . (int)$order_id . "' AND seller_id = '".(int)$seller_id."' AND code ='total'");
						if($query7->num_rows){
							$order_total_id = $query7->row['order_total_id'];
							$total_value = $query7->row['value'];
						}
						$coupon_amount = $total['value'];
						if(isset($total_value) && isset($coupon_amount)){
							$total_after_apply_coupon = $total_value + ($coupon_amount);
							$this->db->query("UPDATE `" . DB_PREFIX . "purpletree_order_total` SET value = '" . (float)$total_after_apply_coupon . "' WHERE order_total_id='". (int)$order_total_id ."'");
						}
					}
				}
			}
		}
		]]></add>
	</operation>
	<operation error="skip">
			<search><![CDATA[public function deleteOrder($order_id) {]]></search>
			<add position="before" offset="2"><![CDATA[
		if (isset($data['totals'])) {
				foreach ($data['totals'] as $total) {
					if($total['code']=='coupon'){
						//$couponn = substr($total['title'],8,-1);
						preg_match('#\((.*?)\)#', $total['title'], $match);
						$couponn = $match[1];
						$query6 = $this->db->query("SELECT pvc.seller_id,co.discount FROM `" . DB_PREFIX . "coupon` co INNER JOIN " . DB_PREFIX . "purpletree_vendor_coupons pvc ON(co.coupon_id=pvc.coupon_id) WHERE co.code = '".$couponn."'AND pvc.seller_id!=0");
					if($query6->num_rows){
						$seller_id = $query6->row['seller_id'];
						//for ALL type coupon
						if($seller_id == -1){
						  $seller_id = $seller_id_coupon;
							}
						$this->db->query("INSERT INTO " . DB_PREFIX . "purpletree_order_total SET order_id = '" . (int)$order_id . "', code = '" . $this->db->escape($total['code']) . "', title = '" . $this->db->escape($total['title']) . "', `value` = '" . (float)$total['value'] . "', sort_order = '" . (int)$total['sort_order'] . "', seller_id = '" .(int)$seller_id."'");
						
						$query7 = $this->db->query("SELECT order_total_id,value FROM `" . DB_PREFIX . "purpletree_order_total` WHERE order_id = '" . (int)$order_id . "' AND seller_id = '".(int)$seller_id."' AND code ='total'");
						if($query7->num_rows){
							$order_total_id = $query7->row['order_total_id'];
							$total_value = $query7->row['value'];
						}
						$coupon_amount = $total['value'];
						if(isset($total_value) && isset($coupon_amount)){
							$total_after_apply_coupon = $total_value + ($coupon_amount);
							$this->db->query("UPDATE `" . DB_PREFIX . "purpletree_order_total` SET value = '" . (float)$total_after_apply_coupon . "' WHERE order_total_id='". (int)$order_total_id ."'");
						}
					}
				}
			}
		}
		]]></add>
	</operation>
</file>
	<file path="catalog/controller/checkout/confirm.php">
	 <operation error="skip">
			<search><![CDATA[$order_data['products'][] = array(]]></search>
			<add position="before"><![CDATA[$seller_id = $this->cart->getvendorcart($product['cart_id']);]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA['product_id' => $product['product_id']]]></search>
			<add position="before"><![CDATA['seller_id'  => isset($seller_id)?$seller_id:'',]]></add>
		</operation>
	</file>
	<file path="catalog/controller/checkout/newstorecheckout.php">
	 <operation error="skip">
			<search><![CDATA[$order_data['products'][] = array(]]></search>
			<add position="before"><![CDATA[			// purpletree code
				$cart_id='';
				$seller_id='';
				if((int)$product['cart_id']){
					$cart_id=$product['cart_id'];
				}
				if($cart_id){
					if(method_exists($this->cart,'getvendorcart')){
					$seller_id = $this->cart->getvendorcart($cart_id);
					}
				}
			// purpletree code]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$order_data['products'][] = array(]]></search>
			<add position="after"><![CDATA['seller_id'  => $seller_id,]]></add>
		</operation>
	</file>
	<file path="catalog/model/checkout/order.php">
	<operation error="skip">
		<search><![CDATA[return $order_id;]]></search>
			<add position="before"><![CDATA[
		if (isset($data['totals'])) {
				foreach ($data['totals'] as $total) {
					if($total['code']=='coupon'){
						//$couponn = substr($total['title'],8,-1);
						preg_match('#\((.*?)\)#', $total['title'], $match);
						$couponn = $match[1];
						$query6 = $this->db->query("SELECT pvc.seller_id,co.discount FROM `" . DB_PREFIX . "coupon` co INNER JOIN " . DB_PREFIX . "purpletree_vendor_coupons pvc ON(co.coupon_id=pvc.coupon_id) WHERE co.code = '".$couponn."'AND pvc.seller_id!=0");
					if($query6->num_rows){
						$seller_id = $query6->row['seller_id'];
						//for ALL type coupon
						if($seller_id == -1){
						  $seller_id = $seller_id_coupon;
							}
						$this->db->query("INSERT INTO " . DB_PREFIX . "purpletree_order_total SET order_id = '" . (int)$order_id . "', code = '" . $this->db->escape($total['code']) . "', title = '" . $this->db->escape($total['title']) . "', `value` = '" . (float)$total['value'] . "', sort_order = '" . (int)$total['sort_order'] . "', seller_id = '" .(int)$seller_id."'");
						
						$query7 = $this->db->query("SELECT order_total_id,value FROM `" . DB_PREFIX . "purpletree_order_total` WHERE order_id = '" . (int)$order_id . "' AND seller_id = '".(int)$seller_id."' AND code ='total'");
						if($query7->num_rows){
							$order_total_id = $query7->row['order_total_id'];
							$total_value = $query7->row['value'];
						}
						$coupon_amount = $total['value'];
						if(isset($total_value) && isset($coupon_amount)){
							$total_after_apply_coupon = $total_value + ($coupon_amount);
							$this->db->query("UPDATE `" . DB_PREFIX . "purpletree_order_total` SET value = '" . (float)$total_after_apply_coupon . "' WHERE order_total_id='". (int)$order_total_id ."'");
						}
					}
				}
			}
		}
		]]></add>
	</operation>
	<operation error="skip">
			<search><![CDATA[public function deleteOrder($order_id) {]]></search>
			<add position="before" offset="2"><![CDATA[
		if (isset($data['totals'])) {
				foreach ($data['totals'] as $total) {
					if($total['code']=='coupon'){
						//$couponn = substr($total['title'],8,-1);
						preg_match('#\((.*?)\)#', $total['title'], $match);
						$couponn = $match[1];
						$query6 = $this->db->query("SELECT pvc.seller_id,co.discount FROM `" . DB_PREFIX . "coupon` co INNER JOIN " . DB_PREFIX . "purpletree_vendor_coupons pvc ON(co.coupon_id=pvc.coupon_id) WHERE co.code = '".$couponn."'AND pvc.seller_id!=0");
					if($query6->num_rows){
						$seller_id = $query6->row['seller_id'];
						//for ALL type coupon
						if($seller_id == -1){
						  $seller_id = $seller_id_coupon;
							}
						$this->db->query("INSERT INTO " . DB_PREFIX . "purpletree_order_total SET order_id = '" . (int)$order_id . "', code = '" . $this->db->escape($total['code']) . "', title = '" . $this->db->escape($total['title']) . "', `value` = '" . (float)$total['value'] . "', sort_order = '" . (int)$total['sort_order'] . "', seller_id = '" .(int)$seller_id."'");
						
						$query7 = $this->db->query("SELECT order_total_id,value FROM `" . DB_PREFIX . "purpletree_order_total` WHERE order_id = '" . (int)$order_id . "' AND seller_id = '".(int)$seller_id."' AND code ='total'");
						if($query7->num_rows){
							$order_total_id = $query7->row['order_total_id'];
							$total_value = $query7->row['value'];
						}
						$coupon_amount = $total['value'];
						if(isset($total_value) && isset($coupon_amount)){
							$total_after_apply_coupon = $total_value + ($coupon_amount);
							$this->db->query("UPDATE `" . DB_PREFIX . "purpletree_order_total` SET value = '" . (float)$total_after_apply_coupon . "' WHERE order_total_id='". (int)$order_total_id ."'");
						}
					}
				}
			}
		}
		]]></add>
	</operation>	
		<operation error="skip">
			<search><![CDATA[public function addOrder($data) {]]></search>
			<add position="after"><![CDATA[
			$total = 0;	
			$vendor_or_teb_id = 0;	
			$seller_sub_total = array();
			$seller_final_total = array();
			$seller_tax_data = array();
			$seller_total_tax = array();
			$tax_data = array();
			$seller = array();
			$seller_shipping = array();
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[public function editOrder($order_id, $data) {]]></search>
			<add position="after"><![CDATA[
			$total = 0;	
			$vendor_or_teb_id = 0;	
			$seller_sub_total = array();
			$seller_final_total = array();
			$seller_tax_data = array();
			$seller_total_tax = array();
			$tax_data = array();
			$seller = array();
			$seller_shipping = array();
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$this->db->query("DELETE FROM " . DB_PREFIX . "order_option WHERE order_id = '" . (int)$order_id . "'");]]></search>
			<add position="after"><![CDATA[
			$this->db->query("DELETE FROM " . DB_PREFIX . "purpletree_vendor_orders WHERE order_id = '" . (int)$order_id . "'");
			$this->db->query("DELETE FROM " . DB_PREFIX . "purpletree_vendor_commissions WHERE order_id = '" . (int)$order_id . "'");
			]]></add>
		</operation>
				<operation error="skip">
			<search><![CDATA[$this->db->query("DELETE FROM " . DB_PREFIX . "order_voucher WHERE order_id = '" . (int)$order_id . "'");]]></search>
			<add position="after"><![CDATA[
			$this->db->query("DELETE FROM " . DB_PREFIX . "purpletree_order_total WHERE order_id = '" . (int)$order_id . "'");
			]]></add>
		</operation>
        <operation error="skip">
			<search><![CDATA[public function addOrder($data) {]]></search>
			<add position="before"><![CDATA[
			public function getProductCategory($productid){
		
		$sql = "SELECT category_id FROM " . DB_PREFIX . "product_to_category where 	product_id = '".(int)$productid."'"; 
		
		  $query = $this->db->query($sql);
		  
		  return $query->rows;  
		}
		public function getTemplateId($product_id) {
			$query = $this->db->query("SELECT pvt.id as id FROM " . DB_PREFIX . "purpletree_vendor_template pvt  WHERE pvt.product_id ='". (int)$product_id ."'");
			 if($query->num_rows){		
				return $query->row['id'];
			 }else{
				 return null;
			 }
		
	}
			public function getVendorOrderProducts($order_id) {
		$query = $this->db->query("SELECT * FROM " . DB_PREFIX . "purpletree_vendor_orders WHERE order_id = '" . (int)$order_id . "'");
		
		return $query->rows;
	}
		public function getMatrixShippingCharge($address,$totalweight,$seller_id){
			if(!$this->config->get('module_purpletree_multivendor_shippingtype')){
				$seller_id2 = -1;
			 $sql2 = "SELECT * FROM " . DB_PREFIX . "purpletree_vendor_shipping pvss WHERE pvss.seller_id =".$seller_id2." AND pvss.shipping_country = '".$address['shipping_country_id']."'";
			 if($address['shipping_postcode'] != '') {
				 if(!is_numeric($address['shipping_postcode'])) {
						 $sql2 .= " AND pvss.zipcode_from = '".$address['shipping_postcode']."' AND pvss.zipcode_to = '".$address['shipping_postcode']."'";
						 }
			 }
			 if($this->db->query($sql2)->num_rows){		
				$shippingqery = $this->db->query($sql2)->rows;
			 }else{
				$sql = "SELECT * FROM " . DB_PREFIX . "purpletree_vendor_shipping pvss WHERE pvss.seller_id =".$seller_id." AND pvss.shipping_country = '".$address['shipping_country_id']."'";
						 if(!is_numeric($address['shipping_postcode'])) {
						 $sql .= " AND pvss.zipcode_from = '".$address['shipping_postcode']."' AND pvss.zipcode_to = '".$address['shipping_postcode']."'";
						 }
						 $shippingqery = $this->db->query($sql)->rows;
			}
						if(!empty($shippingqery)) {
							$shipprice = array();
							foreach($shippingqery as $shipp) {
								if($totalweight >= $shipp['weight_from'] && $totalweight <= $shipp['weight_to']) {
								 if(($shipp['zipcode_from'] == '')&&($shipp['zipcode_to'] == '')) {
							$shipprice[] = $shipp['shipping_price'];
					           }else{
									 if(is_numeric($address['shipping_postcode'])) {
										 if($address['shipping_postcode'] >= $shipp['zipcode_from'] && $address['shipping_postcode'] <= $shipp['zipcode_to']) {
											$shipprice[] = $shipp['shipping_price'];
										 }
									 } else {
										$shipprice[] = $shipp['shipping_price'];
									 }
							   }
								}
							}

							if(!empty($shipprice)) {
								return max($shipprice);
							}
								
						}
						if(empty($shipprice)){
						  $sql = "SELECT * FROM " . DB_PREFIX . "purpletree_vendor_shipping pvss WHERE pvss.seller_id =".$seller_id." AND pvss.shipping_country = '".$address['shipping_country_id']."'";
						 if(!is_numeric($address['shipping_postcode'])) {
						 $sql .= " AND pvss.zipcode_from = '".$address['shipping_postcode']."' AND pvss.zipcode_to = '".$address['shipping_postcode']."'";
						 }
						 $shippingqery = $this->db->query($sql)->rows;
			
						if(!empty($shippingqery)) {
							$shipprice = array();
							foreach($shippingqery as $shipp) {
								if($totalweight >= $shipp['weight_from'] && $totalweight <= $shipp['weight_to']) {
								 if(($shipp['zipcode_from'] == '')&&($shipp['zipcode_to'] == '')) {
							$shipprice[] = $shipp['shipping_price'];
					           }else{
									 if(is_numeric($address['shipping_postcode'])) {
										 if($address['shipping_postcode'] >= $shipp['zipcode_from'] && $address['shipping_postcode'] <= $shipp['zipcode_to']) {
											$shipprice[] = $shipp['shipping_price'];
										 }
									 } else {
										$shipprice[] = $shipp['shipping_price'];
									 }
							   }
								}
							}

							if(!empty($shipprice)) {
								return max($shipprice);
							}
								
						}
						}
			}else{
				$sql = "SELECT * FROM  " . DB_PREFIX . "zone_to_geo_zone ztgz INNER JOIN " . DB_PREFIX . "purpletree_vendor_geozone pvz ON (ztgz.geo_zone_id = pvz.geo_zone_id) WHERE pvz.seller_id =".$seller_id." AND ztgz.country_id = '" . (int)$address['shipping_country_id'] . "' AND (ztgz.zone_id = '" . (int)$address['shipping_zone_id'] . "' OR ztgz.zone_id = '0')";

					$shippingqery = $this->db->query($sql)->rows;
					if(!empty($shippingqery)) {
						$shipprice = array();
						foreach($shippingqery as $shipp) {
						if($totalweight >= $shipp['weight_from'] && $totalweight <= $shipp['weight_to']) {
							$shipprice[] = $shipp['price'];
							}
						}
						if(!empty($shipprice)) {
							return max($shipprice);
						}
					}
					return '0';
			}
	}
	public function getoptionsweight($product){
		$productsql = "SELECT weight,weight_class_id FROM ".DB_PREFIX."product WHERE product_id =".$product['product_id']."";
				$productquery = $this->db->query($productsql)->row;
				$totweight = $productquery['weight'];
			if(!empty($product['option'])) {
				foreach($product['option'] as $productsoptin) {
					//echo "c";
					$productsql1 = "SELECT pov.weight,pov.weight_prefix,p.weight_class_id FROM ".DB_PREFIX."product p JOIN ". DB_PREFIX ."product_option_value pov ON(pov.product_id = p.product_id) WHERE pov.product_option_value_id = '".$productsoptin['product_option_value_id']."' AND pov.product_option_id = '".$productsoptin['product_option_id']."' AND pov.product_id = '".$product['product_id']."' AND pov.option_id = '".$productsoptin['option_id']."' AND pov.option_value_id = '".$productsoptin['option_value_id']."'";
					$productquery1 = $this->db->query($productsql1)->row;
					if(!empty($productquery1)){
						if ($productquery1['weight_prefix'] == '+') {
							$totweight += $totweight+($productquery1['weight'] * $product['quantity']);	
						} elseif ($product_option_value_info['weight_prefix'] == '-') {
							$totweight -= $totweight-($productquery1['weight'] * $product['quantity']);
						}
					}
				}
			} else {
					$totweight = $totweight * $product['quantity'];
			}
		$totalweight = $this->weight->convert($totweight, $productquery['weight_class_id'], $this->config->get('config_weight_class_id'));
		return $totalweight;
	}	
	public function getShippingCharge($productid){		
		$sql = "SELECT 	shipping_charge FROM " . DB_PREFIX . "product WHERE product_id = '".(int)$productid."'"; 
		
		  $query = $this->db->query($sql);
		  
		  if($query->num_rows){		
				return $query->row['shipping_charge'];
			 }else{
				return null;
			 }	
		}
		public function getsellershipping($seller_shipping,$product,$address) {

		if($seller_shipping['seller_id'] == '0'){
	
				$shipping_purpletree_shipping_type = (null !== $this->config->get('shipping_purpletree_shipping_type'))? $this->config->get('shipping_purpletree_shipping_type') : 'pts_flat_rate_shipping';
			$shipping_purpletree_shipping_order_type = (null !== $this->config->get('shipping_purpletree_shipping_order_type'))? $this->config->get('shipping_purpletree_shipping_order_type') : 'pts_product_wise';
			$shipping_purpletree_shipping_charge = (null !== $this->config->get('shipping_purpletree_shipping_charge'))? $this->config->get('shipping_purpletree_shipping_charge') : '0';

		} else {
		$shipping_purpletree_shipping_type 			= $seller_shipping['store_shipping_type'] != '' ? $seller_shipping['store_shipping_type'] : 'pts_flat_rate_shipping';
		$shipping_purpletree_shipping_order_type 	= $seller_shipping['store_shipping_order_type'] != '' ? $seller_shipping['store_shipping_order_type'] : 'pts_product_wise';
		$shipping_purpletree_shipping_charge 		= $seller_shipping['store_shipping_charge'] != '' ? $seller_shipping['store_shipping_charge'] : '0';
		}
		$total = 0;
		$product_shipping_charge = '';
		$product_shipping_charge = $this->getShippingCharge($product['product_id']);
		 if(isset($product_shipping_charge)){
		 if($shipping_purpletree_shipping_order_type == 'pts_order_wise'){
						$total += $product_shipping_charge;
			}else{
			           $total += $product_shipping_charge*$product['quantity'];	
			}
		    }else{
		$totalweight = $this->getoptionsweight($product);
		$getMatrixShippingCharge = $this->getMatrixShippingCharge($address,$totalweight,$seller_shipping['seller_id']);
		// if Matric shipping
		
		if($shipping_purpletree_shipping_type == 'pts_matrix_shipping'){
			if(!$this->config->get('module_purpletree_multivendor_shippingtype')){
				//if($address['shipping_postcode'] != '') {
					if($shipping_purpletree_shipping_order_type == 'pts_product_wise'){
						if($getMatrixShippingCharge) {
							$total = $getMatrixShippingCharge;
						}
					} 
				//}	
			} else{
				if($shipping_purpletree_shipping_order_type == 'pts_product_wise'){
					if($getMatrixShippingCharge) {
						$total = $getMatrixShippingCharge;
					}
				} 
			}			
		} // if Matric shipping
		// if Flexible shipping
		elseif($shipping_purpletree_shipping_type  == 'pts_flexible_shipping'){
		if(!$this->config->get('module_purpletree_multivendor_shippingtype')){
			//if($address['shipping_postcode'] != '') {
				if($shipping_purpletree_shipping_order_type == 'pts_product_wise'){
					if($getMatrixShippingCharge) {
						 $total = $getMatrixShippingCharge;
					} else {
						 $total = $shipping_purpletree_shipping_charge;
					}
				}
			/* } else {
				if($shipping_purpletree_shipping_order_type == 'pts_product_wise'){
					 $total = $shipping_purpletree_shipping_charge;
				}
			} */
		} else {
			if($shipping_purpletree_shipping_order_type == 'pts_product_wise'){
				if($getMatrixShippingCharge) {
					 $total = $getMatrixShippingCharge;
				} else {
					$total = $shipping_purpletree_shipping_charge;
				}
			}
		}
	} // if Flexible shipping
		// if Flat Rate shipping
			else {
			if($shipping_purpletree_shipping_order_type == 'pts_product_wise'){
				 $total = $shipping_purpletree_shipping_charge;
			}
		}
		
		// if Flat Rate shipping
		}
		return $total;	
	}
	public function getsellershipping1($seller_shipping,$product,$address) {
		if($seller_shipping['seller_id'] == '0'){
			$shipping_purpletree_shipping_type = (null !== $this->config->get('shipping_purpletree_shipping_type'))? $this->config->get('shipping_purpletree_shipping_type') : 'pts_flat_rate_shipping';
			$shipping_purpletree_shipping_order_type = (null !== $this->config->get('shipping_purpletree_shipping_order_type'))? $this->config->get('shipping_purpletree_shipping_order_type') : 'pts_product_wise';
			$shipping_purpletree_shipping_charge = (null !== $this->config->get('shipping_purpletree_shipping_charge'))? $this->config->get('shipping_purpletree_shipping_charge') : '0';

		} else {
		$shipping_purpletree_shipping_type 			= $seller_shipping['store_shipping_type'] != '' ? $seller_shipping['store_shipping_type'] : 'pts_flat_rate_shipping';
		$shipping_purpletree_shipping_order_type 	= $seller_shipping['store_shipping_order_type'] != '' ? $seller_shipping['store_shipping_order_type'] : 'pts_product_wise';
		$shipping_purpletree_shipping_charge 		= $seller_shipping['store_shipping_charge'] != '' ? $seller_shipping['store_shipping_charge'] : '0';
		}
		$weightt = 0;
		// if Matric shipping
		if($shipping_purpletree_shipping_type == 'pts_matrix_shipping'){
			//if($address['shipping_postcode'] != '') {
				if($shipping_purpletree_shipping_order_type == 'pts_order_wise'){
					 $weightt = $this->getoptionsweight($product);
				}
			//}					
		}// if Matric shipping
		// if Flexible shipping
		elseif($shipping_purpletree_shipping_type  == 'pts_flexible_shipping'){
			//if($address['shipping_postcode'] != '') {
				if($shipping_purpletree_shipping_order_type == 'pts_order_wise'){
					  $weightt = $this->getoptionsweight($product);
				}
			/* } else {
				if($shipping_purpletree_shipping_order_type == 'pts_order_wise'){
				 $weightt = $this->getoptionsweight($product);
				}
			} */
		} // if Flexible shipping
		// if Flat Rate shipping
			else {
			if($shipping_purpletree_shipping_order_type == 'pts_order_wise'){
				 
				  $weightt = $this->getoptionsweight($product);
			}
		}
		
		// if Flat Rate shipping
		return $weightt;	
	}
	public function getsellerInfofororder($sellerid) { 	
		    $query = $this->db->query("SELECT pvs.store_name, pvs.id AS store_id FROM " . DB_PREFIX . "purpletree_vendor_stores pvs  WHERE pvs.seller_id = '" . (int)$sellerid . "'");    
		     return $query->row;
		 
	}
	public function getOrderedProductsellerid($order_id,$product_id) {
		$query = $this->db->query("SELECT seller_id FROM `" . DB_PREFIX . "purpletree_vendor_orders` WHERE order_id = '" . (int)$order_id . "' AND product_id = '" . (int)$product_id . "' ");
		if(!empty($query->row['seller_id'])){
			return $query->row['seller_id'];
		}else{
			return null;
		}
	}
	]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[if (isset($data['products'])) {]]></search>
			<add position="after"><![CDATA[
			$store_shipping_type = array();
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$order_product_id = $this->db->getLastId();]]></search>
			<add position="after"><![CDATA[
		 /*** insert into seller orders ****/
			if ($this->config->get('module_purpletree_multivendor_status')) {	
					
					$seller_id = $this->db->query("SELECT pvp.seller_id, pvs.store_shipping_charge,pvs.store_shipping_order_type,pvs.store_shipping_type,pvs.store_commission, p.tax_class_id FROM " . DB_PREFIX . "purpletree_vendor_products pvp JOIN " . DB_PREFIX . "purpletree_vendor_stores pvs ON(pvs.seller_id=pvp.seller_id) JOIN " . DB_PREFIX . "product p ON(p.product_id=pvp.product_id) WHERE pvp.product_id='".(int)$product['product_id']."' AND pvp.is_approved=1")->row;
					if($this->config->get('module_purpletree_multivendor_seller_product_template')){
					if(empty($seller_id['seller_id'])) {
						$sseller_id = $product['seller_id'];
						$seller_id = $this->db->query("SELECT pvs.seller_id, pvs.store_shipping_charge,pvs.store_shipping_order_type,pvs.store_shipping_type,pvs.store_commission, p.tax_class_id FROM " . DB_PREFIX . "purpletree_vendor_template_products pvtp JOIN " . DB_PREFIX . "purpletree_vendor_stores pvs ON(pvs.seller_id=pvtp.seller_id) JOIN " . DB_PREFIX . "purpletree_vendor_template pvt ON(pvt.id=pvtp.template_id) JOIN " . DB_PREFIX . "product p ON(p.product_id=pvt.product_id) WHERE pvt.product_id='".(int)$product['product_id']."' AND pvs.seller_id='".$sseller_id."'")->row;
					}
					}
					if(!empty($seller_id['seller_id'])) {
						$seller_id_coupon = $seller_id['seller_id']; //for ALL type coupon use
						$this->db->query("INSERT INTO " . DB_PREFIX . "purpletree_vendor_orders SET order_id ='".(int)$order_id."', seller_id = '".(int)$seller_id['seller_id']."', product_id ='".(int)$product['product_id']."', shipping = '".(float)$seller_id['store_shipping_charge']."', quantity = '" . (int)$product['quantity'] . "', unit_price = '" . (float)$product['price'] . "', total_price = '" . (float)$product['total'] . "', created_at =NOW(), updated_at = NOW()");					
						$vendor_or_teb_id = $this->db->getLastId();
						$this->db->query("INSERT INTO " . DB_PREFIX . "purpletree_vendor_commissions SET order_id = '" . (int)$order_id . "', product_id ='".(int)$product['product_id']."', seller_id = '" . (int)$seller_id['seller_id'] . "',vendor_order_table_id = '" . (int)$vendor_or_teb_id . "',commission_shipping = '0', commission_fixed = '0', commission_percent = '0', commission = '0', status = 'Pending', created_at = NOW(), updated_at = NOW()");
						//
		$proprice = $product['price'];
		$prototal = $product['total'];
		$this->load->model('extension/total/coupon');
		$coupon_discount = $this->model_extension_total_coupon->getsellercounponTotal($product['product_id']);
		if($coupon_discount) {
			$proprice = $product['price'] - $coupon_discount;
			$prototal = $product['total']-$coupon_discount;
		}
						//
						if(!isset($seller_sub_total[$seller_id['seller_id']])){
						$seller_sub_total[$seller_id['seller_id']] = $product['total'];
						} else {
							$seller_sub_total[$seller_id['seller_id']] += $product['total'];
						}
						
						if(!isset($seller_final_total[$seller_id['seller_id']])){
							$seller_final_total[$seller_id['seller_id']] = $this->tax->calculate($proprice, $seller_id['tax_class_id'], $this->config->get('config_tax')) * $product['quantity'];
						} else {
							$seller_final_total[$seller_id['seller_id']] += $this->tax->calculate($proprice, $seller_id['tax_class_id'], $this->config->get('config_tax')) * $product['quantity'];
						}
						
						$tax_rates = $this->tax->getRates($proprice, $seller_id['tax_class_id']);
			
						foreach ($tax_rates as $tax_rate) {
							if (!isset($seller_tax_data[$seller_id['seller_id']][$tax_rate['tax_rate_id']])) {
								$seller_tax_data[$seller_id['seller_id']][$tax_rate['tax_rate_id']] = ($tax_rate['amount'] * $product['quantity']);
							} else {
								$seller_tax_data[$seller_id['seller_id']][$tax_rate['tax_rate_id']] += ($tax_rate['amount'] * $product['quantity']);
							}
						}
				$shipping_purpletree_shipping_order_type 			= $seller_id['store_shipping_order_type'] != '' ? $seller_id['store_shipping_order_type']:'pts_product_wise' ;
				$shipping_purpletree_shipping_type 			= $seller_id['store_shipping_type'] != '' ? $seller_id['store_shipping_type']:'pts_flat_rate_shipping' ;
				$shipping_purpletree_shipping_charge 		= $seller_id['store_shipping_charge'] != '' ? $seller_id['store_shipping_charge'] : '0';
						$getsellershipping = $this->getsellershipping($seller_id,$product,$data);
						$getsellershipping1 = $this->getsellershipping1($seller_id,$product,$data);
						if(!isset($seller_shipping[$seller_id['seller_id']])){
							$seller_shipping[$seller_id['seller_id']] = $getsellershipping;
							$seller_shipping1[$seller_id['seller_id']] = $getsellershipping1;
						} else {
							$seller_shipping[$seller_id['seller_id']] += $getsellershipping;
							$seller_shipping1[$seller_id['seller_id']] += $getsellershipping1;
						}
					} else {
						$seller_id = array();
						$seller_id['seller_id'] = 0;
						$getsellershipping = $this->getsellershipping($seller_id,$product,$data);
						$getsellershipping1 = $this->getsellershipping1($seller_id,$product,$data);
						if(!isset($seller_shipping[$seller_id['seller_id']])){
							$seller_shipping[$seller_id['seller_id']] = $getsellershipping;
							$seller_shipping1[$seller_id['seller_id']] = $getsellershipping1;
						} else {
							$seller_shipping[$seller_id['seller_id']] += $getsellershipping;
							$seller_shipping1[$seller_id['seller_id']] += $getsellershipping1;
						}
				$shipping_purpletree_shipping_order_type = (null !== $this->config->get('shipping_purpletree_shipping_order_type'))? $this->config->get('shipping_purpletree_shipping_order_type') : 'pts_product_wise';
				$shipping_purpletree_shipping_type = (null !== $this->config->get('shipping_purpletree_shipping_type'))? $this->config->get('shipping_purpletree_shipping_type') : 'pts_flat_rate_shipping';
				$shipping_purpletree_shipping_charge = (null !== $this->config->get('shipping_purpletree_shipping_charge'))? $this->config->get('shipping_purpletree_shipping_charge') : '0';
					} 
				$store_shipping_type[$seller_id['seller_id']] = $shipping_purpletree_shipping_type;
				$store_shipping_charge[$seller_id['seller_id']] = $shipping_purpletree_shipping_charge;
				$store_shipping_order_type[$seller_id['seller_id']] = $shipping_purpletree_shipping_order_type;
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[if (isset($data['vouchers'])) {]]></search>
			<add position="before"><![CDATA[
					if(!empty($seller_shipping1)) {
			foreach($seller_shipping1 as $sellerid => $totalweight) {
				if($store_shipping_order_type[$sellerid] == 'pts_order_wise')  {
					$getMatrixShippingCharge1 = $this->getMatrixShippingCharge($data,$totalweight,$sellerid);
					if($store_shipping_type[$sellerid] == 'pts_matrix_shipping') {
						if(!$this->config->get('module_purpletree_multivendor_shippingtype')){
							if($data['shipping_postcode'] != '') {
								if($getMatrixShippingCharge1) {
									$seller_shipping[$sellerid] += $getMatrixShippingCharge1;
								}
							} 
						}else{
							if($getMatrixShippingCharge1) {
								$seller_shipping[$sellerid] += $getMatrixShippingCharge1;
							}
						}
					} elseif($store_shipping_type[$sellerid] == 'pts_flexible_shipping') {
						if($getMatrixShippingCharge1) {
							$seller_shipping[$sellerid] += $getMatrixShippingCharge1;
						} else {
							$seller_shipping[$sellerid] += $store_shipping_charge[$sellerid];
						}
					} elseif($store_shipping_type[$sellerid] == 'pts_flat_rate_shipping') {
							$seller_shipping[$sellerid] += $store_shipping_charge[$sellerid];
					}
				}
			}
		}
					$this->load->language('extension/total/total');
			/**************************************** For seller tax*******************************/
		if(! empty($seller_tax_data))
		{
		 $taxxx = 0;
			if (isset($data['totals'])) {
				foreach ($data['totals'] as $total) {
					if($total['code']=='tax'){
						$taxxx = $taxxx + $total['value'];
					}
				}
			}
			if($taxxx != 0) {
			foreach($seller_tax_data as $key=>$value){
				foreach ($value as $key1 => $value1) {
					if ($value1 > 0) {
						$tax_detail[$key][] = array(
							'code'       => 'tax',
							'title'      => $this->tax->getRateName($key1),
							'value'      => $value1,
							'sort_order' => $this->config->get('total_tax_sort_order')
						);
						if(!isset($seller_total_tax[$key])){
							$seller_total_tax[$key] = $value1;
						} else {
							$seller_total_tax[$key] +=$value1 ;
						}
					}
				}
			} 
			}
			}
			/**************************************** For seller shipping*******************************/
			$this->load->language('account/ptsregister');
			if($this->config->get('shipping_purpletree_shipping_status')){
			if($data['shipping_code'] == 'purpletree_shipping.purpletree_shipping') {
				foreach($seller_shipping as $key=>$value) {
					if ($value > 0) {
						$shippingtitle = $this->language->get('text_seller_shipping_total');
						if($key == 0) {
						$shippingtitle = $this->language->get('text_admin_shipping_total');
						}
						$tax_detail[$key][] = array(
							'code'       => 'seller_shipping',
							'title'      => $shippingtitle,
							'value'      => $value,
							'sort_order' => '2'
						);
					}
				}	
			}
			}
		
			/**************************************** For seller total*******************************/
			
			foreach($seller_final_total as $key=>$value) {
				if(!isset($seller_total_tax[$key])){
					$seller_total_tax[$key]=0;
				}
				if(!$this->config->get('shipping_purpletree_shipping_status')){
						$seller_shipping[$key]=0;
				}
				//echo $data['shipping_code'];
				if($data['shipping_code'] != 'purpletree_shipping.purpletree_shipping') {
						$seller_shipping[$key]=0;
				}
				if ($value > 0) { 
					$tax_detail[$key][] = array(
						'code'       => 'total',
						'title'      => $this->language->get('text_total'),
						'value'      => max(0, ($seller_sub_total[$key]+$seller_total_tax[$key]+$seller_shipping[$key])),
						'sort_order' => $this->config->get('total_total_sort_order')
					);
				}
			}
				
			/**************************************** For seller sub-total*******************************/
			foreach($seller_sub_total as $key=>$value) {
				if ($value > 0) {
					$tax_detail[$key][] = array(
						'code'       => 'sub_total',
						'title'      => $this->language->get('text_sub_total'),
						'value'      => $value,
						'sort_order' => $this->config->get('sub_total_sort_order')
					);
				}
			}
		if (isset($tax_detail)) {
			foreach ($tax_detail as $key=>$value) {
				foreach($value as $data_1){
					$this->db->query("INSERT INTO " . DB_PREFIX . "purpletree_order_total SET order_id = '" . (int)$order_id . "', seller_id = '".(int)$key."', code = '" . $this->db->escape($data_1['code']) . "', title = '" . $this->db->escape($data_1['title']) . "', `value` = '" . (float)$data_1['value'] . "', sort_order = '" . (int)$data_1['sort_order'] . "'");
				}
			}
		}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$this->db->query("UPDATE `" . DB_PREFIX . "order` SET order_status_id = '" . (int)$order_status_id . "', date_modified = NOW() WHERE order_id = '" . (int)$order_id . "'");]]></search>
			<add position="before"><![CDATA[
			// Update the DB with the new statuses
			/*** update seller order and add order history ***/
			//Commission on Order Status Change
			//Commission on Order Status Change
			$order_products = $this->getVendorOrderProducts($order_id);
				foreach ($order_products as $order_product) {
				if($this->config->get('module_purpletree_multivendor_seller_product_template')){
				    $ppproduct_id = $order_product['product_id'];
					$ssseller_id  = $order_product['seller_id'];
					$productqntity  = $order_product['quantity'];
					$template_idd = $this->getTemplateId($ppproduct_id);
					
					$this->db->query("UPDATE " . DB_PREFIX . "purpletree_vendor_template_products SET quantity = (quantity - " . (int)$productqntity . ") WHERE template_id = '" . (int)$template_idd. "'  AND seller_id = '" . (int)$ssseller_id. "' AND subtract = '1'");
					}
						$dsds1 = "SELECT `seller_id`,`order_status_id` FROM `" . DB_PREFIX . "purpletree_vendor_orders_history` WHERE order_id = '" . (int)$order_id . "' && seller_id = '" . (int)$order_product['seller_id'] . "' order by `id` DESC";
						$query1112 = $this->db->query($dsds1);
						$sdsds11 = $query1112->row;
						if(empty($sdsds11)) {
							$this->db->query("INSERT INTO " . DB_PREFIX . "purpletree_vendor_orders_history SET order_id = '" . (int)$order_id . "', seller_id ='". (int)$order_product['seller_id'] ."', order_status_id = '" . (int)$order_status_id . "', notify = '" . (int)$notify . "', comment = '" . $this->db->escape($comment) . "', created_at = NOW()");
							$ordststid = $order_status_id;
						} else {
							$ordststid = $sdsds11['order_status_id'];
						}
							$this->db->query("UPDATE `" . DB_PREFIX . "purpletree_vendor_orders` SET order_status_id = '" . (int)$ordststid . "', updated_at = NOW() WHERE order_id = '" . (int)$order_id . "' && product_id = '" . (int)$order_product['product_id'] . "'");
			if (null !== $this->config->get('module_purpletree_multivendor_commission_status') && $this->config->get('module_purpletree_multivendor_commission_status') != $order_status_id) {
                    $this->db->query("UPDATE " . DB_PREFIX . "purpletree_vendor_commissions SET commission_shipping = '0', commission_fixed = '0', commission_percent = '0', commission = '0', status = 'Order Cancelled', updated_at = NOW() WHERE order_id = '" . (int)$order_id . "'  AND product_id = '" . (int)$order_product['product_id'] . "'");
                }
			} 
			if (null !== $this->config->get('module_purpletree_multivendor_commission_status') && $this->config->get('module_purpletree_multivendor_commission_status') == $order_status_id) {
				$sellerorders = $this->db->query("SELECT * FROM `" . DB_PREFIX . "purpletree_vendor_orders` WHERE order_id = '" . (int)$order_id . "'");
				
				$shipcommsvirtial = '0';
				$dsdsds = array();
				if(!empty($sellerorders->rows)) {
					foreach($sellerorders->rows as $sellerorder) {
						$sql1111 = "SELECT `store_commission` FROM `" . DB_PREFIX . "purpletree_vendor_stores` WHERE seller_id = '" . (int)$sellerorder['seller_id'] . "'";
						$totalshipingorder = '0';
								$getShippingOrderTotal = $this->db->query("SELECT `value` FROM `" . DB_PREFIX . "purpletree_order_total` WHERE order_id = '" . (int)$order_id . "' AND seller_id = '" . (int)$sellerorder['seller_id'] . "' AND code ='seller_shipping'");
						if($getShippingOrderTotal->num_rows){
							$totalshipingorder = $getShippingOrderTotal->row['value'];
						}
				
						$query = $this->db->query($sql1111);
						$seller_commission = $query->row;
						if($sellerorder['order_status_id'] == $this->config->get('module_purpletree_multivendor_commission_status')) {
							 //category_commission
				        $productid = $sellerorder['product_id'];	
						$catids =$this->getProductCategory($productid );
						$commission_cat = array();
						$catttt = array();
						 $shippingcommision = 0;
							 if($totalshipingorder != 0) {
								 if (null !== $this->config->get('module_purpletree_multivendor_shipping_commission')) {
									 if(!array_key_exists($sellerorder['seller_id'],$dsdsds)) {
									 $shippingcommision = (($this->config->get('module_purpletree_multivendor_shipping_commission')*$totalshipingorder)/100);
									 $dsdsds[$sellerorder['seller_id']] = $shippingcommision;
									 }
								 }
							 }
						if(!empty($catids)){
							foreach($catids as $cat) {
								$sql = "SELECT * FROM " . DB_PREFIX . "purpletree_vendor_categories_commission where category_id = '".(int)$cat['category_id']."'";
								$query = $this->db->query($sql);
								$commission_cat[] = $query->rows;
							}
								
						}
						$commission = -1;
						$commission1 = -1;
						$comipercen = 0;
						$comifixs = 0;
						/// Get fix global Commission /// 
						$globalcomifixs = 0;
						 if(($this->config->get('module_purpletree_multivendor_fix_commission')) && ($this->config->get('module_purpletree_multivendor_fix_commission') > 0)){
							  $globalcomifixs = $this->config->get('module_purpletree_multivendor_fix_commission');
								 }
						//////end fix globle commission ////
						if(!empty($commission_cat)) {
						 foreach($commission_cat as $catts) {
						 foreach($catts as $catt) {
								$comifix = 0;
							 if(isset($catt['commison_fixed']) && $catt['commison_fixed'] != '') {
								$comifix = $catt['commison_fixed'];
							 }else{
							 if(($this->config->get('module_purpletree_multivendor_fix_commission')) && ($this->config->get('module_purpletree_multivendor_fix_commission') > 0)){
							   $comifix =$this->config->get('module_purpletree_multivendor_fix_commission');
								 }							  
							 }
								$comiper = 0;
							 if(isset($catt['commission']) && $catt['commission'] != '') {
								$comiper = $catt['commission'];
							 }
							
							 if (null !== $this->config->get('module_purpletree_multivendor_seller_group') && $this->config->get('module_purpletree_multivendor_seller_group') == 1) {
								$sqlgrop = "Select `customer_group_id` from `" . DB_PREFIX . "customer` where customer_id= ".$sellerorder['seller_id']." ";
								$querygrop = $this->db->query($sqlgrop);
								$sellergrp = $querygrop->row;
								if($catt['seller_group'] == $sellergrp['customer_group_id']) {
									$commipercent = (($comiper*$sellerorder['total_price'])/100);
									$commission1 = $comifix + $commipercent + $shippingcommision;
									if($commission1 > $commission) {
										$comipercen 		= $comiper;
										$comifixs 			= $comifix;
										$shippingcommision 	= $shippingcommision;
										$commission 		= $commission1;
									}
								}
							 } else {
								 $commipercent = (($comiper*$sellerorder['total_price'])/100);
									$commission1 = $comifix + $commipercent + $shippingcommision;
									if($commission1 > $commission) {
										$comipercen 		= $comiper;
										$comifixs 			= $comifix;
										$shippingcommision 	= $shippingcommision;
										$commission 		= $commission1;
									} 
							 }
						   }
						 }
						}
						if($commission != -1) {
							$commission = $commission;
						}
						//category_commission
						elseif(isset($seller_commission['store_commission']) && ($seller_commission['store_commission'] != NULL || $seller_commission['store_commission'] != '')){
							$comipercen = $seller_commission['store_commission'];
							$commission = (($sellerorder['total_price']*$seller_commission['store_commission'])/100)+$shippingcommision+$globalcomifixs;
							$comifixs = $globalcomifixs;
						} else {
							$comipercen = $this->config->get('module_purpletree_multivendor_commission');
							$commission = (($sellerorder['total_price']*$this->config->get('module_purpletree_multivendor_commission'))/100)+$shippingcommision+$globalcomifixs;
							$comifixs = $globalcomifixs;
						}
						$this->db->query("UPDATE " . DB_PREFIX . "purpletree_vendor_commissions SET commission_shipping = '".$shippingcommision."', commission_fixed = '".$comifixs."', commission_percent = '".$comipercen."', commission = '" . (float)$commission . "', status = 'Complete', updated_at = NOW() WHERE order_id = '" . (int)$order_id . "' && product_id ='".(int)$sellerorder['product_id']."' && seller_id = '" . (int)$sellerorder['seller_id'] . "' && vendor_order_table_id = '" . (int)$sellerorder['id'] . "'");
						} else {
							$this->db->query("UPDATE " . DB_PREFIX . "purpletree_vendor_commissions SET commission_shipping = '0', commission_fixed = '0', commission_percent = '0',  commission = '0', status = 'Pending', updated_at = NOW() WHERE order_id = '" . (int)$order_id . "' && product_id ='".(int)$sellerorder['product_id']."' && seller_id = '" . (int)$sellerorder['seller_id'] . "'");
						}
					}
				}
			}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$this->db->query("DELETE FROM `" . DB_PREFIX . "order` WHERE order_id = '" . (int)$order_id . "'");]]></search>
			<add position="after"><![CDATA[
			/*** Delete seller order tables ***/
			$this->db->query("DELETE FROM `" . DB_PREFIX . "purpletree_vendor_orders` WHERE order_id = '" . (int)$order_id . "'");
			$this->db->query("DELETE FROM `" . DB_PREFIX . "purpletree_vendor_commissions` WHERE order_id = '" . (int)$order_id . "'");
			$this->db->query("DELETE FROM `" . DB_PREFIX . "purpletree_order_total` WHERE order_id = '" . (int)$order_id . "'");
			$this->db->query("DELETE FROM `" . DB_PREFIX . "purpletree_vendor_orders_history` WHERE order_id = '" . (int)$order_id . "'");
			]]></add>
		</operation>
	</file>		
	<file path="system/library/cart/cart.php">
	<operation error="skip">
			<search><![CDATA[public function getProducts() {]]></search>
			<add position="before"><![CDATA[
					public function checkid($product_id,$seller_id) {
		$sellerprice = $this->db->query("SELECT pvt.product_id FROM " . DB_PREFIX . "purpletree_vendor_template_products pvtp LEFT JOIN " . DB_PREFIX . "purpletree_vendor_template pvt ON (pvt.id = pvtp.template_id) LEFT JOIN " . DB_PREFIX . "product p ON (pvt.product_id = p.product_id) LEFT JOIN " . DB_PREFIX . "purpletree_vendor_stores pvs ON (pvs.seller_id = pvtp.seller_id) WHERE pvt.product_id = '" . (int)$product_id . "' AND pvtp.seller_id='".$seller_id."'");	
		if ($sellerprice->num_rows > 0){
			return $sellerprice->num_rows;
		}
	}
	public function getTemplate($product_id) {
	
		$query = $this->db->query("SELECT pvt.id FROM ". DB_PREFIX . "purpletree_vendor_template pvt WHERE pvt.product_id ='". (int)$product_id ."'");
	if($query->num_rows) {			
			return true;
     }else{
		 return false;
	 }
		
	}
	public function getvendorcart($cart_id) {
		$query = $this->db->query("SELECT seller_id FROM " . DB_PREFIX . "purpletree_vendor_cart WHERE cart_id='".$cart_id."'");
		if($query->num_rows){
			return $query->row['seller_id'];
		}
	}
	public function getSellerPrice($product_id,$seller_id) {
		$sellerprice = $this->db->query("SELECT pvtp.price AS seller_price FROM " . DB_PREFIX . "purpletree_vendor_template_products pvtp LEFT JOIN " . DB_PREFIX . "purpletree_vendor_template pvt ON (pvt.id = pvtp.template_id) LEFT JOIN " . DB_PREFIX . "purpletree_vendor_stores pvs ON (pvs.seller_id = pvtp.seller_id) WHERE pvt.product_id = '" . (int)$product_id . "' AND pvtp.seller_id='".$seller_id."'");		
		if($sellerprice->num_rows){
			return $sellerprice->row['seller_price'];
		}
	}
			]]></add>
		</operation>	
		<operation error="skip">
			<search><![CDATA[$product_data[] = array(]]></search>
			<add position="before"><![CDATA[				if($this->config->get('module_purpletree_multivendor_seller_product_template')){
			  $seller_id = $this->getvendorcart($cart['cart_id']);
				if(!empty($seller_id)) {
					$sellertemplateproduct = $this->checkid($product_query->row['product_id'],$seller_id);
				}
				if(!empty($sellertemplateproduct)) {
						$sellerprices = $this->getSellerPrice($product_query->row['product_id'],$seller_id);
						if(!empty($sellerprices)) {
								$price           = $sellerprices;
						}
					}
				}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA['shipping'        => $product_query->row['shipping'],]]></search>
			<add position="after"><![CDATA['shipping_charge' => $product_query->row['shipping_charge'],]]></add>
		</operation>		
		<operation error="skip">
			<search><![CDATA[public function hasDownload() {]]></search>
			<add position="before"><![CDATA[					
	public function getSellerProducts($seller_id) {
		$cart_proid=array();
		$seller_proid=array();
		$allproid=array();
		$all_products = $this->getProducts();
		foreach ($all_products as $key=>$value) {
			//$allproid[]=$value['product_id'];	
			$query = $this->db->query("SELECT product_id  FROM " . DB_PREFIX . "purpletree_vendor_products WHERE seller_id='".$seller_id."' AND product_id='".(int)$value['product_id']."'");
				
				foreach ($query->rows as $key1=>$value1) {
				$seller_proid[]=$value1['product_id'];	
			}
		}
		/* $allproid = implode(',',$allproid);
		$query = $this->db->query("SELECT product_id  FROM " . DB_PREFIX . "purpletree_vendor_products WHERE seller_id='".$seller_id."' AND product_id IN ('".$allproid."')");
		foreach ($query->rows as $key1=>$value1) {
			$seller_proid[]=$value1['product_id'];	
		}*/
		foreach ($all_products as $value) {
			if (in_array($value['product_id'],$seller_proid)){
				$cart_proid[] = $value;	
			}
		}
		return $cart_proid;

	}
	public function getSellerSubTotal($seller_id) {
		$total = 0;

		foreach ($this->getSellerProducts($seller_id) as $product) {
			$total += $product['total'];
		}

		return $total;
	}
			]]></add>
		</operation>
	    	<operation error="skip">
			<search><![CDATA[public function getSubTotal() {]]></search>
			<add position="before"><![CDATA[
			public function addVendorproduct($cart_id, $seller_id) {
				$query = $this->db->query("SELECT COUNT(*) AS total FROM " . DB_PREFIX . "purpletree_vendor_cart WHERE cart_id = '".(int)$cart_id."'");
				if (!$query->row['total']) {
					$this->db->query("INSERT INTO " . DB_PREFIX . "purpletree_vendor_cart SET cart_id = '".(int)$cart_id."',seller_id = '".(int)$seller_id."'");
				}else{
					$this->db->query("UPDATE " . DB_PREFIX . "purpletree_vendor_cart SET seller_id = '".(int)$seller_id."' WHERE cart_id = '".(int)$cart_id."'");
				}
        	}
			/**** get order total when seller shipping is enabled *****/
		public function getMatrixShippingCharge($address,$totalweight,$seller_id,$aa = 'bb'){
             $seller_id2 = -1;
			 $sql2 = "SELECT * FROM " . DB_PREFIX . "purpletree_vendor_shipping pvss WHERE pvss.seller_id =".$seller_id2." AND pvss.shipping_country = '".$address['country_id']."'";
			 if($address['postcode'] != '') {
				 if(!is_numeric($address['postcode'])) {
				 $sql2 .= " AND pvss.zipcode_from = '".$address['postcode']."' AND pvss.zipcode_to = '".$address['postcode']."'";
				 }
			 }
			 if($this->db->query($sql2)->num_rows){		
				$shippingqery = $this->db->query($sql2)->rows;
			 }else{
				$sql = "SELECT * FROM " . DB_PREFIX . "purpletree_vendor_shipping pvss WHERE pvss.seller_id =".$seller_id." AND pvss.shipping_country = '".$address['country_id']."'";
				 if($address['postcode'] != '') {
						 if(!is_numeric($address['postcode'])) {
						 $sql .= " AND pvss.zipcode_from = '".$address['postcode']."' AND pvss.zipcode_to = '".$address['postcode']."'";
						 }
				 }
			    $shippingqery = $this->db->query($sql)->rows;
			 }
			if(!empty($shippingqery)) {
				$shipprice = array();
				foreach($shippingqery as $shipp) {
					if($totalweight >= $shipp['weight_from'] && $totalweight <= $shipp['weight_to']) {
						 if(($shipp['zipcode_from'] == '')&&($shipp['zipcode_to'] == '')) {
							$shipprice[] = $shipp['shipping_price'];
					 }else{
					       if(is_numeric($address['postcode'])) {
							 if($address['postcode'] >= $shipp['zipcode_from'] && $address['postcode'] <= $shipp['zipcode_to']) {
								$shipprice[] = $shipp['shipping_price'];
							 }
						 } else {
							$shipprice[] = $shipp['shipping_price'];
						 }
					 }	 
					}
				}
				if(!empty($shipprice)) {
					return max($shipprice);
				}
					
			}
			if(empty($shipprice)){
			$sql = "SELECT * FROM " . DB_PREFIX . "purpletree_vendor_shipping pvss WHERE pvss.seller_id =".$seller_id." AND pvss.shipping_country = '".$address['country_id']."'";
				 if($address['postcode'] != '') {
						 if(!is_numeric($address['postcode'])) {
						 $sql .= " AND pvss.zipcode_from = '".$address['postcode']."' AND pvss.zipcode_to = '".$address['postcode']."'";
						 }
				 }
			    $shippingqery = $this->db->query($sql)->rows;
			 
			if(!empty($shippingqery)) {
				$shipprice = array();
				foreach($shippingqery as $shipp) {
					if($totalweight >= $shipp['weight_from'] && $totalweight <= $shipp['weight_to']) {
						 if(($shipp['zipcode_from'] == '')&&($shipp['zipcode_to'] == '')) {
							$shipprice[] = $shipp['shipping_price'];
					 }else{
					       if(is_numeric($address['postcode'])) {
							 if($address['postcode'] >= $shipp['zipcode_from'] && $address['postcode'] <= $shipp['zipcode_to']) {
								$shipprice[] = $shipp['shipping_price'];
							 }
						 } else {
							$shipprice[] = $shipp['shipping_price'];
						 }
					 }	 
					}
				}
				if(!empty($shipprice)) {
					return max($shipprice);
				}
					
			}
			}
			return '0';
		}
	public function getSellerShippingCharge($address){
	
	$total = 'a';
	$orderWiseWeightArray 	= array();
	$weight 				= array();
	$store_shipping_type 	= array();
	$store_shipping_charge  = array();
	$tot 					= array();
	$seller_order_wise 		= array();
	//Seller GeoZone Shipping
	if($this->config->get('module_purpletree_multivendor_shippingtype')){
		foreach ($this->getProducts() as $product) {		
			$tot = array();
			$seller_shipping = $this->db->query("SELECT pvs.store_shipping_charge,pvs.store_shipping_order_type,pvs.store_shipping_type,pvs.seller_id FROM " . DB_PREFIX . "purpletree_vendor_stores pvs JOIN " . DB_PREFIX. "purpletree_vendor_products pvp ON(pvp.seller_id=pvs.seller_id) WHERE pvp.product_id = '".$product['product_id']."' AND pvp.is_approved=1")->row;
			//Check Seller id store_shipping_charge
			if(isset($seller_shipping['seller_id'])){
				$shipping_purpletree_shipping_type 			= $seller_shipping['store_shipping_type'] != '' ? $seller_shipping['store_shipping_type']:'pts_flat_rate_shipping' ;
				$shipping_purpletree_shipping_order_type 	= $seller_shipping['store_shipping_order_type'] != '' ? $seller_shipping['store_shipping_order_type']:'pts_product_wise' ;
				$shipping_purpletree_shipping_charge 		= $seller_shipping['store_shipping_charge'];
			} else {
				$seller_shipping['seller_id'] = 0;
				$shipping_purpletree_shipping_type = (null !== $this->config->get('shipping_purpletree_shipping_type'))? $this->config->get('shipping_purpletree_shipping_type') : 'pts_flat_rate_shipping';
				$shipping_purpletree_shipping_order_type = (null !== $this->config->get('shipping_purpletree_shipping_order_type'))? $this->config->get('shipping_purpletree_shipping_order_type') : 'pts_product_wise';
				$shipping_purpletree_shipping_charge = (null !== $this->config->get('shipping_purpletree_shipping_charge'))? $this->config->get('shipping_purpletree_shipping_charge') : '0';
			}
			 if(isset($product['shipping_charge'])){
		    if($total == 'a') {
								$total = '0';
					}
		    if($shipping_purpletree_shipping_order_type == 'pts_order_wise'){
					   $total += $product['shipping_charge'];
			}else{
			           $total += $product['shipping_charge']*$product['quantity'];	
			}
		    }else{	
				$store_shipping_type[$seller_shipping['seller_id']] = $shipping_purpletree_shipping_type;
				$store_shipping_charge[$seller_shipping['seller_id']] = $shipping_purpletree_shipping_charge;
				$totalweight = $this->weight->convert($product['weight'], $product['weight_class_id'], $this->config->get('config_weight_class_id'));
				$getMatrixGeoZoneShippingCharge = $this->getSellerGeoZoneShippingCharge($address,$seller_shipping['seller_id'],$totalweight);
				// if Matric shipping
				if($shipping_purpletree_shipping_type == 'pts_matrix_shipping'){
					if($shipping_purpletree_shipping_order_type == 'pts_order_wise'){
						 $seller_order_wise_weight[$seller_shipping['seller_id']][]=$totalweight;
						 
						 
					} else {
						if($getMatrixGeoZoneShippingCharge) {
							if($total == 'a') {
								$total = '0';
							}
							$tot[$seller_shipping['seller_id']] = $getMatrixGeoZoneShippingCharge;
							$total += $tot[$seller_shipping['seller_id']];
						} else {
							return 'a';
						}
						
					} 				
				} elseif($shipping_purpletree_shipping_type  == 'pts_flexible_shipping'){
					// if Flexible shipping
					if($address['postcode'] != '') {
						if($shipping_purpletree_shipping_order_type == 'pts_order_wise'){
							   $seller_order_wise_weight[$seller_shipping['seller_id']][]=$totalweight;

						} else {
							if($getMatrixGeoZoneShippingCharge) {
								$tot[$seller_shipping['seller_id']] = $getMatrixGeoZoneShippingCharge;
								if($total == 'a') {
								$total = '0';
							}
								$total += $tot[$seller_shipping['seller_id']];
							} else {
								$tot[$seller_shipping['seller_id']] = $shipping_purpletree_shipping_charge;
								if($total == 'a') {
								$total = '0';
							}
								$total += $tot[$seller_shipping['seller_id']];
							}
						}
					} else {
						if($shipping_purpletree_shipping_order_type == 'pts_order_wise'){
						 $seller_order_wise_weight[$seller_shipping['seller_id']][]=$totalweight;
						} else {
							$tot[$seller_shipping['seller_id']] = $shipping_purpletree_shipping_charge;
							if($total == 'a') {
								$total = '0';
							}
							$total += $tot[$seller_shipping['seller_id']];
						}
					}
				} else {
						// if Flat Rate shipping
					if($shipping_purpletree_shipping_order_type == 'pts_order_wise'){
						$seller_order_wise_weight[$seller_shipping['seller_id']][]=$totalweight;
					} else {
						$tot[$seller_shipping['seller_id']] = $shipping_purpletree_shipping_charge;
						if($total == 'a') {
								$total = '0';
							}
							if($tot[$seller_shipping['seller_id']]==NULL){
								$total='';
								break;
							}
								$total += $tot[$seller_shipping['seller_id']];
					}
				}
				// if Flat Rate shipping
		}
		}
		// weight wise

		if(!empty($seller_order_wise_weight)){
			foreach($seller_order_wise_weight as $seller_id=>$weightData){
				$tempweight=0;
				foreach($weightData as $weight){
					$tempweight+=$weight;	
				}
				$orderWiseData[$seller_id]=$tempweight;
			}
			
		}
		// weight wise seller_order_wise

		if(!empty($orderWiseData)) {
			foreach($orderWiseData as $sellerid=>$weight) {
				$getSellerGeoZoneShippingCharge1 = $this->getSellerGeoZoneShippingCharge($address,$sellerid,$weight);
				if($store_shipping_type[$sellerid] == 'pts_matrix_shipping') {
						if($getSellerGeoZoneShippingCharge1) {
						if($total == 'a') {
								$total = '0';
							}
							$total += $getSellerGeoZoneShippingCharge1;
						} else {						
							return 'a';
						}
					
				} elseif($store_shipping_type[$sellerid] == 'pts_flexible_shipping') {
					if($getSellerGeoZoneShippingCharge1) {
					if($total == 'a') {
								$total = '0';
							}
							if($getSellerGeoZoneShippingCharge1==NULL){
								$total='';
								break;
							}	
						$total += $getSellerGeoZoneShippingCharge1;
					} else {
					if($total == 'a') {
								$total = '0';
							}
						if($store_shipping_charge[$sellerid]==NULL){
								$total='';
								break;
							}	
						$total += $store_shipping_charge[$sellerid];
					}
				} elseif($store_shipping_type[$sellerid] == 'pts_flat_rate_shipping') {
				if($total == 'a') {
								$total = '0';
							}
					if($store_shipping_charge[$sellerid]==NULL){
								$total='';
								break;
							}		
					$total += $store_shipping_charge[$sellerid];
				}
			}
		
		}
		return $total;
		//End GeoZone Shipping
	} else {
		$total = 'a';
		$orderWiseWeightArray 	= array();
		$weight 				= array();
		$store_shipping_type 	= array();
		$store_shipping_charge  = array();
		foreach ($this->getProducts() as $product) {		    
			$tot = array();
			$seller_shipping = $this->db->query("SELECT pvs.store_shipping_charge,pvs.store_shipping_order_type,pvs.store_shipping_type,pvs.seller_id FROM " . DB_PREFIX . "purpletree_vendor_stores pvs JOIN " . DB_PREFIX. "purpletree_vendor_products pvp ON(pvp.seller_id=pvs.seller_id) WHERE pvp.product_id = '".$product['product_id']."' AND pvp.is_approved=1")->row;
			//echo $seller_shipping['store_shipping_order_type'];
			//Check Seller id store_shipping_charge
			if(isset($seller_shipping['seller_id'])){
				$shipping_purpletree_shipping_type 			= $seller_shipping['store_shipping_type'] != '' ? $seller_shipping['store_shipping_type']:'pts_flat_rate_shipping' ;
				$shipping_purpletree_shipping_order_type 	= $seller_shipping['store_shipping_order_type'] != '' ? $seller_shipping['store_shipping_order_type']:'pts_product_wise' ;
				$shipping_purpletree_shipping_charge 		= $seller_shipping['store_shipping_charge'];
			} else {
				$seller_shipping['seller_id'] = 0;
				$shipping_purpletree_shipping_type = (null !== $this->config->get('shipping_purpletree_shipping_type'))? $this->config->get('shipping_purpletree_shipping_type') : 'pts_flat_rate_shipping';
				$shipping_purpletree_shipping_order_type = (null !== $this->config->get('shipping_purpletree_shipping_order_type'))? $this->config->get('shipping_purpletree_shipping_order_type') : 'pts_product_wise';
				$shipping_purpletree_shipping_charge = (null !== $this->config->get('shipping_purpletree_shipping_charge'))? $this->config->get('shipping_purpletree_shipping_charge') : '0';
			}
			  if(isset($product['shipping_charge'])){
			      if($total == 'a') {
								$total = '0';
					}
				if($shipping_purpletree_shipping_order_type == 'pts_order_wise'){
						$total += $product['shipping_charge'];
				}else{
						$total += $product['shipping_charge']*$product['quantity'];	
				}		
		    }else{
				$store_shipping_type[$seller_shipping['seller_id']] = $shipping_purpletree_shipping_type;
				$store_shipping_charge[$seller_shipping['seller_id']] = $shipping_purpletree_shipping_charge;
				$totalweight = $this->weight->convert($product['weight'], $product['weight_class_id'], $this->config->get('config_weight_class_id'));
				$getMatrixShippingCharge = $this->getMatrixShippingCharge($address,$totalweight,$seller_shipping['seller_id']);
				// if Matric shipping
				if($shipping_purpletree_shipping_type == 'pts_matrix_shipping'){
					//if($address['postcode'] != '') {
						if($shipping_purpletree_shipping_order_type == 'pts_order_wise'){
							//if { }
							 $weightt = $this->weight->convert($product['weight'], $product['weight_class_id'], $this->config->get('config_weight_class_id'));
							 //echo $weightt.'--';
							 $weight[$seller_shipping['seller_id']] = $weightt;
							 if(!isset($orderWiseWeightArray[$seller_shipping['seller_id']])){
								$orderWiseWeightArray[$seller_shipping['seller_id']] = $weight[$seller_shipping['seller_id']];
							 } else {
								$orderWiseWeightArray[$seller_shipping['seller_id']] += $weight[$seller_shipping['seller_id']];
							 }
						} else {
						//if($shipping_purpletree_shipping_order_type == 'pts_product_wise'){
							if($getMatrixShippingCharge) {
							if($total == 'a') {
								$total = '0';
							}
								$tot[$seller_shipping['seller_id']] = $getMatrixShippingCharge;
								$total += $tot[$seller_shipping['seller_id']];
							} else {
								//echo "r3";
								return 'a';
							}
						} 
					/* } else {
						//echo "r4";
						return 'a';
					} */					
				}// if Matric shipping
				// if Flexible shipping
				elseif($shipping_purpletree_shipping_type  == 'pts_flexible_shipping'){
					//if($address['postcode'] != '') {
						if($shipping_purpletree_shipping_order_type == 'pts_order_wise'){
							  $weightt = $this->weight->convert($product['weight'], $product['weight_class_id'], $this->config->get('config_weight_class_id'));
							 $weight[$seller_shipping['seller_id']] = $weightt;
							 if(!isset($orderWiseWeightArray[$seller_shipping['seller_id']])){
								$orderWiseWeightArray[$seller_shipping['seller_id']] = $weight[$seller_shipping['seller_id']];
							 } else {
								$orderWiseWeightArray[$seller_shipping['seller_id']] += $weight[$seller_shipping['seller_id']];
							 }
						} else {
						//if($shipping_purpletree_shipping_order_type == 'pts_product_wise'){
							if($getMatrixShippingCharge) {
								$tot[$seller_shipping['seller_id']] = $getMatrixShippingCharge;
								
								if($total == 'a') {
								$total = '0';
							}
								$total += $tot[$seller_shipping['seller_id']];
							} else {
								$tot[$seller_shipping['seller_id']] = $shipping_purpletree_shipping_charge;
								if($total == 'a') {
								$total = '0';
							}
								$total += $tot[$seller_shipping['seller_id']];
							}
						}
					//} else {
						/* if($shipping_purpletree_shipping_order_type == 'pts_order_wise'){
						  $weightt = $this->weight->convert($product['weight'], $product['weight_class_id'], $this->config->get('config_weight_class_id'));
							 $weight[$seller_shipping['seller_id']] = $weightt;
							 if(!isset($orderWiseWeightArray[$seller_shipping['seller_id']])){
								$orderWiseWeightArray[$seller_shipping['seller_id']] = $weight[$seller_shipping['seller_id']];
							 } else {
								$orderWiseWeightArray[$seller_shipping['seller_id']] += $weight[$seller_shipping['seller_id']];
							 }
						} else {
						//if($shipping_purpletree_shipping_order_type == 'pts_product_wise'){
							$tot[$seller_shipping['seller_id']] = $shipping_purpletree_shipping_charge;
							if($total == 'a') {
								$total = '0';
							}
							$total += $tot[$seller_shipping['seller_id']];
						} 
					}*/
				} // if Flexible shipping
				// if Flat Rate shipping
				//elseif($shipping_purpletree_shipping_type  == 'pts_flat_rate_shipping'){
					else {
					if($shipping_purpletree_shipping_order_type == 'pts_order_wise'){
						 $weightt = $this->weight->convert($product['weight'], $product['weight_class_id'], $this->config->get('config_weight_class_id'));
							 $weight[$seller_shipping['seller_id']] = $weightt;
							 if(!isset($orderWiseWeightArray[$seller_shipping['seller_id']])){
								$orderWiseWeightArray[$seller_shipping['seller_id']] = $weight[$seller_shipping['seller_id']];
							 } else {
								$orderWiseWeightArray[$seller_shipping['seller_id']] += $weight[$seller_shipping['seller_id']];
							 }
					} else {
					//if($shipping_purpletree_shipping_order_type == 'pts_product_wise'){
						$tot[$seller_shipping['seller_id']] = $shipping_purpletree_shipping_charge;
						if($total == 'a') {
								$total = '0';
							}
							//var_dump($tot[$seller_shipping['seller_id']]);
							if($tot[$seller_shipping['seller_id']]==NULL){
								$total='';
								break;
							}
								$total += $tot[$seller_shipping['seller_id']];
					}
				}
				// if Flat Rate shipping
		}
		}
		if(!empty($orderWiseWeightArray)) {
			foreach($orderWiseWeightArray as $sellerid => $totalweight) {
				$getMatrixShippingCharge1 = $this->getMatrixShippingCharge($address,$totalweight,$sellerid);
				if($store_shipping_type[$sellerid] == 'pts_matrix_shipping') {
					if($address['postcode'] != '') {
						if($getMatrixShippingCharge1) {
						if($total == 'a') {
								$total = '0';
							}
							$total += $getMatrixShippingCharge1;
						} else {
							//echo "r5";							
							return 'a';
						}
					} else {
						//echo "r6";
						return 'a';
					}
				} elseif($store_shipping_type[$sellerid] == 'pts_flexible_shipping') {
					if($getMatrixShippingCharge1) {
					if($total == 'a') {
								$total = '0';
							}
							if($getMatrixShippingCharge1==NULL){
								$total='';
								break;
							}	
						$total += $getMatrixShippingCharge1;
					} else {
					if($total == 'a') {
								$total = '0';
							}
						if($store_shipping_charge[$sellerid]==NULL){
								$total='';
								break;
							}	
						$total += $store_shipping_charge[$sellerid];
					}
				} elseif($store_shipping_type[$sellerid] == 'pts_flat_rate_shipping') {
				if($total == 'a') {
								$total = '0';
							}
					if($store_shipping_charge[$sellerid]==NULL){
								$total='';
								break;
							}		
					$total += $store_shipping_charge[$sellerid];
				}
			}
		}
		return $total;
	}
}
	public function getSellerGeoZoneShippingCharge($address,$seller_id,$weight){
		$sql = "SELECT * FROM  " . DB_PREFIX . "zone_to_geo_zone ztgz INNER JOIN " . DB_PREFIX . "purpletree_vendor_geozone pvz ON (ztgz.geo_zone_id = pvz.geo_zone_id) WHERE pvz.seller_id =".$seller_id." AND ztgz.country_id = '" . (int)$address['country_id'] . "' AND (ztgz.zone_id = '" . (int)$address['zone_id'] . "' OR ztgz.zone_id = '0')";

		$sql.= " AND (pvz.weight_from <=".(float)$weight." AND pvz.weight_to >=".(float)$weight.")";	

		$shippingqery = $this->db->query($sql)->rows;
		if(!empty($shippingqery)) {
			$shipprice = array();
			foreach($shippingqery as $shipp) {
				$shipprice[] = $shipp['price'];
			}
			if(!empty($shipprice)) {
				return max($shipprice);
			}
		}
		return '0';
	}		
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$this->db->query("INSERT INTO " . DB_PREFIX . "cart SET api_id = '" . (isset($this->session->data['api_id']) ? (int)$this->session->data['api_id'] : 0) . "', customer_id = '" . (int)$this->customer->getId() . "', session_id = '" . $this->db->escape($this->session->getId()) . "', product_id = '" . (int)$product_id . "', recurring_id = '" . (int)$recurring_id . "', `option` = '" . $this->db->escape(json_encode($option)) . "', quantity = '" . (int)$quantity . "', date_added = NOW()");]]></search>
			<add position="after"><![CDATA[$cartt_id = $this->db->getLastId();]]></add>
		</operation> 
		<operation error="skip">
			<search><![CDATA[$this->db->query("INSERT " . DB_PREFIX . "cart SET api_id = '" . (isset($this->session->data['api_id']) ? (int)$this->session->data['api_id'] : 0) . "', customer_id = '" . (int)$this->customer->getId() . "', session_id = '" . $this->db->escape($this->session->getId()) . "', product_id = '" . (int)$product_id . "', recurring_id = '" . (int)$recurring_id . "', `option` = '" . $this->db->escape(json_encode($option)) . "', quantity = '" . (int)$quantity . "', date_added = NOW()");]]></search>
			<add position="after"><![CDATA[$cartt_id = $this->db->getLastId();]]></add>
		</operation> 
		<operation error="skip">
			<search><![CDATA[$this->db->query("UPDATE " . DB_PREFIX . "cart SET quantity = (quantity + " . (int)$quantity . ") WHERE api_id = '" . (isset($this->session->data['api_id']) ? (int)$this->session->data['api_id'] : 0) . "' AND customer_id = '" . (int)$this->customer->getId() . "' AND session_id = '" . $this->db->escape($this->session->getId()) . "' AND product_id = '" . (int)$product_id . "' AND recurring_id = '" . (int)$recurring_id . "' AND `option` = '" . $this->db->escape(json_encode($option)) . "'");]]></search>
			<add position="after"><![CDATA[$query = $this->db->query("SELECT cart_id FROM " . DB_PREFIX . "cart WHERE api_id = '" . (isset($this->session->data['api_id']) ? (int)$this->session->data['api_id'] : 0) . "' AND customer_id = '" . (int)$this->customer->getId() . "' AND session_id = '" . $this->db->escape($this->session->getId()) . "' AND product_id = '" . (int)$product_id . "' AND recurring_id = '" . (int)$recurring_id . "' AND `option` = '" . $this->db->escape(json_encode($option)) . "'");
			if($query->num_rows){
				$cartt_id = $query->row['cart_id'];
			}]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[public function remove($cart_id) {]]></search>
			<add position="after"><![CDATA[$this->db->query("DELETE FROM " . DB_PREFIX . "purpletree_vendor_cart WHERE cart_id = '".(int)$cart_id."'");]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[public function add(]]></search>
			<add position="after"><![CDATA[
			$cartt_id = 0;
			]]></add>
		</operation><operation error="skip">
			<search><![CDATA[public function update(]]></search>
			<add position="before" offset="2"><![CDATA[
			return $cartt_id;
			]]></add>
		</operation>
	</file>
	<file path="system/library/cart/customer.php">
		<operation error="skip">
			<search><![CDATA[class Customer {]]></search>
			<add position="before"><![CDATA[
			if( !function_exists('apache_request_headers') ) {
///
function apache_request_headers() {
  $arh = array();
  $rx_http = '/\AHTTP_/';
  foreach($_SERVER as $key => $val) {
    if( preg_match($rx_http, $key) ) {
      $arh_key = preg_replace($rx_http, '', $key);
      $rx_matches = array();
      // do some nasty string manipulations to restore the original letter case
      // this should work in most cases
      $rx_matches = explode('_', $arh_key);
      if( count($rx_matches) > 0 and strlen($arh_key) > 2 ) {
        foreach($rx_matches as $ak_key => $ak_val) $rx_matches[$ak_key] = ucfirst($ak_val);
        $arh_key = implode('-', $rx_matches);
      }
      $arh[$arh_key] = $val;
    }
  }
  return( $arh );
}
} ]]></add>
		</operation>
			<operation error="skip">
			<search><![CDATA[public function getRewardPoints() {]]></search>
			<add position="before"><![CDATA[
			/********* Check if customer is a seller also ***********/
			public function isSeller(){
			if ($this->config->get('module_purpletree_multivendor_status')) {
		$query = $this->db->query("SELECT id, store_status, multi_store_id, is_removed FROM " . DB_PREFIX . "purpletree_vendor_stores where seller_id='".$this->customer_id."'");
		return $query->row;
	}
	}
	/**** Validate seller with licence id *******/
		public function isMobileApiCall() {
						header('Access-Control-Allow-Origin:*');
		header('Access-Control-Allow-Methods: GET, PUT, POST, DELETE, OPTIONS');
		header('Access-Control-Max-Age: 286400');
		header('Access-Control-Allow-Credentials: true');
		header('Access-Control-Allow-Headers: xocmerchantid,XOCMERCHANTID,XOCSESSION,xocsession,purpletreemultivendor,Purpletreemultivendor,PURPLETREEMULTIVENDOR');
		if(NULL !== apache_request_headers()){
			foreach(apache_request_headers() as $key =>$value) {
				if($key == 'purpletreemultivendor' || $key == 'Purpletreemultivendor' || $key == 'PURPLETREEMULTIVENDOR') {
			$key = strtolower($key);
					if ($this->config->get('module_purpletree_multivendor_status')) {
						$query = $this->db->query("SELECT * FROM `" . DB_PREFIX . "api` WHERE `username` = '" . $key . "' AND `key` ='" . $value . "'");
						if($query->num_rows) {
							return true;
						}
					}
				}
			}
		}
		return false;
	}
	public function validateSeller($skipcondition = null) {
		if($_SERVER['HTTP_HOST'] == 'localhost') {
			$domain = 'http://'.$_SERVER['SERVER_NAME'].$_SERVER['PHP_SELF'];
		} else {
			$domain = 'http://'.$_SERVER['HTTP_HOST'];
		}
		
		$ip_a = $_SERVER['HTTP_HOST'];
		if(isset($skipcondition)){
		      $domain1 = md5($domain);
			$text = $this->config->get('module_purpletree_multivendor_encypt_text');
			$data_live = $this->config->get('module_purpletree_multivendor_live_validate_text');
			if(($domain1 == $text) && $data_live == 1) {
				return true;
			} else {
				$module	= 'purpletree_multivendor_oc';
				$valuee = $this->config->get('module_purpletree_multivendor_process_data');
				$ip_address = $this->request->server['REMOTE_ADDR'];
				$url = "https://www.process.purpletreesoftware.com/occheckdata.php";
				$handle=curl_init($url);
				curl_setopt($handle, CURLOPT_VERBOSE, true);
				curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);
				curl_setopt($handle, CURLOPT_SSL_VERIFYPEER, false);
				curl_setopt($handle, CURLOPT_POSTFIELDS,
							"process_data=$valuee&domain_name=$domain&ip_address=$ip_address&module_name=$module");
				$result = curl_exec($handle);
				$result1 = json_decode($result);
				if(curl_error($handle))
				{
					echo 'error';
					die;
				}
				if ($result1->status == 'success') {
					$query = $this->db->query("UPDATE " . DB_PREFIX . "setting SET value = '1' WHERE " . DB_PREFIX . "setting.key = 'module_purpletree_multivendor_live_validate_text'");
					
				$query1 = $this->db->query("UPDATE " . DB_PREFIX . "setting SET value = '" .$domain1. "' WHERE " . DB_PREFIX . "setting.key = 'module_purpletree_multivendor_encypt_text'");
				
				return true;
				 } else {
					 return false;
				} 
			}
		}else{
		     //$ip_a = '103.111.47.26:123';
		   	$ip_a = str_replace(array(':', '.'), '', $ip_a);
				if (is_numeric($ip_a)){
					return true;
			}
		
		if (preg_match('(localhost|demo|test)',$domain)) {
			return true;
		} else {
			$domain1 = md5($domain);
			$text = $this->config->get('module_purpletree_multivendor_encypt_text');
			$data_live = $this->config->get('module_purpletree_multivendor_live_validate_text');
			if(($domain1 == $text) && $data_live == 1) {
				return true;
			} else {
				$module	= 'purpletree_multivendor_oc';
				$valuee = $this->config->get('module_purpletree_multivendor_process_data');
				$ip_address = $this->request->server['REMOTE_ADDR'];
				$url = "https://www.process.purpletreesoftware.com/occheckdata.php";
				$handle=curl_init($url);
				curl_setopt($handle, CURLOPT_VERBOSE, true);
				curl_setopt($handle, CURLOPT_RETURNTRANSFER, true);
				curl_setopt($handle, CURLOPT_SSL_VERIFYPEER, false);
				curl_setopt($handle, CURLOPT_POSTFIELDS,
							"process_data=$valuee&domain_name=$domain&ip_address=$ip_address&module_name=$module");
				$result = curl_exec($handle);
				$result1 = json_decode($result);
				if(curl_error($handle))
				{
					echo 'error';
					die;
				}
				if ($result1->status == 'success') {
					$query = $this->db->query("UPDATE " . DB_PREFIX . "setting SET value = '1' WHERE " . DB_PREFIX . "setting.key = 'module_purpletree_multivendor_live_validate_text'");
					
				$query1 = $this->db->query("UPDATE " . DB_PREFIX . "setting SET value = '" .$domain1. "' WHERE " . DB_PREFIX . "setting.key = 'module_purpletree_multivendor_encypt_text'");
				
				return true;
				 } else {
					 return false;
				} 
				}
		}	
		}
		
	}
	]]></add>
		</operation>
	</file>
	<file path="catalog/controller/product/product.php">
		<operation error="skip">
			<search><![CDATA[$data['description'] = html_entity_decode($product_info['description'], ENT_QUOTES, 'UTF-8');]]></search>
			<add position="after"><![CDATA[
			//template description
			if($this->config->get('module_purpletree_multivendor_template_description')){
				$this->load->model('extension/module/purpletree_sellerprice');
				if(isset($this->request->get['seller_id'])){
					$description = $this->model_extension_module_purpletree_sellerprice->getTemlateDescription($this->request->get['product_id'],$this->request->get['seller_id']);
					$data['description'] = html_entity_decode($description, ENT_QUOTES, 'UTF-8');
				}
			}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$this->document->setTitle($product_info['meta_title']);]]></search>
			<add position="before"><![CDATA[
				$this->session->data['ptsmv_current_page_name'] = $product_info['name'];
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$this->load->language('product/product');]]></search>
			<add position="after"><![CDATA[
			$this->load->language('account/ptsregister');
			$data['text_seller_label'] = $this->language->get('text_seller_label');
			$data['text_seller_review'] = $this->language->get('text_seller_review');
			$data['text_seller_rating'] = $this->language->get('text_seller_rating');
			$data['text_seller_contact'] = $this->language->get('text_seller_contact');]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$product_id = (int)$this->request->get['product_id'];]]></search>
			<add position="after"><![CDATA[		$this->load->model('extension/purpletree_multivendor/sellerproduct');
		    $this->load->language('account/ptsregister');	    
		    $data['button_deliver'] =$this->language->get('button_deliver');
			$pts_quick_status = '';
			$pts_quick_status = $this->model_extension_purpletree_multivendor_sellerproduct->getQucikOrderStatus($product_id);
			$seller_detailss = array();			
            $data['quick_order'] =$this->url->link('extension/account/purpletree_multivendor/quick_order', '&product_id='.$product_id, true);
            $data['pts_quick_status'] =$pts_quick_status;
			if(isset($this->session->data['seller_sto_page'])) {
				unset($this->session->data['seller_sto_page']);
			}
			/******* get seller details to show on product page *******/
			$data['seller_review_status'] = $this->config->get('module_purpletree_multivendor_seller_review');
			$data['module_purpletree_multivendor_hide_seller_detail'] = $this->config->get('module_purpletree_multivendor_hide_seller_detail');
			$data['seller_detail'] = array();
			$data['module_purpletree_multivendor_allow_live_chat'] = 0;
				if(NULL !== $this->config->get('module_purpletree_multivendor_allow_live_chat')) {
					$data['module_purpletree_multivendor_allow_live_chat'] = $this->config->get('module_purpletree_multivendor_allow_live_chat');
				}
				$data['store_live_chat_enable'] =0;
				$data['store_live_chat_code'] ='';
			if($this->config->get('module_purpletree_multivendor_status')){
				
				$currentpage = $_SERVER["SERVER_NAME"].$_SERVER["REQUEST_URI"];
				$this->session->data['ptsmv_current_page'] = $currentpage;
				
				$this->load->model('extension/purpletree_multivendor/sellerproduct');
				$this->load->model('extension/purpletree_multivendor/vendor');
				$this->load->model('extension/purpletree_multivendor/sellertemplateproduct');
				$minprice = $this->model_extension_purpletree_multivendor_sellertemplateproduct->getMinPrice($product_id);
				if($this->config->get('module_purpletree_multivendor_seller_product_template')){
				if(!empty($minprice)){
				  $data['template_product_status'] = $minprice['subtract_status'];
			    }else{
				  $data['template_product_status'] = 0;
			    }}else{
				   $data['template_product_status'] = 0;
				}
				$seller_detail = $this->model_extension_purpletree_multivendor_sellerproduct->getSellername($product_id);
				if($seller_detail){
				$seller_detailss = $this->model_extension_purpletree_multivendor_vendor->getStoreDetail($seller_detail['seller_id']);
				
				$data['store_live_chat_enable'] = isset($seller_detailss['store_live_chat_enable'])?$seller_detailss['store_live_chat_enable']:0;
				$data['store_live_chat_code'] ='';
				if(isset($seller_detailss['store_live_chat_code'])) {
					
				$data['store_live_chat_code'] = html_entity_decode($seller_detailss['store_live_chat_code'], ENT_QUOTES, "UTF-8");	
					if($data['store_live_chat_code'] != '') {
						$this->session->data['seller_sto_page'] = $seller_detailss['id'];
					}					
				}
					$seller_rating = $this->model_extension_purpletree_multivendor_vendor->getStoreRating($seller_detail['seller_id']);
					$data['seller_detail'] = array(
						'seller_name' => $seller_detail['store_name'],
						'store_id' => $seller_detail['id'],
						'seller_rating' => (isset($seller_rating['rating'])?$seller_rating['rating']:'0'),
						'seller_count' => (isset($seller_rating['count'])?$seller_rating['count']:'0'),
						'seller_href' => $this->url->link('extension/account/purpletree_multivendor/sellerstore/storeview', 'seller_store_id=' . $seller_detail['id']),
						'seller_review_link' => $this->url->link('extension/account/purpletree_multivendor/sellerstore/sellerreview', 'seller_id=' . $seller_detail['seller_id']),
						'seller_contact_link' => $this->url->link('extension/account/purpletree_multivendor/sellercontact/customerReply', 'seller_id=' . $seller_detail['seller_id'])
					);
				}
			}]]></add>
		</operation>
	</file>
	
	<file path="catalog/view/theme/*/template/product/product.twig">
		<operation error="skip">
			<search><![CDATA[{{ footer }}]]></search>
			<add position="before"><![CDATA[
{% if seller_detail %}
{% if module_purpletree_multivendor_allow_live_chat %}
{% if store_live_chat_enable %}
{% if store_live_chat_code != '' %}
{{ store_live_chat_code }}
{% endif %}
{% endif %}
{% endif %}
{% endif %}]]></add>
</operation>
			<operation error="skip">
			<search><![CDATA[{{ location }}]]></search>
			<add position="after"><![CDATA[{% if seller_detail %}
			{% if module_purpletree_multivendor_hide_seller_detail != 1 %}
                <li><b class="naimen">{{ text_seller_label }}:</b> <a href="{{ seller_detail.seller_href }}">{{ seller_detail.seller_name }}</a></li>
				<li><a href="{{ seller_detail.seller_contact_link }}">{{ text_seller_contact }}</a></li>
			{% endif %}
			{% endif %}]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[<button type="button" id="button-cart" data-loading-text="{{ text_loading }}" class="btn btn-primary btn-lg btn-block">{{ button_cart }}</button>]]></search>
			<add position="before"><![CDATA[ {% if template_product_status == 1 %}
				{% else %}
			{% if pts_quick_status %}
			<button type="button" data-loading-text="{{ text_loading }}" class="btn btn-primary btn-lg btn-block"><a style="color:white"href="{{ quick_order }}"><i class="fa fa-shopping-cart"></i>&nbsp{{ button_deliver }}</a></button>
						  {% else %}	
				]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[<button type="button" id="button-cart" data-loading-text="{{ text_loading }}" class="btn btn-primary btn-lg btn-block">{{ button_cart }}</button>]]></search>
			<add position="after"><![CDATA[
			      {% endif %}
				{% endif %}]]></add>
		</operation>
	<!-- 	<operation error="skip">
			<search><![CDATA[<button type="button" onclick="cart.add('{{ product.product_id }}', '{{ product.minimum }}');"><span class="hidden-xs hidden-sm hidden-md">{{ button_cart }}</span> <i class="fa fa-shopping-cart"></i></button>]]></search>
			<add position="before"><![CDATA[ {% if pts_quick_status %}
	  <button type="button" data-loading-text="{{ text_loading }}" class="btn btn-primary btn-lg btn-block"><a style="color:white"href="{{ quick_order }}"><i class="fa fa-shopping-cart"></i>&nbsp{{ button_deliver }}</a></button>
	  {% else %}]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[<button type="button" data-toggle="tooltip" title="{{ button_compare }}" onclick="compare.add('{{ product.product_id }}');"><i class="fa fa-exchange"></i></button>]]></search>
			<add position="after"><![CDATA[{% endif %}]]></add>
		</operation> -->
		<operation error="skip">
			<search><![CDATA[<li>{{ text_model }} {{ model }}</li>]]></search>
			<add position="replace"><![CDATA[{% if pts_quick_status %}			
			{% else %}
            <li>{{ text_model }} {{ model }}</li>
			{% endif %}]]></add>
		</operation>
		<!-- <operation error="skip">
			<search><![CDATA[<button type="button" data-toggle="tooltip" class="btn btn-default" title="{{ button_wishlist }}" onclick="wishlist.add('{{ product_id }}');"><i class="fa fa-heart"></i></button>]]></search>
			<add position="before"><![CDATA[{% if pts_quick_status %}			
			{% else %}]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[<button type="button" data-toggle="tooltip" class="btn btn-default" title="{{ button_compare }}" onclick="compare.add('{{ product_id }}');"><i class="fa fa-exchange"></i></button>]]></search>
			<add position="after"><![CDATA[{% endif %}]]></add>
		</operation> --> 
	</file>
	<file path="catalog/view/theme/unishop2/template/product/product.twig">
		<operation error="skip">
			<search><![CDATA[{% if reward and show_reward == 1 or show_reward == 3 %}]]></search>
			<add position="before"><![CDATA[{% if seller_detail %}
			{% if module_purpletree_multivendor_hide_seller_detail != 1 %}
				<div class="product-data__item">{{ text_seller_label }} <a href="{{ seller_detail.seller_href }}">{{ seller_detail.seller_name }}</a></div>
				{% if seller_review_status %}
				<div class="product-data__item">{% if seller_detail.seller_rating %}
				<div class="rating" style="display:inline !important; border:none !important;">
							{{ text_seller_rating }}&nbsp;&nbsp;&nbsp;
							  {% for i in 1..5 %}
							  {% if seller_detail.seller_rating < i %}
							  <span class="fa fa-stack" style="min-width:0;"><i class="fa fa-star-o fa-stack-1x"></i></span>
							  {% else %}
							  <span class="fa fa-stack" style="min-width:0;"><i class="fa fa-star fa-stack-1x"></i></span>
							 {% endif %}
							  {% endfor %}
							  <a href="{{ seller_detail.seller_review_link }}" id = "pts_srating">{{ seller_detail.seller_count }} {{ text_seller_review }}</a>
							</div>
							{% else %}
							<div class="rating"  style="display:inline !important; border:none !important;">{{ text_seller_rating }}&nbsp;&nbsp;&nbsp;
								{% for i in 1..5 %} 
									<span class="fa fa-stack" style="min-width:0;"><i class="fa fa-star-o fa-stack-1x"></i></span>
								{% endfor %}
								<a href="{{ seller_detail.seller_review_link }}" id = "pts_srating">{{ seller_detail.seller_count }} {{ text_seller_review }}</a>
							</div>
							{% endif %}</div>
				{% endif %}
					<div class="product-data__item"><a href="{{ seller_detail.seller_contact_link }}">{{ text_seller_contact }}</a></div>
					<!--col-xs-7 col-sm-8-->
				      {% endif %}
			{% endif %}]]></add>
		</operation>
	</file>
	<file path="catalog/controller/checkout/checkout.php">
		<operation error="skip">
			<search><![CDATA[if ($product['minimum'] > $product_total) {]]></search>
			<add position="before"><![CDATA[
			/******* validate seller and check for maximum product limit ********/
			if(!$this->customer->validateSeller()) {
			$this->load->language('purpletree_multivendor/ptsmultivendor');
			$this->session->data['error_warning'] = $this->language->get('error_license');
			$this->response->redirect($this->url->link('checkout/cart'));
			}
			if($this->config->get('module_purpletree_multivendor_status')){
				if ($this->config->get('module_purpletree_multivendor_product_limit') < $product_total) {
				$this->response->redirect($this->url->link('checkout/cart'));
			}
			}
			]]></add>
		</operation>
	</file>	
	<file path="catalog/controller/checkout/cart.php">
		<operation error="skip">
			<search><![CDATA[if ($product['minimum'] > $product_total) {]]></search>
			<add position="before"><![CDATA[
			/********** Check for maximim product limit ************/
			$this->load->language('account/ptsregister');
			if($this->config->get('module_purpletree_multivendor_status')){
				if ($this->config->get('module_purpletree_multivendor_product_limit') < $product_total) {
				$data['error_warning'] = sprintf($this->language->get('error_maximum'), $product['name'], $this->config->get('module_purpletree_multivendor_product_limit'));
			}
			}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$data['action'] = $this->url->link('checkout/cart/edit', '', true);]]></search>
			<add position="before"><![CDATA[
			if (isset($this->session->data['error_warning'])) {
				$data['error_warning'] = $this->session->data['error_warning'];

				unset($this->session->data['error_warning']);
			}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[if (isset($this->request->post['product_id'])) {]]></search>
			<add position="before"><![CDATA[ if(isset($this->request->get['seller_id'])) {
			$seller_id = (int)$this->request->get['seller_id'];
		}]]></add>
		</operation>
			<operation error="skip">
			<search><![CDATA[$this->cart->add(]]></search>
			<add position="before"><![CDATA[$cart_id = ]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$this->cart->add(]]></search>
			<add position="after"><![CDATA[ 	if($this->config->get('module_purpletree_multivendor_seller_product_template')){
			if (isset($seller_id)) {
                  if($seller_id && $cart_id) {
					//$cart_id = $this->cart->addVendorproduct($cart_id, $seller_id);
					$this->cart->addVendorproduct($cart_id, $seller_id);
				  }
				 }
				 }]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$product_info = $this->model_catalog_product->getProduct($product_id);]]></search>
			<add position="before"><![CDATA[
				if($this->config->get('module_purpletree_multivendor_seller_product_template')){
			$template_product = $this->cart->getTemplate($product_id);
		if ($template_product == 1) {
				 if (!isset($seller_id)) {
					$json['error']['template'] = $this->language->get('error_recurring_required');
				 }
				}
       }				]]></add>
		</operation>
	</file>
	<file path="catalog/controller/startup/seo_url.php">
		<operation error="skip">
			<search><![CDATA[if (isset($this->request->get['_route_'])) {]]></search>
			<add position="before"><![CDATA[
			//ocmultivendor SEO
			if ($this->config->get('config_seo_url')) {
				if(isset($this->request->get['route']) && $this->request->get['route'] != 'extension/account/purpletree_multivendor/sellerstore/storeview') {
				if($this->request->get['route'] == 'extension/account/purpletree_multivendor/blog_post' && isset($this->request->get['blog_post_id'])) {
					} else {
		$routeee = (explode("extension/account/purpletree_multivendor/",$this->request->get['route']));
				 if (array_key_exists("1",$routeee)) {
					 if(!empty($this->request->get) && $this->request->server['REQUEST_METHOD'] != 'POST') {
							unset($this->request->get['route']);
							$urlappend = '';
							$ccc = 0;
						foreach($this->request->get as $keyy => $valuee) {
							if($ccc == 0) {
								$urlappend .= '?';
							} else {
								$urlappend .= '&';
							}
							$urlappend .= $keyy.'='.$valuee;
							$ccc++;
						}
						if ($this->config->get('config_store_id')) {
							$store_url = $this->config->get('config_url');
						} else {
							if ($this->request->server['HTTPS']) {
								$store_url = HTTPS_SERVER;
							} else {
								$store_url = HTTP_SERVER;
							}
						}
							header('Location: '.$store_url.'ocmultivendor/'.$routeee[1].$urlappend, true, 301);
							exit;
						}
				 }
			}
		} 
		}
		//ocmultivendor SEO
		]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[if (!isset($this->request->get['route'])) {]]></search>
			<add position="before"><![CDATA[
			//ocmultivendor SEO
			$routeee = (explode("ocmultivendor/",$this->request->get['_route_']));
				 if (array_key_exists("1",$routeee)) {
					 $this->request->get['route'] = 'extension/account/purpletree_multivendor/'.$routeee[1];
				 }
				 //ocmultivendor SEO
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[if ($url[0] == 'category_id') {]]></search>
			<add position="before"><![CDATA[if ($url[0] == 'seller_store_id') {
						$this->request->get['seller_store_id'] = $url[1];
					}
					if ($url[0] == 'blog_post_id') {
						$this->request->get['blog_post_id'] = $url[1];
					}
			]]></add>
		</operation>
		<operation error="skip">
			<search index="0"><![CDATA[if (isset($data['route'])) {]]></search>
			<add position="after"><![CDATA[
			//ocmultivendor SEO
			$route11 = '';
				 $routeee = (explode("extension/account/purpletree_multivendor",$data['route']));
				 if (array_key_exists("1",$routeee)) {
					  $route11 = $routeee[1]; 
				 }
				 //ocmultivendor SEO
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$url[0] != 'product_id']]></search>
			<add position="replace" offset="0"><![CDATA[$url[0] != 'product_id' && $url[0] != 'seller_store_id' && $url[0] != 'blog_post_id']]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$this->request->get['route'] = 'product/manufacturer/info';]]></search>
			<add position="after"><![CDATA[
				}elseif (isset($this->request->get['seller_store_id'])) {
					$this->request->get['route'] = 'extension/account/purpletree_multivendor/sellerstore/storeview';
				} elseif (isset($this->request->get['blog_post_id'])) {
					$this->request->get['route'] = 'extension/account/purpletree_multivendor/blog_post';
	]]></add>
		</operation>
		<operation error="skip">
            <search index="0"><![CDATA[unset($data[$key]);]]></search>
             <add position="after" offset="1"><![CDATA[} elseif ($data['route'] == 'extension/account/purpletree_multivendor/sellerstore/storeview' && $key == 'seller_store_id' || ($data['route'] == 'extension/account/purpletree_multivendor/blog_post' && $key == 'blog_post_id')) {
                    $query = $this->db->query("SELECT * FROM " . DB_PREFIX . "seo_url WHERE `query` = '" . $this->db->escape($key . '=' . (int)$value) . "' AND store_id = '" . (int)$this->config->get('config_store_id') . "'");

                    if ( $query->num_rows && $query->row['keyword'] ) {
                        $url .=  '/' . $query->row['keyword'];
 
                        unset( $data[$key] );
                    }
					//ocmultivendor SEO
					} elseif ($route11 != '' && $data['route'] != 'extension/account/purpletree_multivendor/sellerstore/storeview' && $data['route'] != 'extension/account/purpletree_multivendor/blog_post') {
						$url .=  '/ocmultivendor' . $route11;
 
                        unset( $data[$key] );
						//ocmultivendor SEO
                ]]></add>
         </operation>
	</file>
	<file path="catalog/controller/extension/module/zemez_nav.php">
		<operation error="skip">
			<search><![CDATA[$this->load->language('common/header');]]></search>
			<add position="after"><![CDATA[
			##Purpletree header links language###
				$this->load->language('account/ptsregister');
			]]></add>
		</operation>		
		<operation error="skip">
			<search><![CDATA[$data['text_checkout']      = $this->language->get('text_checkout');]]></search>
			<add position="after"><![CDATA[
			##Purpletree header links text###
		$data['text_seller_panel']      = $this->language->get('text_seller_panel');
		$data['text_browse_sellers']      = $this->language->get('text_browse_sellers');
		$data['text_seller_register']      = $this->language->get('text_seller_register');
			]]></add>
		</operation>		
		<operation error="skip">
			<search><![CDATA[$data['wishlist']      = $this->url->link('account/wishlist', '', true);]]></search>
			<add position="after"><![CDATA[
			##Purpletree header links###
		$data['browse_sellers']  = $this->url->link('extension/account/purpletree_multivendor/sellers', '', true);
		$data['seller_login']    = $this->url->link('extension/account/purpletree_multivendor/sellerlogin', '', true);
			]]></add>
		</operation>
	</file>
	<file path="catalog/view/theme/zemez842/template/extension/module/zemez_nav.twig">
	   <operation error="skip">
	   <search><![CDATA[<li><a href="{{ logout }}">{{ text_logout }}</a></li>]]></search>
	   <add position="before"><![CDATA[
	        <li><a href="{{ seller_login }}">{{ text_seller_panel }}</a></li>
			<li><a href="{{ browse_sellers }}">{{ text_browse_sellers }}</a></li>
	   ]]></add>
	   </operation>	  
	   <operation error="skip">
	   <search><![CDATA[<li><a href="{{ login }}">{{ text_login }}</a></li>]]></search>
	   <add position="before"><![CDATA[
	        <li><a href="{{ seller_login }}">{{ text_seller_register }}</a></li>
			<li><a href="{{ browse_sellers }}">{{ text_browse_sellers }}</a></li>
	   ]]></add>
	   </operation>
	</file>	
	<file path="catalog/controller/plaza/header.php">
	<operation error="skip">
			<search><![CDATA[$data['position10'] = $this->load->controller('common/position10');]]></search>
			<add position="after"><![CDATA[
			/***** Show browse seller link in header Plaaza Theme support ******/
			$this->load->language('account/ptsregister');
			 $data['direction'] = $this->language->get('direction');
			 $data['module_purpletree_multivendor_browse_sellers'] = $this->config->get('module_purpletree_multivendor_browse_sellers');
			 $data['module_purpletree_multivendor_include_jquery'] = $this->config->get('module_purpletree_multivendor_include_jquery');
			 $data['module_purpletree_multivendor_seller_login'] = $this->config->get('module_purpletree_multivendor_seller_login');
            $data['module_purpletree_multivendor_status'] = $this->config->get('module_purpletree_multivendor_status');
			$data['text_browse_sellers'] = $this->language->get('text_browse_sellers');
			$data['text_seller_register'] = $this->language->get('text_seller_register');
			$data['seller_panel_link'] = '';
			$data['text_seller_panel'] = $this->language->get('text_seller_panel');
			$data['browse_seller_link'] = $this->url->link('extension/account/purpletree_multivendor/sellers');
			$data['seller_register_link'] = $this->url->link('extension/account/purpletree_multivendor/sellerlogin');
			///// seller panel/////
			$this->load->model('extension/purpletree_multivendor/vendor');

			   $store_detail = $this->model_extension_purpletree_multivendor_vendor->isSeller($this->customer->getId());	
				if($store_detail){
						if($store_detail['is_removed']==1){
							$data['seller_panel_link'] = $this->url->link('extension/account/purpletree_multivendor/sellerstore/becomeseller', '', true);
						} else {
						$stores=array();
						if(isset($store_detail['multi_store_id'])){
							$stores=explode(',',$store_detail['multi_store_id']);
						}
						if($store_detail['store_status']==1 && in_array($this->config->get('config_store_id'),$stores)){
							$data['seller_panel_link'] = $this->url->link('extension/account/purpletree_multivendor/dashboardicons', '', true);
						}elseif(!in_array($this->config->get('config_store_id'),$stores)){
						  $data['seller_panel_link'] = $this->url->link('extension/account/purpletree_multivendor/sellerlogin');
						   $data['text_seller_panel'] = $this->language->get('text_seller_register');
						} else {
							$data['seller_panel_link'] = $this->url->link('extension/account/purpletree_multivendor/sellerstore/becomeseller', '', true);
						}
						}
				}
			//////End seller panel///
			if ($this->customer->isLogged()) {
			$this->load->model('extension/purpletree_multivendor/vendor');
			   $store_detail = $this->model_extension_purpletree_multivendor_vendor->isSeller($this->customer->getId());	
				if($store_detail){
					$data['sellerlogged'] = 'seller';
				}
		    }
			]]></add>
		</operation>
	</file>
	<file path="catalog/controller/common/header.php">
			<operation error="skip">
			<search><![CDATA[$data['language']]]></search>
			<add position="before"><![CDATA[
			/***** Show browse seller link in header ******/
			$this->load->language('account/ptsregister');
			 $data['direction'] = $this->language->get('direction');
			 $data['module_purpletree_multivendor_browse_sellers'] = $this->config->get('module_purpletree_multivendor_browse_sellers');
			 $data['module_purpletree_multivendor_include_jquery'] = $this->config->get('module_purpletree_multivendor_include_jquery');
			 $data['module_purpletree_multivendor_seller_login'] = $this->config->get('module_purpletree_multivendor_seller_login');
             $data['module_purpletree_multivendor_status'] = $this->config->get('module_purpletree_multivendor_status');
			$data['text_browse_sellers'] = $this->language->get('text_browse_sellers');
			$data['text_seller_register'] = $this->language->get('text_seller_register');
			$data['seller_panel_link'] = '';
			$data['text_seller_panel'] = $this->language->get('text_seller_panel');
			$data['browse_seller_link'] = $this->url->link('extension/account/purpletree_multivendor/sellers');
			$data['seller_register_link'] = $this->url->link('extension/account/purpletree_multivendor/sellerlogin');
			///// seller panel/////
			$this->load->model('extension/purpletree_multivendor/vendor');

			   $store_detail = $this->model_extension_purpletree_multivendor_vendor->isSeller($this->customer->getId());	
				if($store_detail){
						if($store_detail['is_removed']==1){
							$data['seller_panel_link'] = $this->url->link('extension/account/purpletree_multivendor/sellerstore/becomeseller', '', true);
						} else {
						$stores=array();
						if(isset($store_detail['multi_store_id'])){
							$stores=explode(',',$store_detail['multi_store_id']);
						}
						if($store_detail['store_status']==1 && in_array($this->config->get('config_store_id'),$stores)){
							$data['seller_panel_link'] = $this->url->link('extension/account/purpletree_multivendor/dashboardicons', '', true);
						} elseif(!in_array($this->config->get('config_store_id'),$stores)){
						  $data['seller_panel_link'] = $this->url->link('extension/account/purpletree_multivendor/sellerlogin');
						   $data['text_seller_panel'] = $this->language->get('text_seller_register');
						} else {
							$data['seller_panel_link'] = $this->url->link('extension/account/purpletree_multivendor/sellerstore/becomeseller', '', true);
						}
						}
				}
			//////End seller panel///
			
			if ($this->customer->isLogged()) {
			$this->load->model('extension/purpletree_multivendor/vendor');
			   $store_detail = $this->model_extension_purpletree_multivendor_vendor->isSeller($this->customer->getId());	
				if($store_detail){
					$data['sellerlogged'] = 'seller';
				}
		    }		
			]]></add>
		</operation>
	<operation error="skip">
			<search><![CDATA[public function index() {]]></search>
			<add position="after"><![CDATA[
			//count notification 
			$this->load->model('extension/purpletree_multivendor/dashboard');
			$totalorders1 = $this->model_extension_purpletree_multivendor_dashboard->getCountSeen($this->customer->getId());
			$totalenqures1 = $this->model_extension_purpletree_multivendor_dashboard->getCountSeen1($this->customer->getId());
			$totaladminmessage = $this->model_extension_purpletree_multivendor_dashboard->getCountAdminMessageSeen($this->customer->getId());
			$data['totalnotification'] = $totalorders1 + $totalenqures1 + $totaladminmessage;
			
       ]]></add>
		</operation>
	</file>	
	
	<file path="catalog/view/theme/*/template/common/footer.twig">
		<operation error="skip">
			<search><![CDATA[</body>]]></search>
			<add position="before"><![CDATA[
			<script>
$(document).on('click','.note-insert button',function(){ 
	$('.modal-backdrop.in').css("display","none");
});
$(document).on('click','.note-link button',function(){ 
	$('.modal-backdrop.in').css("display","none");
});
</script>
			]]></add>
		</operation>
				<operation error="skip">
			<search><![CDATA[<!--Start of Tawk.to Script-->]]></search>
			<add position="before"><![CDATA[
		{% if seller_chat == '' %}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[<!--End of Tawk.to Script-->]]></search>
			<add position="after"><![CDATA[
	{% endif %}
			]]></add>
		</operation>
	</file>
	<file path="catalog/view/theme/*/template/account/order_info.twig">
		<operation error="skip">
			<search><![CDATA[<td class="text-left">{{ history.comment }}</td>]]></search>
			<add position="after"><![CDATA[
			<td class="text-left">{{ history.updated_by }}</td>
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[<td class="text-left">{{ column_comment }}</td>]]></search>
			<add position="after"><![CDATA[
			<td class="text-left">{{ column_updated_by }}</td>
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[<td class="text-left">{{ column_date_added }}</td>]]></search>
			<add position="before"><![CDATA[
			<td class="text-left">{{ column_name }}</td>
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[<td class="text-left">{{ history.date_added }}</td>]]></search>
			<add position="before"><![CDATA[
			<td class="text-left">
				<table>
					{% for product in history.product_name %}
						<tr>
							<td class="purpleproductname">{{ product.product_name }}</td>
						</tr>
					{% endfor %}
				</table>
			</td>
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[&nbsp;<small> - {{ option.name }}: {{ option.value }}</small> {% endfor %}</td>]]></search>
			<add position="replace"><![CDATA[
			&nbsp;<small> - {{ option.name }}: {{ option.value }}</small> {% endfor %}
				<br />
				{% if product.seller_store_name %}
				<small> {{ text_seller_label }} : <a target="_blank" href="index.php?route=extension/account/purpletree_multivendor/sellerstore/storeview&seller_store_id={{ product.seller_store_id }}"> {{ product.seller_store_name }}</a> | {{ text_seller_label_status }}{% if product.seller_order_status.status %} {{ product.seller_order_status.status }} {% endif %}</small>
				{% endif %}
				</td>
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[<h3>{{ text_history }}</h3>]]></search>
			<add position="before" offset="1"><![CDATA[	  <!-- quick order -->
	  {% if customer_manage_order %}	   
	                <div class="tab-pts-content">
						<div class="pts-tab-pane active" id="tab-history">
							<div id="history"></div>
							<br />							
							<fieldset>								
								<legend> {{ text_change_order_status }}</legend>
									{% for product in storesstatus %}
									{% if product.seller_id %}
									<div class="pts-form-group">
									    <label class="pts-col-sm-2 pts-control-label" for="pts_pro_name"> {{ text_store_name }}</label>
										<div class="pts-col-sm-3">
											<span name="pts_pro_name"><strong>{{ product.seller_store_name }}</strong></span>										
											<input type="hidden" name="pts_order_id" value="{{ order_id }}" id="pts_order_id" />										
											<input type="hidden" name="pts_seller_id" value="{{ product.seller_id }}" id="pts_seller_id" />										
										</div>
										<label class="pts-col-sm-2 pts-control-label" for="input-order-status"> {{ column_status }}</label>
										<div class="pts-col-sm-3">
											<select {% if module_purpletree_multivendor_commission_status == product.admin_order_status_id %} disabled {% else %} name="pts_order_status_id" {% endif %} id="input-order-status" class="pts-form-control pts_marging sellerid{{ product.seller_id }}">
												{% for order_statuses in order_statuses %}
												{% if order_statuses.order_status_id == product.seller_order_status.order_status_id %}
												<option value="{{ order_statuses.order_status_id }}" selected="selected">{{ order_statuses.name }}</option>
												{% else %}
												<option value="{{ order_statuses.order_status_id }}">{{ order_statuses.name }}</option>
												{% endif %}
												{% endfor %}
											</select>
										</div>
										<div class="pts-col-sm-2 pts-text-right">
								          <button {% if module_purpletree_multivendor_commission_status == product.admin_order_status_id %} disabled {% endif %} onclick = "pts_change_status({{ order_id }},{{ product.seller_id }});"id="pts-button-change{{ product.seller_id }}" data-loading-text="{{ text_loading }}" class="pts-btn pts-btn-primary pts_marging"> {{ button_change_status }}</button>
							            </div>
									</div>
									{% endif %}
									{% endfor %}
							</fieldset>					
						</div>
					</div>
					<hr>
					<style>
					.pts_marging{
					margin-top:5px;
					margin-bottom:5px;
					}
					</style>		
	    {% endif %}
	  <!-- end quick order -->]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[{{ footer }}]]></search>
			<add position="after"><![CDATA[<!-- quick order -->
<script>
	function pts_change_status(order_id,seller_id){
	var status_id = $('select[name="pts_order_status_id"].sellerid'+seller_id).val();
	$.ajax({
			url: 'index.php?route=account/order/changeStatus&order_id={{ order_id }}',
			type: 'post',
			dataType: 'json',
			data: 'order_status_id='+ status_id + '&seller_id=' + seller_id,
			cache: false,
			beforeSend: function() {
				$('#pts-button-change'+seller_id).button('loading');
			},
			complete: function() {
				$('#pts-button-change'+seller_id).button('reset');
			},
			success: function(json) {
				$('.alert').remove();
				
				if (json['error']) {
					$('#history').before('<div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i> ' + json['error'] + ' <button type="button" class="close" data-dismiss="alert">&times;</button></div>');
				}
				
				if (json['success']) {
				    location.reload();				
					$('#history').before('<div class="alert pts-alert-success"><i class="fa fa-check-circle"></i> ' + json['success'] + ' <button type="button" class="close" data-dismiss="alert">&times;</button></div>');
					
	
				}
			},
			error: function(xhr, ajaxOptions, thrownError) {
				alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
			}
	});
		}
</script>
<!-- end quick order -->]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[<td class="text-left">{{ column_model }}</td>]]></search>
			<add position="after"><![CDATA[
			{% if quick_order_check == 1 %}	
			   <td class="text-right">{{ column_delivery_address }}</td>
			{% endif %}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[<td class="text-left">{{ product.model }}</td>]]></search>
			<add position="after"><![CDATA[
			{% if quick_order_check == 1 %}	
              <td class="text-right">
			   {% set latlong = 0 %}
			  {% if product.deliveraddresslon %}
			  {% if product.deliveraddresslat %}
			  {% set latlong = 1 %}
			  <a target="_blank" href="https://maps.google.com/?q={{ product.deliveraddresslat }},{{ product.deliveraddresslon }}">{{ product.delivery_address }}</a>
			  {% endif %}
			  {% endif %}
			  		  {% if latlong == 0 %}
					  {{ product.delivery_address }}
			  {% endif %}
			  </td>
			{% endif %}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[<td colspan="3"></td>]]></search>
			<add position="replace"><![CDATA[
			{% if quick_order_check == 1 %}	
              <td colspan="4"></td>
			{% else %}
			<td colspan="3"></td>
			{% endif %}
			]]></add>
		</operation>
	</file>
	<file path="catalog/view/theme/*/template/account/order_list.twig">
		<operation error="skip">
			<search><![CDATA[<td class="text-left">{{ order.status }}</td>]]></search>
			<add position="replace" offset="0"><![CDATA[
			<td class="text-left pts-table_order_list" style="padding: 0px;">
				<table style="width: 100%;">
					{% for status in order.status %}
					<tr>
						<td class="purpleproductname" style="padding: 5px;">
							<table>
								{% for product in status.product %}
									<tr>
										<td>{{ product.product_name }}</td>
									</tr>
								{% endfor %}
							</table>
						</td>
							<td class="purplstatus" style="text-align:right;padding:11px;">{{ status.order_status }}</td>
					</tr>
				  {% endfor %}
				</table>
			  </td>
			]]></add>
		</operation>
	</file>
	<file path="catalog/controller/account/order.php">
		<operation error="skip">
			<search><![CDATA[$data['histories'][] = array(]]></search>
			<add position="replace" offset="1"><![CDATA[
			$product22[0]['product_name'] = "All"; 
			$data['histories'][] = array(
					'date_added' => date($this->language->get('date_format_short'), strtotime($result['date_added'])),
					'product_name' => $product22,
					'updated_by' => "Admin",
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$data['continue'] = $this->url->link('account/order', '', true);]]></search>
			<add position="before"><![CDATA[
			 usort($data['histories'], function($a, $b) {
			  return ($a['date_added'] < $b['date_added']) ? -1 : 1;
			});
			]]></add>
		</operation>
			<operation error="skip">
			<search><![CDATA[$this->model_account_order->getOrderHistories($this->request->get['order_id']);]]></search>
			<add position="after"><![CDATA[
			$data['storesstatus'] = $storesstatus;
				$data['column_updated_by'] = "Updated By";
			$resultssellers = 
			$this->model_account_order->getSellerOrderHistories($this->request->get['order_id']);
			foreach ($resultssellers as $result1) {
			$data['histories'][] = array(
					'date_added' => date($this->language->get('date_format_short'), strtotime($result1['created_at'])),
					'product_name' => $this->model_account_order->getSellerOrderProducts($result1['order_id'],$result1['seller_id']),
					'status'     => $result1['status'],
					'comment'    => $result1['notify'] ? nl2br($result1['comment']) : '',
					'updated_by' => $this->model_account_order->getStoreName($result1['seller_id'])
				);
			}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA['name'       => $result['firstname'] . ' ' . $result['lastname'],]]></search>
			<add position="replace" offset="1"><![CDATA[
			'name'       => $result['firstname'] . ' ' . $result['lastname'],
			'status'     => $this->model_account_order->getUniqueSeller($result['order_id']),
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[public function info() {]]></search>
			<add position="after"><![CDATA[
				$storesstatus = array();
			$this->load->language('account/ptsregister');
		    $data['text_seller_label'] = $this->language->get('text_seller_label');
		    $data['text_seller_label_status'] = $this->language->get('text_seller_label_status');
			$direction = $this->language->get('direction');
		 if ($direction=='rtl'){
			$this->document->addStyle('catalog/view/javascript/purpletree/bootstrap/css/bootstrap.min-a.css');
			$this->document->addStyle('catalog/view/theme/default/stylesheet/purpletree/custom-a.css'); 
			}else{
			$this->document->addStyle('catalog/view/javascript/purpletree/bootstrap/css/bootstrap.min.css'); 
			$this->document->addStyle('catalog/view/theme/default/stylesheet/purpletree/custom.css'); 
			}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$product_info = $this->model_catalog_product->getProduct($product['product_id']);]]></search>
			<add position="after"><![CDATA[$orderd_pro_seller_id = "";
				$seller_datile = "";
                $orderd_pro_seller_id = $this->model_account_order->getOrderedProductsellerid($this->request->get['order_id'],$product['product_id']);
				////quick order ////
				$this->load->model('extension/purpletree_multivendor/sellerorder');
			    $pts_order_info = $this->model_extension_purpletree_multivendor_sellerorder->getOrder($order_id,$orderd_pro_seller_id);
				//// end quick order ////
				$seller_datile = $this->model_account_order->getsellerInfofororder($orderd_pro_seller_id);
				if(empty($seller_datile)){
					$seller_datile['store_name'] = '';
					$seller_datile['store_id'] = '';
				}
				$delivery_address ='';
				$delivery_address_lat ='';
				$delivery_address_lon ='';
				if (defined('QUICK_ORDER') && QUICK_ORDER == 1 ){
			     $data['quick_order_check'] = QUICK_ORDER;
				}
				$deliveraddresslon='';
				$deliveraddresslat='';
				
				if (defined('QUICK_ORDER') && QUICK_ORDER == 1 ){
				$delivery_address1 = $this->model_extension_purpletree_multivendor_sellerorder->getDeliveryAddress($product['product_id']);
				if(isset($delivery_address1['delivery_address'])) {
					$delivery_address = $delivery_address1['delivery_address'];
				}

				if(isset($delivery_address1['deliveraddresslon'])) {
					$deliveraddresslon = $delivery_address1['deliveraddresslon'];
				}
				if(isset($delivery_address1['deliveraddresslat'])) {
					$deliveraddresslat = $delivery_address1['deliveraddresslat'];
				}
				}
				$storesstatus[$orderd_pro_seller_id] = array(
														 'seller_id'    => $orderd_pro_seller_id,
														 'seller_store_name'    => $seller_datile['store_name'],
														 'admin_order_status_id'    => (!empty($pts_order_info['admin_order_status_id'])?$pts_order_info['admin_order_status_id']:''),
				'seller_order_status' => (!empty($seller_datile['store_name'])?$this->model_account_order->getLatestsellerstatus($this->request->get['order_id'], $orderd_pro_seller_id):'')
															);
				]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$data['products'][] = array(]]></search>
			<add position="after"><![CDATA['delivery_address'    => $delivery_address,
			'deliveraddresslon'    => $deliveraddresslon,
			'deliveraddresslat'    => $deliveraddresslat,
			'admin_order_status_id'    => (!empty($pts_order_info['admin_order_status_id'])?$pts_order_info['admin_order_status_id']:''),
                    'seller_store_name'    => $seller_datile['store_name'],
                    'seller_id'    => $orderd_pro_seller_id,
					'seller_store_id'    => $seller_datile['store_id'],
					'seller_order_status' => (!empty($seller_datile['store_name'])?$this->model_account_order->getLatestsellerstatus($this->request->get['order_id'], $orderd_pro_seller_id):''),]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$data['continue'] = $this->url->link('account/order', '', true);]]></search>
			<add position="after"><![CDATA[/////quick order ////////
			$data['customer_manage_order'] = $this->config->get('module_purpletree_multivendor_customer_manage_order');
			$orderstatus = 0;
			if(null !== $this->config->get('module_purpletree_multivendor_commission_status')) {
				$orderstatus = $this->config->get('module_purpletree_multivendor_commission_status');
				} else {
				$data['error_warning'] = $this->language->get('module_purpletree_multivendor_commission_status_warning');
			}
			$data['module_purpletree_multivendor_commission_status'] = $orderstatus;
			$this->load->model('extension/localisation/ptsorder_status');
				$data['order_statuses1'] = $this->model_extension_localisation_ptsorder_status->getOrderStatuses();
				$data['order_status_id'] = $order_info['order_status_id'];
				if(NULL !== $this->config->get('module_purpletree_multivendor_allow_order_status')){
				$data['allow_order_statuse'] = Unserialize($this->config->get('module_purpletree_multivendor_allow_order_status'));
				}
			if(!empty($data['allow_order_statuse'])){
			foreach($data['allow_order_statuse'] as $key=>$value){
				$allow_order_statuse1[$value]='selected';
			}
			}
			
			foreach($data['order_statuses1'] as $key => $value){
			    $allow_order_statuse4 ='';
				if(isset($allow_order_statuse1[$value['order_status_id']])){
				   $allow_order_statuse4= 'selected';
					}	
				if($allow_order_statuse4 == 'selected'){	
			    $data['order_statuses'][] = array(
				'order_status_id' => $value['order_status_id'],
				'name' => $value['name']
				);
				
				}
			}	
			$data['button_change_status'] = $this->language->get('button_change_status');	
			$data['text_change_order_status'] = $this->language->get('text_change_order_status');	
		
			//// end quick order ////]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[public function reorder() {]]></search>
			<add position="before"><![CDATA[	///quick order///
    public function changeStatus() {
			$this->load->language('purpletree_multivendor/sellerorder');
			
			$this->load->model('extension/purpletree_multivendor/dashboard');
			
			$this->model_extension_purpletree_multivendor_dashboard->checkSellerApproval();
			
			$json = array();
			
			/* if (!isset($this->session->data['api_id'])) {
				$json['error'] = $this->language->get('error_permission');
			} else { */
			// Add keys for missing post vars
			$keys = array(
			'order_status_id',
			'notify',
			'override',
			'comment'
			);
			
			foreach ($keys as $key) {
				if (!isset($this->request->post[$key])) {
					$this->request->post[$key] = '';
				}
			}
			
			$this->load->model('extension/purpletree_multivendor/sellerorder');
			
			if (isset($this->request->get['order_id'])) {
				$order_id = $this->request->get['order_id'];
				} else {
				$order_id = 0;
			}
			if (isset($this->request->post['seller_id'])) {
				$seller_id = $this->request->post['seller_id'];
				} 
			$order_info = $this->model_extension_purpletree_multivendor_sellerorder->getOrder($order_id,$seller_id);
			
			if ($order_info) {
				$this->model_extension_purpletree_multivendor_sellerorder->addOrderHistory($order_id,$seller_id, $this->request->post['order_status_id'], $this->request->post['comment'], $this->request->post['notify'], $this->request->post['override']);
				
				$json['success'] = $this->language->get('text_success');
				} else {
				$json['error'] = $this->language->get('error_not_found');
			}
			//}
			
			if (isset($this->request->server['HTTP_ORIGIN'])) {
				$this->response->addHeader('Access-Control-Allow-Origin: ' . $this->request->server['HTTP_ORIGIN']);
				$this->response->addHeader('Access-Control-Allow-Methods: GET, PUT, POST, DELETE, OPTIONS');
				$this->response->addHeader('Access-Control-Max-Age: 1000');
				$this->response->addHeader('Access-Control-Allow-Headers: Content-Type, Authorization, X-Requested-With');
			}
			
			$this->response->addHeader('Content-Type: application/json');
			$this->response->setOutput(json_encode($json));
		}
		///quick order///]]></add>
		</operation>
	</file>
	<file path="catalog/controller/api/order.php">
	   <operation error="skip">
			<search><![CDATA[$order_data['products'][] = array(]]></search>
			<add position="before"><![CDATA[$seller_id = $this->cart->getvendorcart($product['cart_id']);]]></add>
		</operation>
		<operation error="skip">
		<search><![CDATA['product_id' => $product['product_id']]]></search>
			<add position="before"><![CDATA['seller_id'  => isset($seller_id)?$seller_id:'',]]></add>
		</operation>
	</file>
	<file path="catalog/model/account/order.php">
		<operation error="skip">
			<search><![CDATA[getOrderHistories]]></search>
			<add position="before"><![CDATA[
						public function getSellerOrderHistories($order_id) {
		$query = $this->db->query("SELECT pvh.order_id, pvh.seller_id, pvh.created_at, os.name AS status, pvh.comment, pvh.notify FROM " . DB_PREFIX . "purpletree_vendor_orders_history pvh LEFT JOIN " . DB_PREFIX . "order_status os ON pvh.order_status_id = os.order_status_id WHERE pvh.order_id = '" . (int)$order_id . "' AND os.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY pvh.id DESC");
		return $query->rows;
	}
	
	public function getUniqueSeller($order_id){
		$query = $this->db->query("SELECT DISTINCT(seller_id) FROM " . DB_PREFIX . "purpletree_vendor_orders_history WHERE order_id='".(int)$order_id."' order by id desc");
		$result = $query->rows;
		$aa = array();
		$aa = $this->getSellerOrderStatus($result, $order_id);
		$dd = array();
		if(!empty($aa)) {
			foreach($aa as $bb) {
			foreach($bb['product'] as $cc) {
				$dd[] = $cc['product_id'];
			}
		}
		}
		
		$query11 = $this->db->query("SELECT '0' AS seller_id,op.product_id,op.name as product_name, os.name AS status FROM `" . DB_PREFIX . "order_product` op LEFT JOIN `" . DB_PREFIX . "order` o ON o.order_id = op.order_id LEFT JOIN `" . DB_PREFIX . "order_status` os ON o.order_status_id = os.order_status_id WHERE op.order_id='" . $order_id . "' GROUP BY op.order_product_id");
		$resul11t = $query11->rows;
			$fdfd = array();
		foreach($resul11t as $ree) {
			if(!empty($aa)) {
				if(!in_array($ree['product_id'],$dd)) {
		$fdfd[$ree['product_id']]['product_name'] = $ree['product_name'];
					foreach($aa as $gg) {
						$aa[0] = array("order_status" =>  $ree['status'],
										"product" => $fdfd
						);
					}
				}
			} else {
		$fdfd[$ree['product_id']]['product_name'] = $ree['product_name'];
				$aa[0] = array("order_status" =>  $ree['status'],
								"seller_id" => '0',
										"product" => $fdfd
						);
			}
		}
		return $aa;
	}
	
	public function getSellerOrderStatus($result, $order_id){
		$order_status = array();
		foreach($result as $result){
			$query = $this->db->query("SELECT pvh.order_id, pvh.seller_id, pvh.created_at, os.name AS status FROM " . DB_PREFIX . "purpletree_vendor_orders_history pvh LEFT JOIN " . DB_PREFIX . "order_status os ON pvh.order_status_id = os.order_status_id WHERE pvh.seller_id='".(int)$result['seller_id']."' AND pvh.order_id='".(int)$order_id."' AND os.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY pvh.id DESC limit 1");
					if($query->num_rows) {
			$result1 = $query->row;
			$order_status[$result['seller_id']] = array(
				'order_status' => $result1['status'],
				'seller_id' => $result['seller_id'],
				'product' => $this->getSellerOrderProducts($order_id, $result['seller_id'])
			);
			}
		}
	
		return $order_status;
	}
	
	public function getSellerOrderProducts($order_id, $seller_id){
		$query = $this->db->query("SELECT pvo.product_id,(SELECT op.name FROM " . DB_PREFIX . "order_product op where op.product_id = pvo.product_id AND op.order_id = pvo.order_id LIMIT 0,1) as product_name FROM " . DB_PREFIX . "purpletree_vendor_orders pvo WHERE pvo.seller_id='".(int)$seller_id."' AND pvo.order_id = '".(int)$order_id."'");
    
		return $query->rows;
	}
		public function getStoreName($seller_id) {
		$query = $this->db->query("SELECT store_name FROM " . DB_PREFIX . "purpletree_vendor_stores WHERE seller_id = " . (int)$seller_id );

		if ($query->num_rows > 0) {
			return $query->row['store_name'];
		} else {
			return null;	
		}
		
	}
    public function getOrderedProductsellerid($order_id,$product_id) {
		$query = $this->db->query("SELECT seller_id FROM `" . DB_PREFIX . "purpletree_vendor_orders` WHERE order_id = '" . (int)$order_id . "' AND product_id = '" . (int)$product_id . "' ");
		if($query->num_rows){
		return $query->row['seller_id'];
		}
	}
	public function getLatestsellerstatus($order_id, $seller_id){
		$query = $this->db->query("SELECT oh.created_at, os.name AS status, oh.comment, oh.notify,oh.order_status_id FROM " . DB_PREFIX . "purpletree_vendor_orders_history oh LEFT JOIN " . DB_PREFIX . "order_status os ON oh.order_status_id = os.order_status_id WHERE oh.order_id = '" . (int)$order_id . "' AND oh.seller_id= '".(int)$seller_id."' AND os.language_id = '" . (int)$this->config->get('config_language_id') . "' ORDER BY oh.id DESC LIMIT 1");
		return $query->row;
	}	
			]]></add>
		</operation>
	</file>
	<file path="catalog/controller/mail/order.php">
		<operation error="skip">
			<search><![CDATA[$emails = explode(',', $this->config->get('config_mail_alert_email'));]]></search>
			<add position="before"><![CDATA[
			// Seller mail
			$this->load->model('extension/purpletree_multivendor/sellerorder');
			$order_seller = $this->model_extension_purpletree_multivendor_sellerorder->getOrderSeller($order_id);
			
			if($order_seller){
				foreach($order_seller as $orderseller){
					
					$this->load->language('mail/order_alert');
					$seller_detail = $this->db->query("SELECT email FROM " .DB_PREFIX."customer WHERE customer_id = '".$orderseller['seller_id']."'")->row;
					// HTML Mail
					$data['text_received'] = $this->language->get('text_received');
					$data['text_order_id'] = $this->language->get('text_order_id');
					$data['text_date_added'] = $this->language->get('text_date_added');
					$data['text_order_status'] = $this->language->get('text_order_status');
					$data['text_product'] = $this->language->get('text_product');
					$data['text_total'] = $this->language->get('text_total');
					$data['text_comment'] = $this->language->get('text_comment');
					
					$data['order_id'] = $order_info['order_id'];
					$data['date_added'] = date($this->language->get('date_format_short'), strtotime($order_info['date_added']));

					$order_status_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_status WHERE order_status_id = '" . (int)$order_status_id . "' AND language_id = '" . (int)$this->config->get('config_language_id') . "'");

					if ($order_status_query->num_rows) {
						$data['order_status'] = $order_status_query->row['name'];
					} else {
						$data['order_status'] = '';
					}

					$this->load->model('tool/upload');
					
					$data['products'] = array();

					$order_products = $this->model_extension_purpletree_multivendor_sellerorder->getSellerOrderProducts($order_id, $orderseller['seller_id']);

					foreach ($order_products as $order_product) {
						$option_data = array();
						
						$order_options = $this->model_extension_purpletree_multivendor_sellerorder->getOrderOptions($order_info['order_id'], $order_product['order_product_id']);
						
						foreach ($order_options as $order_option) {
							if ($order_option['type'] != 'file') {
								$value = $order_option['value'];
							} else {
								$upload_info = $this->model_tool_upload->getUploadByCode($order_option['value']);
			
								if ($upload_info) {
									$value = $upload_info['name'];
								} else {
									$value = '';
								}
							}

							$option_data[] = array(
								'name'  => $order_option['name'],
								'value' => (utf8_strlen($value) > 20 ? utf8_substr($value, 0, 20) . '..' : $value)
							);					
						}
							
						$data['products'][] = array(
						    'seller'     => 1,
							'name'     => $order_product['name'],
							'model'    => $order_product['model'],
							'quantity' => $order_product['quantity'],
							'option'   => $option_data,
							'total'    => html_entity_decode($this->currency->format($order_product['total'] + ($this->config->get('config_tax') ? ($order_product['tax'] * $order_product['quantity']) : 0), $order_info['currency_code'], $order_info['currency_value']), ENT_NOQUOTES, 'UTF-8')
						);
					}
					
					$data['vouchers'] = array();
					
					$order_vouchers = $this->model_extension_purpletree_multivendor_sellerorder->getOrderVouchers($order_id);

					foreach ($order_vouchers as $order_voucher) {
						$data['vouchers'][] = array(
							'description' => $order_voucher['description'],
							'amount'      => html_entity_decode($this->currency->format($order_voucher['amount'], $order_info['currency_code'], $order_info['currency_value']), ENT_NOQUOTES, 'UTF-8')
						);					
					}

					$data['totals'] = array();
					
					$order_totals = $this->model_extension_purpletree_multivendor_sellerorder->getOrderTotals($order_id, $orderseller['seller_id']);

					foreach ($order_totals as $order_total) {
						$data['totals'][] = array(
							'title' => $order_total['title'],
							'value' => html_entity_decode($this->currency->format($order_total['value'], $order_info['currency_code'], $order_info['currency_value']), ENT_NOQUOTES, 'UTF-8')
						);
					}

					$data['comment'] = strip_tags($order_info['comment']);

					///// email template //////
				   $this->load->model('extension/purpletree_multivendor/vendor');
					$product_detail='';
					foreach ($data['products'] as $product) {
						$product_detail.=$product['quantity'].'X'.$product['name'].'('.$product['model'].')'.$product['total'].'<br>';
						if(!empty($product['option'])){
						  	foreach ($product['option'] as $option) {
							$product_detail.=$option['name'].$option['value'].'<br><br>';
								}
							}					
					}
					$seller_store=$seller_datile['store_name'];
					$voucher_detail = '';
					if(!empty($data['vouchers'])){
					foreach ($data['vouchers'] as $voucher) {
						$voucher_detail.=$voucher['description'].$voucher['amount'].'<br>';
						}
					}
					$price_detail = '';
					foreach ($data['totals'] as $total) {
					$price_detail.=$total['title'].$total['value'].'<br>';
						}
						
			if($data['comment'] != ''){			
			$email_code = 'seller_product_order_alert_to_seller_with_comment';
		    $register_template = $this->model_extension_purpletree_multivendor_vendor->getSelleRegisterEmailTemplate($email_code);
		    $subtemplatefromdb = $register_template['new_subject'];
		    $messtemplatefromdb = $register_template['new_message'];
			$replaceversub = array('_ADMIN_STORE_NAME_' =>$this->config->get('config_name'),
			'_ORDER_ID_' =>$order_info['order_id']);
			
			$email_subject = $this->model_extension_purpletree_multivendor_vendor->getmsgfromarray($replaceversub,$subtemplatefromdb);
			$replacevar = array('_ORDER_ID_' =>$data['order_id'],
										'_DATE_ADDED_' =>$data['date_added'],
										'_ORDER_STATUS_' =>$data['order_status'],
										'_PRODUCT_DETAIL_' =>$product_detail,
										'_SELLER_STORE_' =>$seller_store,
										'_VOUCHER_DETAIL_' =>$voucher_detail,
										'_PRICE_DETAIL_' =>$price_detail,
										'_COMMENT_' =>$data['comment']
										);
			$email_message = $this->model_extension_purpletree_multivendor_vendor->getmsgfromarray($replacevar,$messtemplatefromdb);
			}else{
			   $email_code = 'seller_product_order_alert_to_seller_without_comment';
		    $register_template = $this->model_extension_purpletree_multivendor_vendor->getSelleRegisterEmailTemplate($email_code);
		    $subtemplatefromdb = $register_template['new_subject'];
		    $messtemplatefromdb = $register_template['new_message'];
			$replaceversub = array('_ADMIN_STORE_NAME_' =>$this->config->get('config_name'),
			'_ORDER_ID_' =>$order_info['order_id']);
			
			$email_subject = $this->model_extension_purpletree_multivendor_vendor->getmsgfromarray($replaceversub,$subtemplatefromdb);
			$replacevar = array('_ORDER_ID_' =>$data['order_id'],
										'_DATE_ADDED_' =>$data['date_added'],
										'_ORDER_STATUS_' =>$data['order_status'],
										'_PRODUCT_DETAIL_' =>$product_detail,
										'_SELLER_STORE_' =>$seller_store,
										'_VOUCHER_DETAIL_' =>$voucher_detail,
										'_PRICE_DETAIL_' =>$price_detail
										);
			$email_message = $this->model_extension_purpletree_multivendor_vendor->getmsgfromarray($replacevar,$messtemplatefromdb);
			}					
			$reciver = $seller_detail['email'];
			$this->model_extension_purpletree_multivendor_vendor->ptsSendMail($reciver,$email_subject,$email_message);
			///// End email template //////
				}
			}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$language->load('mail/order_add');]]></search>
			<add position="after"><![CDATA[$language->load('account/ptsregister');
			$data['text_seller_label'] = $language->get('text_seller_label');
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$this->load->language('mail/order_alert');]]></search>
			<add position="after"><![CDATA[$this->load->language('account/ptsregister');
			$data['text_seller_label'] = $this->language->get('text_seller_label');
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$data['products'][] = array(]]></search>
			<add position="after" ><![CDATA['seller_store_name'     => $seller_datile['store_name'],]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$data['products'][] = array(]]></search>
			<add position="before" ><![CDATA[
			$orderd_pro_seller_id = "";
			$seller_datile = "";
			$orderd_pro_seller_id = $this->model_checkout_order->getOrderedProductsellerid($order_product['order_id'],$order_product['product_id']);
				    $seller_datile = $this->model_checkout_order->getsellerInfofororder($orderd_pro_seller_id);
				    if(empty($seller_datile)){
					$seller_datile['store_name'] = '';
				     }]]></add>
		</operation>
	</file>
	<file path="catalog/controller/account/login.php">
		<operation error="skip">
			<search><![CDATA[$this->response->redirect($this->url->link('account/account', '', true));]]></search>
			<add position="before"><![CDATA[
			if($this->config->get('module_purpletree_multivendor_hide_user_menu')){
				$data['purpletree_module_status'] =$this->config->get('module_purpletree_multivendor_status');
				$store_detail = $this->customer->isSeller();		
					if(isset($data['purpletree_module_status'])){
					$stores=array();
						if(isset($store_detail['multi_store_id'])){
							$stores=explode(',',$store_detail['multi_store_id']);
						}
					
						if(isset($store_detail['store_status']) && $store_detail['store_status'] == 1 && (in_array($this->config->get('config_store_id'),$stores))){	
							$this->response->redirect($this->url->link('extension/account/purpletree_multivendor/dashboardicons','', true));
						  }
					}
			 }
			]]></add>
		</operation>
	</file>
	<file path="catalog/view/theme/*/template/account/order_list.tpl">
		<operation error="skip">
			<search><![CDATA[<td class="text-left"><?php echo $order['status']; ?></td>]]></search>
			<add position="replace"><![CDATA[
			
			<td class="text-left pts-table_order_list" style="padding: 0px;">
				<table style="width: 100%;">
				  <?php foreach($order['status'] as $status) { ?>
					<tr>
						<td class="purpleproductname" style="padding: 5px;">
							<table>
								<?php foreach($status['product'] as $product) { ?>
									<tr>
										<td><?php echo $product['product_name']; ?></td>
									</tr>
								<?php } ?>
							</table>
						</td>
						<td class="purplstatus" style="text-align:right;padding:11px;"><?php echo $status['order_status']; ?></td>
					</tr>
				  <?php } ?>
				</table>
			  </td>
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[<td class="text-xs-left"><?php echo $order['status']; ?></td>]]></search>
			<add position="replace"><![CDATA[
			<td class="text-left pts-table_order_list" style="padding: 0px;">
				<table style="width: 100%;">
				  <?php foreach($order['status'] as $status) { ?>
					<tr>
						<td class="purpleproductname" style="padding: 5px;">
							<table>
								<?php foreach($status['product'] as $product) { ?>
									<tr>
										<td><?php echo $product['product_name']; ?></td>
									</tr>
								<?php } ?>
							</table>
						</td>
						<td class="purplstatus" style="text-align:right;padding:11px;"><?php echo $status['order_status']; ?></td>
					</tr>
				  <?php } ?>
				</table>
			  </td>
			]]></add>
		</operation>
	</file>	
	

	<file path="system/library/template/twig.php">
	    <operation error="skip">
	       <search><![CDATA[DIR_TEMPLATE . $filename]]></search>
		   <add index="0" position="after"><![CDATA[$file1 = "";
		   if (is_dir(DIR_MODIFICATION . 'catalog/view/theme/')) {
		   if(!isset($template)) {
		   $template = '';
			if(!isset($filename)) {
				$template = $filename;
				}
		   }
			$file1 = DIR_MODIFICATION . 'catalog/view/theme/' . $template . '.tpl';
		}]]></add>
		</operation>
		<operation error="skip">
	       <search><![CDATA[public function render($template, $cache = false) {]]></search>
		   <add position="after"><![CDATA[$file1 = DIR_MODIFICATION . 'catalog/view/theme/' . $template . '.tpl';]]></add>
		</operation>	
		<operation error="skip">
	       <search><![CDATA[$file = str_replace("default/","fastor/",$file);]]></search>
		   <add position="after"><![CDATA[$file1 = str_replace("default/","fastor/",$file1);]]></add>
		</operation>
		<operation error="skip">
	       <search><![CDATA[$file = str_replace("default/","destiny/",$file);]]></search>
		   <add position="after"><![CDATA[$file1 = str_replace("default/","destiny/",$file1);]]></add>
		</operation>
		<operation error="skip">
	       <search><![CDATA[if (is_file($file)) {]]></search>
		   <add position="before"><![CDATA[if (is_file($file1)) {
			
			extract($this->data);

			ob_start();

			require($file1);

			return ob_get_clean();
		}]]></add>
		</operation>
	</file>

	<file path="catalog/controller/checkout/payment_method.php">
		<operation error="skip">
			<search><![CDATA[$this->response->setOutput($this->load->view('checkout/payment_method', $data));]]></search>
			<add position="before"><![CDATA[
			$data['module_purpletree_multivendor_status']=$this->config->get('module_purpletree_multivendor_status');
			$data['payment_pp_adaptive_status']=$this->config->get('payment_pp_adaptive_status');
			]]></add>
		</operation>
	</file>	
		<file path="catalog/view/theme/*/template/checkout/payment_method.twig">
		<operation error="skip">
			<search><![CDATA[<input type="radio" name="payment_method" value="{{ payment_method.code }}" checked="checked" />]]></search>
			<add position="replace"><![CDATA[
			{% if module_purpletree_multivendor_status %}
			{% if payment_pp_adaptive_status %}
			 <input type="radio" name="payment_method" value="{{ payment_method.code }}"{% if payment_method.code=='pp_adaptive1' %} {% else %} checked="checked" {% endif %}  {% if payment_method.code=='pp_adaptive1' %} disabled="disabled" {% endif %} />
			 {% else %}
			  <input type="radio" name="payment_method" value="{{ payment_method.code }}" checked="checked" />
			  {% endif %}
			 {% else %}
			 <input type="radio" name="payment_method" value="{{ payment_method.code }}" checked="checked" />
			 {% endif %}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[ <input type="radio" name="payment_method" value="{{ payment_method.code }}" />]]></search>
			<add position="replace"><![CDATA[
			{% if module_purpletree_multivendor_status %}
			{% if payment_pp_adaptive_status %}
			<input type="radio" name="payment_method" value="{{ payment_method.code }}" {% if payment_method.code=='pp_adaptive1' %} disabled="disabled" {% endif %} />
			 {% else %}
			   <input type="radio" name="payment_method" value="{{ payment_method.code }}" />
			  {% endif %}
			 {% else %}
			  <input type="radio" name="payment_method" value="{{ payment_method.code }}" />
			 {% endif %}
			]]></add>
		</operation>
	</file>	
	<file path="catalog/controller/account/return.php">
		<operation error="skip">
			<search><![CDATA[if (($this->request->server['REQUEST_METHOD'] == 'POST') && $this->validate()) {]]></search>
			<add position="before"><![CDATA[$product_id = '';		
		if(isset($this->request->get['product_id'])) {
			$this->session->data['product_id'] = $this->request->get['product_id'];		
		}
		if(isset($this->session->data['product_id'])) {
			$product_id = $this->session->data['product_id'];
		}		
        $this->request->post['product_id'] = $product_id;]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[if (($this->request->server['REQUEST_METHOD'] == 'POST') && $this->validate()) {]]></search>
			<add position="after"><![CDATA[$seller_id = $this->model_account_return->getSellerId($this->request->post);
			$this->request->post['seller_id'] = $seller_id;]]></add>
		</operation>
	</file>	
	<file path="catalog/model/account/return.php">
		<operation error="skip">
			<search><![CDATA[return $this->db->getLastId();]]></search>
			<add position="replace"><![CDATA[$last_return_id = $this->db->getLastId();
        $this->db->query("UPDATE`" . DB_PREFIX . "return` SET product_id = '" . (int)$data['product_id'] . "' WHERE return_id = '" . (int)$this->db->getLastId(). "'");
		if(isset($data['seller_id'])) {
			if(!empty($data['seller_id']) ||($data['seller_id'] != 0)){
			$this->db->query("INSERT INTO `" . DB_PREFIX . "purpletree_vendor_products_return` SET return_id = '" . (int)$last_return_id . "',order_id = '" . (int)$data['order_id'] . "',product_id  = '" . (int)$data['product_id'] . "',seller_id  = '" . (int)$data['seller_id'] . "',status   = 0, created_date = NOW(), modified_date = NOW()");	
			}
		}		
		return $last_return_id;]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[class ModelAccountReturn extends Model {]]></search>
			<add position="after"><![CDATA[public function getSellerId($data){
		 $query = $this->db->query("SELECT pvo.seller_id FROM `" . DB_PREFIX . "purpletree_vendor_orders` pvo WHERE pvo.order_id  = '" . (int)$data['order_id'] . "' AND pvo.product_id = '" .(int)$data['product_id'] . "'");
		if($query->num_rows>0)
		{
		return $query->row['seller_id'];
		}else{
			return null;
		}
		
	   }]]></add>
		</operation>
	</file>	
	<file path="catalog/controller/account/order.php">
	<operation error="skip">
			<search><![CDATA[foreach ($totals as $total) {]]></search>
			<add position="after"><![CDATA[if($total['title'] == 'Refunded'){
					$ids = array();
					$return_seller_store_name = "";
					$ids = explode('_',$total['code']);						
					$seller_idd = $ids[1];
					$sellerdd = $this->model_account_order->getsellerInfofororder($seller_idd);
						$return_seller_store_name  = $sellerdd['store_name'];					
					$final_title = $total['title']." "."(".($return_seller_store_name).")";		
				}else{
					$final_title = $total['title'];
				}]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA['title' => $total['title'],]]></search>
			<add position="replace"><![CDATA['title' => $final_title,]]></add>
		</operation>
	</file>	
	<file path="catalog/model/account/order.php">
	    <operation error="skip">
			<search><![CDATA[class ModelAccountOrder extends Model {]]></search>
			<add position="after"><![CDATA[
		public function getsellerInfofororder($sellerid) { 	
		    $query = $this->db->query("SELECT pvs.store_name, pvs.id AS store_id FROM " . DB_PREFIX . "purpletree_vendor_stores pvs  WHERE pvs.seller_id = '" . (int)$sellerid . "'");    
		     return $query->row;
		 
	}
	]]></add>
		</operation>
	</file>	
	<file path="admin/model/sale/return.php">
		<operation error="skip">
			<search><![CDATA[public function editReturn($return_id, $data) {]]></search>
		      <add position="after" offset="1"><![CDATA[if ($this->config->get('module_purpletree_multivendor_status')) {
			  if($this->config->get('module_purpletree_multivendor_refund_status')== $data['return_action_id'] ){
			$proudct_return_statuss = '';
			$seller_id_returnn = '';
		     $query10 = $this->db->query("SELECT status FROM `" . DB_PREFIX . "purpletree_vendor_products_return` WHERE return_id = '" . (int)$return_id . "'");
				  if($query10->num_rows){
					$proudct_return_statuss = $query10->row['status'];
				  }
			
			$product_price = '';
			
			if(isset($proudct_return_statuss) && $proudct_return_statuss == 0){
			$this->db->query("UPDATE `" . DB_PREFIX . "purpletree_vendor_products_return` SET status = 1, modified_date = NOW() WHERE return_id = '" . (int)$return_id . "'");
			
			 $query1 = $this->db->query("SELECT  seller_id FROM `" . DB_PREFIX . "purpletree_vendor_products_return` WHERE return_id = '" . (int)$return_id . "'");
			if($query1->num_rows) {
				$seller_id_returnn = $query1->row['seller_id'];
			} 
			
			if($seller_id_returnn != '') {
				// vendor_order_total
				$query3 = $this->db->query("SELECT total_price FROM `" . DB_PREFIX . "purpletree_vendor_orders` WHERE order_id = '" . (int)$data['order_id'] . "' AND seller_id = '".(int)$seller_id_returnn."' AND product_id = '" . (int)$data['product_id'] . "'");
				if($query3->num_rows) {
				$product_price = -($query3->row['total_price']);
			    }
				$product_id = (int)$data['product_id'];
				$query2 = $this->db->query("SELECT order_total_id FROM `" . DB_PREFIX . "purpletree_order_total` WHERE order_id = '" . (int)$data['order_id'] . "' AND seller_id = '".(int)$seller_id_returnn."' AND code ='refunded_".$product_id."' ");
					
				if($query2->num_rows){
					$order_total = $query2->row['order_total_id'];
					
					$this->db->query("UPDATE `" . DB_PREFIX . "purpletree_order_total` SET order_id = '" . (int)$data['order_id'] . "', seller_id = '" . (int)$seller_id_returnn . "', code = 'refunded_".$product_id."', title  = 'Refunded', value = '" . (float)$product_price . "', sort_order = 8 WHERE order_total_id='".(int)$order_total ."'");
				} else {
					$this->db->query("INSERT INTO `" . DB_PREFIX . "purpletree_order_total` SET order_id = '" . (int)$data['order_id'] . "', seller_id = '" . (int)$seller_id_returnn . "', code = 'refunded_".$product_id."', title  = 'Refunded', value = '" . (float)$product_price . "', sort_order = 8");
				}
				  
					// order_total
					$query4 = $this->db->query("SELECT *  FROM `" . DB_PREFIX . "order_total` WHERE `order_id` = '" . (int)$data['order_id'] . "' AND `code` LIKE '%refunded%' ORDER BY `order_total_id`  DESC");				    
					if($query4->num_rows){
						$order_total_id = $query4->row['order_total_id'];
						$ids = explode('_',$query4->row['code']);
						
						$seller_idd = $ids[1];
						$product_id = $ids[2];
						
						$id_code = array();
						
						$id_code = array(
						'0' => 'refunded',
						'1' => $seller_id_returnn,
						'2' => $data['product_id']						
						);
						
						$id_codes = implode('_',$id_code);
                
						if($seller_id_returnn == $seller_idd && $product_id == $data['product_id']) { 
						  $this->db->query("UPDATE `" . DB_PREFIX . "order_total` SET order_id = '" . (int)$data['order_id'] . "', code = '" . (int)$ids . "', title  = 'Refunded', value = '" . (float)$product_price . "', sort_order = 8 WHERE order_total_id='".(int)$order_total ."'");
						} else {
							$this->db->query("INSERT INTO `" . DB_PREFIX . "order_total` SET order_id = '" . (int)$data['order_id'] . "', code = '" . $this->db->escape($id_codes). "', title  = 'Refunded', value = '" . (float)$product_price . "', sort_order = 8");
							
						}
					} else {
						$id_code = array();
						$id_code = array(
							'0' => 'refunded',
							'1' => $seller_id_returnn,
							'2' => $data['product_id']						
						);
						$id_codes = implode('_',$id_code);
						$this->db->query("INSERT INTO `" . DB_PREFIX . "order_total` SET order_id = '" . (int)$data['order_id'] . "', code = '" . $this->db->escape($id_codes). "', title  = 'Refunded', value = '" . (float)$product_price . "', sort_order = 8");
					}
					// order_total
			}
		 }
		}
		
		///Calculate refund total
		$seller_id_return = '';
		$proudct_return_status = '';
		$query1 = $this->db->query("SELECT  seller_id FROM `" . DB_PREFIX . "purpletree_vendor_products_return` WHERE return_id = '" . (int)$return_id . "'");
			if($query1->num_rows) {
				$seller_id_return = $query1->row['seller_id'];
			}
		$query5 = $this->db->query("SELECT status FROM `" . DB_PREFIX . "purpletree_vendor_products_return` WHERE return_id = '" . (int)$return_id . "'");
				  if($query5->num_rows){
					$proudct_return_status = $query5->row['status'];
				  }
				 
				 
		if(isset($proudct_return_status) && $proudct_return_status == 1){			
			// For vendor total 
			$total_after_refund = "";
			$order_total_sid = "";
			$total_refund = "";
			$total_value = "";
			$total_refundd = "";
			$id_codes = "";
			$order_total_id = "";
			$product_id = (int)$data['product_id'];
			$id_code = array();
						$id_code = array(
							'0' => 'refunded',
							'1' => $seller_id_return,
							'2' => $data['product_id']						
						);
			$id_codes = implode('_',$id_code);
			$query6 = $this->db->query("SELECT order_total_id, value FROM `" . DB_PREFIX . "purpletree_order_total` WHERE order_id = '" . (int)$data['order_id'] . "' AND seller_id = '".(int)$seller_id_return."' AND code ='refunded_".$product_id."' ");
					
				if($query6->num_rows){
					$order_total_sid = $query6->row['order_total_id'];
					$total_refund = $query6->row['value'];
				}
				
				$query7 = $this->db->query("SELECT order_total_id, value FROM `" . DB_PREFIX . "purpletree_order_total` WHERE order_id = '" . (int)$data['order_id'] . "' AND seller_id = '".(int)$seller_id_return."' AND code ='total' ");
					
				if($query7->num_rows){
					$order_total_id = $query7->row['order_total_id'];
					$total_value = $query7->row['value'];
				}
						
			    $total_after_refund = $total_value + $total_refund;	
			 
				$this->db->query("UPDATE `" . DB_PREFIX . "purpletree_order_total` SET value = '" . (float)$total_after_refund . "' WHERE order_total_id='". (int)$order_total_id ."'");
				
				$this->db->query("UPDATE `" . DB_PREFIX . "purpletree_vendor_orders` SET  	total_price  = '" . (int)$total_after_refund . "' WHERE order_id = '" . (int)$data['order_id'] . "' AND seller_id = '".(int)$seller_id_return."' AND product_id = '" . (int)$data['product_id'] . "'");
				
				
		    // For admin total
			$query8 = $this->db->query("SELECT order_total_id, value FROM `" . DB_PREFIX . "order_total` WHERE order_id = '" . (int)$data['order_id'] . "'  AND code ='" . $this->db->escape($id_codes) . "'");
					
				if($query8->num_rows){
					$order_total_sidd = $query8->row['order_total_id'];
					$total_refundd = $query8->row['value'];
				}
				$query9 = $this->db->query("SELECT order_total_id, value FROM `" . DB_PREFIX . "order_total` WHERE order_id = '" . (int)$data['order_id'] . "' AND code ='total' ");
					
				if($query9->num_rows){
					$order_total_idd = $query9->row['order_total_id'];
					$total_valuee = $query9->row['value'];
				}
	
				$total_after_refundd = $total_valuee + $total_refundd;				
				
				$this->db->query("UPDATE `" . DB_PREFIX . "order_total` SET value = '" . (float)$total_after_refundd . "' WHERE order_total_id='". (int)$order_total_idd ."'");	
                			
			    $this->db->query("UPDATE `" . DB_PREFIX . "purpletree_vendor_products_return` SET status = 2, modified_date = NOW() WHERE return_id = '" . (int)$return_id . "'");
		}
		}]]></add>
		</operation>
	</file>	
<file path="catalog/model/extension/total/coupon.php">
	
	<operation error="skip">
		<search><![CDATA[OR date_start < NOW()) AND (date_end = '0000-00-00' OR date_end > NOW())) AND status = '1'");]]></search>
		<add position="after"><![CDATA[
	$seller_coupon = $this->db->query("SELECT pvc.seller_id,co.code,co.* FROM `" . DB_PREFIX . "coupon` co Inner JOIN `" . DB_PREFIX . "purpletree_vendor_coupons` pvc ON (co.coupon_id = pvc.coupon_id) WHERE code = '" . $this->db->escape($code) . "' AND ((date_start = '0000-00-00' OR date_start < NOW()) AND (date_end = '0000-00-00' OR date_end > NOW())) AND status = '1' AND pvc.seller_id != '0'");
	if ($seller_coupon->num_rows>0) {
		$seller_id = $seller_coupon->row['seller_id'];
		$seller_coupon1 = $seller_coupon->row['code'];
	}else{
		$seller_id = 0;
		$seller_coupon1 = '';
	}			
		]]></add>
	</operation>			
	<operation error="skip">
		<search><![CDATA[if ($coupon_query->row['total'] > $this->cart->getSubTotal()) {]]></search>
		<add position="before"><![CDATA[
			if(!empty($seller_coupon1) && $seller_id != -1){
				if ($coupon_query->row['total'] > $this->cart->getSellerSubTotal($seller_id)) {
					$status = false;
				}	
		]]></add>
	</operation>		
	<operation error="skip">
		<search><![CDATA[if ($coupon_query->row['total'] > $this->cart->getSubTotal()) {]]></search>
		<add position="after" offset="2"><![CDATA[
		}else{
		if ($coupon_query->row['total'] > $this->cart->getSubTotal()) {
				$status = false;
			}
		}
	if(!empty($seller_coupon1) && $seller_id != -1){
		$seller_coupon_total = $this->getSellerTotalCouponHistoriesByCoupon($code);
			if ($coupon_query->row['uses_total'] > 0 && ($seller_coupon_total >= $coupon_query->row['uses_total'])) {
				 
			$status = false;
		}
	}  else { 
		]]></add>
	</operation>		
	<operation error="skip">
		<search><![CDATA[if ($coupon_query->row['logged'] && !$this->customer->getId()) {]]></search>
		<add position="before"><![CDATA[
		}
		]]></add>
	</operation>		
	<operation error="skip">
		<search><![CDATA[if ($coupon_product_data || $coupon_category_data) {]]></search>
		<add position="replace"><![CDATA[
		if ($coupon_product_data || $coupon_category_data || (!empty($seller_coupon1) && $seller_id != -1)) {
				if(!empty($seller_coupon1) && $seller_id != -1){
		$continueee = false;
		foreach ($this->cart->getsellerProducts($seller_id) as $product) {
			if (in_array($product['product_id'], $coupon_product_data)) {
					$product_data[] = $product['product_id'];
					$continueee = true;
					continue;
				}elseif(empty($coupon_product_data)&& ($product['product_id'] > 0)){
				 $continueee = true;
				}
				foreach ($coupon_category_data as $category_id) {
					$coupon_category_query = $this->db->query("SELECT COUNT(*) AS total FROM `" . DB_PREFIX . "product_to_category` WHERE `product_id` = '" . (int)$product['product_id'] . "' AND category_id = '" . (int)$category_id . "'");

					if ($coupon_category_query->row['total']) {
						$product_data[] = $product['product_id'];
						$continueee = true;
						continue;
					}
				}
				if(!$continueee) {
					$status = false;
				}
		}
	} else { 
		]]></add>
	</operation>	
	<operation error="skip">
		<search><![CDATA[if (!$product_data) {]]></search>
		<add position="before"><![CDATA[
				}
		]]></add>
	</operation>
	<operation error="skip">
		<search><![CDATA[if (!$product_data) {]]></search>
		<add position="replace"><![CDATA[
				if (!$product_data && ($continueee != 1)) {
		]]></add>
	</operation>
	<operation error="skip">
		<search><![CDATA[if (isset($this->session->data['coupon'])) {]]></search>
		<add position="after"><![CDATA[
		$seller_idby_coupon = $this->db->query("SELECT pvc.seller_id,co.* FROM `" . DB_PREFIX . "coupon` co Inner JOIN `" . DB_PREFIX . "purpletree_vendor_coupons` pvc ON (co.coupon_id = pvc.coupon_id) WHERE code = '" . $this->db->escape($this->session->data['coupon']) . "' AND ((date_start = '0000-00-00' OR date_start < NOW()) AND (date_end = '0000-00-00' OR date_end > NOW())) AND status = '1' AND pvc.seller_id >= '1'");
		if($seller_idby_coupon->num_rows){
			$seller_id =  $seller_idby_coupon->row['seller_id'];
		}else{
			$seller_id = 0;
		}
		]]></add>
	</operation>
	<operation error="skip">
		<search><![CDATA[$sub_total = $this->cart->getSubTotal();]]></search>
		<add position="before"><![CDATA[
		if ($seller_id!= 0 && $seller_id != -1) {
			$sub_total = $this->cart->getSellerSubTotal($seller_id);
		}else{
		]]></add>
	</operation>
	<operation error="skip">
		<search><![CDATA[$sub_total = $this->cart->getSubTotal();]]></search>
		<add position="after"><![CDATA[
		}
		]]></add>
	</operation>
	<operation error="skip">
		<search><![CDATA[$sub_total = 0;]]></search>
		<add position="after"><![CDATA[
				if ($seller_id != 0 && $seller_id != -1) {
					foreach ($this->cart->getSellerProducts($seller_id) as $product) {
						if (in_array($product['product_id'], $coupon_info['product'])) {
							$sub_total += $product['total'];
						}
					}
				}else{
		]]></add>
	</operation>		
	<operation error="skip">
		<search><![CDATA[$coupon_info['discount'] = min($coupon_info['discount'], $sub_total);]]></search>
		<add position="before" offset="1"><![CDATA[
			}
		]]></add>
	</operation>
	<operation error="skip">
		<search><![CDATA[$discount = 0;]]></search>
		<add position="before" offset="1"><![CDATA[
			  if ($seller_id != 0 && $seller_id != -1) {
			   foreach ($this->cart->getSellerProducts($seller_id) as $product) {
			   $discount = 0;

					if (!$coupon_info['product']) {
						$status = true;
					} else {
						$status = in_array($product['product_id'], $coupon_info['product']);
					}

					if ($status) {
						if ($coupon_info['type'] == 'F') {
							$discount = $coupon_info['discount'] * ($product['total'] / $sub_total);
						} elseif ($coupon_info['type'] == 'P') {
							$discount = $product['total'] / 100 * $coupon_info['discount'];
						}

						if ($product['tax_class_id']) {
							$tax_rates = $this->tax->getRates($product['total'] - ($product['total'] - $discount), $product['tax_class_id']);

							foreach ($tax_rates as $tax_rate) {
								if ($tax_rate['type'] == 'P') {
									$total['taxes'][$tax_rate['tax_rate_id']] -= $tax_rate['amount'];
								}
							}
						}
					}

					$discount_total += $discount;
				   } } else{
		]]></add>
	</operation>	
	<operation error="skip">
		<search><![CDATA[if ($coupon_info['shipping'] && isset($this->session->data['shipping_method'])) {]]></search>
		<add position="before" offset="1"><![CDATA[
			}
		]]></add>
	</operation>	
	<operation error="skip">
		<search><![CDATA[public function getTotalCouponHistoriesByCustomerId($coupon, $customer_id) {]]></search>
		<add position="before"><![CDATA[
				public function getSellerTotalCouponHistoriesByCoupon($coupon) {
		$query = $this->db->query("SELECT COUNT(*) AS total FROM `" . DB_PREFIX . "coupon_history` ch LEFT JOIN `" . DB_PREFIX . "coupon` c ON (ch.coupon_id = c.coupon_id) LEFT JOIN `" . DB_PREFIX . "purpletree_vendor_coupons` pot ON (pot.coupon_id = ch.coupon_id) WHERE c.code = '" . $this->db->escape($coupon) . "'");	
		
		return $query->row['total'];
	}
			public function getsellercounponTotal($product_idd) {
		if (isset($this->session->data['coupon'])) {

		$seller_idby_coupon = $this->db->query("SELECT pvc.seller_id,co.* FROM `" . DB_PREFIX . "coupon` co Inner JOIN `" . DB_PREFIX . "purpletree_vendor_coupons` pvc ON (co.coupon_id = pvc.coupon_id) WHERE code = '" . $this->db->escape($this->session->data['coupon']) . "' AND ((date_start = '0000-00-00' OR date_start < NOW()) AND (date_end = '0000-00-00' OR date_end > NOW())) AND status = '1' AND pvc.seller_id >= '1'");
		if($seller_idby_coupon->num_rows){
			$seller_id =  $seller_idby_coupon->row['seller_id'];
		}else{
			$seller_id = 0;
		}
		
			$this->load->language('extension/total/coupon', 'coupon');

			$coupon_info = $this->getCoupon($this->session->data['coupon']);

			if ($coupon_info) {
				$discount_total = 0;

				if (!$coupon_info['product']) {

		if ($seller_id!= 0 && $seller_id != -1) {
			$sub_total = $this->cart->getSellerSubTotal($seller_id);
		}else{
		
					$sub_total = $this->cart->getSubTotal();

		}
		
				} else {
					$sub_total = 0;

				if ($seller_id != 0 && $seller_id != -1) {
					foreach ($this->cart->getSellerProducts($seller_id) as $product) {
						if($product_idd == $product['product_id']) {
							if (in_array($product['product_id'], $coupon_info['product'])) {
								$sub_total += $product['total'];
							}
						}
					}
				}else{
		

					foreach ($this->cart->getProducts() as $product) {
						if($product_idd == $product['product_id']) {
							if (in_array($product['product_id'], $coupon_info['product'])) {
								$sub_total += $product['total'];
							}
						}
					}
				}


			}
		
				if ($coupon_info['type'] == 'F') {
					$coupon_info['discount'] = min($coupon_info['discount'], $sub_total);
				}


			  if ($seller_id != 0 && $seller_id != -1) {
			   foreach ($this->cart->getSellerProducts($seller_id) as $product) {
				   if($product_idd == $product['product_id']) {
			   $discount = 0;

					if (!$coupon_info['product']) {
						$status = true;
					} else {
						$status = in_array($product['product_id'], $coupon_info['product']);
					}

					if ($status) {
						if ($coupon_info['type'] == 'F') {
							$discount = $coupon_info['discount'] * ($product['total'] / $sub_total);
						} elseif ($coupon_info['type'] == 'P') {
							$discount = $product['total'] / 100 * $coupon_info['discount'];
						}

						if ($product['tax_class_id']) {
							$tax_rates = $this->tax->getRates($product['total'] - ($product['total'] - $discount), $product['tax_class_id']);

							foreach ($tax_rates as $tax_rate) {
								if ($tax_rate['type'] == 'P') {
									//$total['taxes'][$tax_rate['tax_rate_id']] -= $tax_rate['amount'];
								}
							}
						}
					}

					$discount_total += $discount;
				   }
			  }
				   } else{
		
				foreach ($this->cart->getProducts() as $product) {
					if($product_idd == $product['product_id']) {
					$discount = 0;

					if (!$coupon_info['product']) {
						$status = true;
					} else {
						$status = in_array($product['product_id'], $coupon_info['product']);
					}

					if ($status) {
						if ($coupon_info['type'] == 'F') {
							$discount = $coupon_info['discount'] * ($product['total'] / $sub_total);
						} elseif ($coupon_info['type'] == 'P') {
							$discount = $product['total'] / 100 * $coupon_info['discount'];
						}

						if ($product['tax_class_id']) {
							$tax_rates = $this->tax->getRates($product['total'] - ($product['total'] - $discount), $product['tax_class_id']);

							foreach ($tax_rates as $tax_rate) {
								if ($tax_rate['type'] == 'P') {
									//$total['taxes'][$tax_rate['tax_rate_id']] -= $tax_rate['amount'];
								}
							}
						}
					}

					$discount_total += $discount;
				}
				}

			}
		

				if ($coupon_info['shipping'] && isset($this->session->data['shipping_method'])) {
					if (!empty($this->session->data['shipping_method']['tax_class_id'])) {
						$tax_rates = $this->tax->getRates($this->session->data['shipping_method']['cost'], $this->session->data['shipping_method']['tax_class_id']);

						foreach ($tax_rates as $tax_rate) {
							if ($tax_rate['type'] == 'P') {
								//$total['taxes'][$tax_rate['tax_rate_id']] -= $tax_rate['amount'];
							}
						}
					}

					$discount_total += $this->session->data['shipping_method']['cost'];
				}

				// If discount greater than total
				//if ($discount_total > $total['total']) {
					//$discount_total = $total['total'];
				//}

				if ($discount_total > 0) {
					return $discount_total;
				}
			}
		}
	}
		]]></add>
	</operation>
</file>
<file path="admin/view/template/marketing/coupon_form.twig">
	<operation error="skip">
				<search><![CDATA[<a href="{{ cancel }}" data-toggle="tooltip" title="{{ button_cancel }}" class="btn btn-default"><i class="fa fa-reply"></i></a></div>]]></search>
				<add position="replace"><![CDATA[
				<a href="{{ cancel }}" data-toggle="tooltip" title="{{ button_cancel }}" class="btn btn-default"><i class="fa fa-reply"></i></a>
				{% if module_purpletree_multivendor_status %}
				 {% if helpcheck %}
				<a href="{{ helplink }}" target="_blank" id="button-pts-help" class="btn"><img src="{{ helpimage }}" alt="Help" width="85" height="43"></a>
				
		{% endif %}
		{% endif %}
		</div>
				]]></add>					
			</operation>
	   <operation error="skip">
			<search><![CDATA[<div class="tab-pane active" id="tab-general">]]></search>
			<add position="after"><![CDATA[
									  <div class="form-group">
                <label class="col-sm-2 control-label" for="input-name">{{ 'Store Name' }}</label>
                <div class="col-sm-10">
					<select name="seller_id" id="input-filter_name" class="form-control">
						{% for seller_store in seller_stores %}
						{% if seller_store.vendor_id == seller_id %}
						<option value="{{ seller_store.vendor_id }}" selected="selected">{{ seller_store.name }}</option>
						{% else %}
						<option value="{{ seller_store.vendor_id }}">{{ seller_store.name }}</option>
						{% endif %}
						{% endfor %}
					</select>
              </div>
              </div>
			]]></add>
		</operation>	 
	</file>
		<file path="admin/view/template/marketing/coupon_list.twig">
	   <operation error="skip">
				<search><![CDATA[<button type="button" data-toggle="tooltip" title="{{ button_delete }}" class="btn btn-danger" onclick="confirm('{{ text_confirm }}') ? $('#form-coupon').submit() : false;"><i class="fa fa-trash-o"></i></button>]]></search>
				<add position="after"><![CDATA[
				{% if module_purpletree_multivendor_status %}
				 {% if helpcheck %}
				<a href="{{ helplink }}" target="_blank" id="button-pts-help" class="btn"><img src="{{ helpimage }}" alt="Help" width="85" height="43"></a>
				
		{% endif %}
		{% endif %}
				]]></add>					
			</operation>	
	   <operation error="skip">
			<search><![CDATA[<td class="text-left">{{ coupon.name }}</td>]]></search>
			<add position="before"><![CDATA[
<td class="text-left">{{ coupon.seller_name }}</td>
			]]></add>
		</operation>		   
		<operation error="skip">
			<search><![CDATA[<td class="text-left">{% if sort == 'name' %}]]></search>
			<add position="before"><![CDATA[
				    <td class="text-left">{% if sort == 'name' %}
                    <a href="{{ sort_name }}" class="{{ order|lower }}">{{ 'Store Name' }}</a>
                    {% else %}
                    <a href="{{ sort_name }}">{{ 'Store Name' }}</a>
                    {% endif %}</td>
			]]></add>
		</operation>	 	  
	</file>
		<file path="admin/controller/marketing/coupon.php">
	   <operation error="skip">
			<search><![CDATA[$data['breadcrumbs'] = array();]]></search>
			<add position="before"><![CDATA[			
			///Help code///	
			$data['module_purpletree_multivendor_status'] = $this->config->get('module_purpletree_multivendor_status');
			if($this->config->get('module_purpletree_multivendor_status')){			
			$data['helplink'] = "https://www.purpletreesoftware.com/knowledgebase/tag/opencart-multivendor-coupons";
			if (defined ('DISABLED_PTS_HELP')){if(DISABLED_PTS_HELP == 0){$data['helpcheck'] = 1;}else{$data['helpcheck'] = 0;}}else{$data['helpcheck'] = 1;}
			if ($this->request->server['HTTPS']) {
				$data['helpimage'] = HTTPS_SERVER . 'view/image/help.png';
			 } else {
				$data['helpimage'] = HTTP_SERVER . 'view/image/help.png';
			}
			}
			/// End Help code///
			]]></add>
		</operation>		
	   <operation error="skip">
			<search><![CDATA[$data['coupons'][] = array(]]></search>
			<add position="before"><![CDATA[			
			if(isset($result['seller_id'])){
				$store_name = $result['store_name'];
				$seller_id = $result['seller_id'];
				if($seller_id == -1){
						$store_name = $this->language->get('text_all');
					}
			}else{
				$store_name = '';
				$seller_id = '';
			}
			]]></add>
		</operation>	  
		<operation error="skip">
			<search><![CDATA[$data['coupons'][] = array(]]></search>
			<add position="after"><![CDATA[
				'seller_name'  => $store_name,
				'seller_id'  => $seller_id,
			]]></add>
		</operation>		
		<operation error="skip">
			<search><![CDATA[if (isset($this->request->post['name'])) {]]></search>
			<add position="before"><![CDATA[
						if (isset($this->request->post['seller_name'])) {
			$data['seller_name'] = $this->request->post['seller_name'];
		} elseif (!empty($coupon_info)) {
			$data['seller_name'] = $coupon_info['store_name'];
		} else {
			$data['seller_name'] = '';
		}	
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[public function index() {]]></search>
			<add position="after"><![CDATA[
			$this->load->language('purpletree_multivendor/shipping');
			$this->load->language('purpletree_multivendor/stores');
			]]></add>
		</operation>		
		<operation error="skip">
			<search><![CDATA[if (isset($this->request->post['name'])) {]]></search>
			<add position="before"><![CDATA[
			$this->load->language('purpletree_multivendor/shipping');
			$this->load->language('purpletree_multivendor/stores');
			$this->load->language('marketing/coupon');
			$filter_data1 = array();			
			$text_n_a = $this->language->get('text_n_a');
			$text_all = $this->language->get('text_all');
			///Help code///	
			$data['helplink'] = "https://www.purpletreesoftware.com/knowledgebase/tag/opencart-multivendor-coupons";
			if (defined ('DISABLED_PTS_HELP')){if(DISABLED_PTS_HELP == 0){$data['helpcheck'] = 1;}else{$data['helpcheck'] = 0;}}else{$data['helpcheck'] = 1;}
			if ($this->request->server['HTTPS']) {
				$data['helpimage'] = HTTPS_SERVER . 'view/image/help.png';
			 } else {
				$data['helpimage'] = HTTP_SERVER . 'view/image/help.png';
			}
			/// End Help code///
			$data['seller_stores'] = array();
			$seller_store1[] = array(
			'vendor_id'       => -1,
			'name'              => $text_all,
			);
			$seller_store2[] = array(
			'vendor_id'       => 0,
			'name'              => $text_n_a
			);
			$data['seller_stores'] = array_merge($seller_store1,$seller_store2);
			$this->load->model('extension/purpletree_multivendor/shipping');
			$results_seller_store = $this->model_extension_purpletree_multivendor_shipping->getSellers($filter_data1);
			foreach ($results_seller_store as $result_seller_store) {
				$data['seller_stores'][] = array(
				'vendor_id'       => $result_seller_store['seller_id'],
				'name'              => strip_tags(html_entity_decode($result_seller_store['name'], ENT_QUOTES, 'UTF-8'))
				);
			}
						if (isset($this->request->post['seller_id'])) {
			$data['seller_id'] = $this->request->post['seller_id'];
		} elseif (!empty($coupon_info)) {
			$data['seller_id'] = $coupon_info['seller_id'];
			if($data['seller_id'] == -1){
						$data['seller_name'] =$text_all;
					}
		} else {
			$data['seller_id'] = '';
		}	
			]]></add>
		</operation>
	</file>
		<file path="admin/model/marketing/coupon.php">
	   <operation error="skip">
			<search><![CDATA[$this->db->query("DELETE FROM " . DB_PREFIX . "coupon_history WHERE coupon_id = '" . (int)$coupon_id . "'");]]></search>
			<add position="after"><![CDATA[
$this->db->query("DELETE FROM " . DB_PREFIX . "purpletree_vendor_coupons WHERE coupon_id = '" . (int)$coupon_id . "'");
			]]></add>
		</operation>	   
		<operation error="skip">
			<search><![CDATA[$coupon_id = $this->db->getLastId();]]></search>
			<add position="after"><![CDATA[
		if($this->config->get('module_purpletree_multivendor_status')) {
			$this->db->query("INSERT INTO " . DB_PREFIX . "purpletree_vendor_coupons SET coupon_id = '" . $coupon_id . "', seller_id = '".$data['seller_id']."'");
		}
			]]></add>
		</operation>	  
		<operation error="skip">
			<search><![CDATA[status = '" . (int)$data['status'] . "' WHERE coupon_id = '" . (int)$coupon_id . "'");]]></search>
			<add position="after"><![CDATA[
		$query = $this->db->query("SELECT coupon_id FROM " . DB_PREFIX . "purpletree_vendor_coupons  WHERE  coupon_id = " . (int)$coupon_id . "");
		if($query->num_rows > 0){
			$this->db->query("UPDATE " . DB_PREFIX . "purpletree_vendor_coupons SET seller_id = '" . $data['seller_id'] . "' WHERE coupon_id = '" . (int)$coupon_id . "'");	
		}else{ 
			$this->db->query("INSERT INTO " . DB_PREFIX . "purpletree_vendor_coupons SET seller_id = '" . $this->db->escape($data['seller_id']) . "' , coupon_id = '" . (int)$coupon_id . "'");
		}	
			]]></add>
		</operation>		
		<operation error="skip">
			<search><![CDATA[$query = $this->db->query("SELECT DISTINCT * FROM " . DB_PREFIX . "coupon WHERE coupon_id = '" . (int)$coupon_id . "'");]]></search>
			<add position="replace"><![CDATA[
		if($this->config->get('module_purpletree_multivendor_status')){			
			$query = $this->db->query("SELECT c.*, pvs.store_name, pvc.seller_id FROM " . DB_PREFIX . "coupon c LEFT JOIN " . DB_PREFIX . "purpletree_vendor_coupons pvc ON(c.coupon_id=pvc.coupon_id) LEFT JOIN " . DB_PREFIX . "purpletree_vendor_stores pvs ON(pvs.seller_id=pvc.seller_id) WHERE c.coupon_id = '" . (int)$coupon_id . "'");
		}else{
			$query = $this->db->query("SELECT DISTINCT * FROM " . DB_PREFIX . "coupon WHERE coupon_id = '" . (int)$coupon_id . "'");
		}
			]]></add>
		</operation>		
		<operation error="skip">
			<search><![CDATA[$sql = "SELECT coupon_id, name, code, discount, date_start, date_end, status FROM " . DB_PREFIX . "coupon";]]></search>
			<add position="replace"><![CDATA[
		if ($this->config->get('module_purpletree_multivendor_status')) {
			$sql = "SELECT pvs.store_name as store_name,pvc.seller_id,c.coupon_id, c.name, c.code, c.discount, c.date_start, c.date_end, c.status FROM " . DB_PREFIX . "coupon c LEFT JOIN " . DB_PREFIX . "purpletree_vendor_coupons pvc ON(c.coupon_id=pvc.coupon_id) LEFT JOIN " . DB_PREFIX . "purpletree_vendor_stores pvs ON(pvs.seller_id=pvc.seller_id)";
		}else{	
			$sql = "SELECT coupon_id, name, code, discount, date_start, date_end, status FROM " . DB_PREFIX . "coupon";
		}
			]]></add>
		</operation>	  
	</file>
	<file path="catalog/view/theme/*/template/mail/order_add.twig">
       <operation error="skip">
			<search><![CDATA[&nbsp;<small> - {{ option.name }}: {{ option.value }}</small>{% endfor %}</td>]]></search>
			<add position="replace"><![CDATA[
			&nbsp;<small> - {{ option.name }}: {{ option.value }}</small>{% endfor %}
			 <br />
		 {% if product.seller_store_name %}
				<small>{{ text_seller_label }} :{{ product.seller_store_name }}</small>
         {% endif %}
		 </td>
			]]></add>
		</operation>	
	</file>
	<file path="catalog/controller/extension/soconfig/cart.php">
	<operation error="skip">
			<search><![CDATA[$product_info = $this->model_catalog_product->getProduct($product_id);]]></search>
			<add position="before"><![CDATA[
				if($this->config->get('module_purpletree_multivendor_seller_product_template')){
			$template_product = $this->cart->getTemplate($product_id);
		if ($template_product == 1) {
				 if (!isset($seller_id)) {
					$json['error']['template'] = $this->language->get('error_recurring_required');
				 }
				}
       }				]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[if (isset($this->request->post['product_id'])) {]]></search>
			<add position="before"><![CDATA[ if(isset($this->request->get['seller_id'])) {
			$seller_id = (int)$this->request->get['seller_id'];
		}]]></add>
		</operation>
	</file>
	<file path="catalog/view/theme/*/template/mail/order_alert.twig">
       <operation error="skip">
			<search><![CDATA[- {{ option.name }} {{ option.value }}]]></search>
			<add position="after" offset="2"><![CDATA[
			 {% if product.seller_store_name and not product.seller %}
     {{ text_seller_label }} :{{ product.seller_store_name }}
   {% endif %}
			]]></add>
		</operation>	
	</file>
		<file path="admin/model/localisation/geo_zone.php">
       <operation error="skip">
			<search><![CDATA[public function deleteGeoZone($geo_zone_id) {]]></search>
			<add position="after"><![CDATA[
				$this->db->query("DELETE FROM " . DB_PREFIX . "purpletree_vendor_geozone WHERE geo_zone_id = '" . (int)$geo_zone_id . "'");
			]]></add>
		</operation>	
	</file>
	<file path="admin/view/template/catalog/information_form.twig">
			<operation error="skip">
			<search><![CDATA[<script type="text/javascript" src="view/javascript/summernote/summernote.js"></script>]]></search>
			<add position="replace"><![CDATA[
			  {% if module_purpletree_multivendor_status %}
    {% if journal3 %}
			<script type="text/javascript" src="view/javascript/summernote/summernote.js"></script>
		   {% else %}
		   <script type="text/javascript" src="view/javascript/purpletreejs/summernote.js"></script>
		  {% endif %}
  {% else %}
	<script type="text/javascript" src="view/javascript/summernote/summernote.js"></script>
  {% endif %}
			]]></add>
		</operation>
	</file>		
	<file path="admin/controller/catalog/information.php">
			<operation error="skip">
			<search><![CDATA[if (!isset($this->request->get['information_id'])) {]]></search>
			<add position="before"><![CDATA[
			 $data['module_purpletree_multivendor_status'] = $this->config->get('module_purpletree_multivendor_status');
			 if ($this->config->get('config_theme') == 'journal3') {
					$data['journal3'] = 1;
				}  else {
					$data['journal3'] = '';
				}
			]]></add>
		</operation>
	</file>	
	<file path="admin/view/template/catalog/category_form.twig">
			<operation error="skip">
			<search><![CDATA[<script type="text/javascript" src="view/javascript/summernote/summernote.js"></script>]]></search>
			<add position="replace"><![CDATA[
			  {% if module_purpletree_multivendor_status %}
    {% if journal3 %}
			<script type="text/javascript" src="view/javascript/summernote/summernote.js"></script>
		   {% else %}
		   <script type="text/javascript" src="view/javascript/purpletreejs/summernote.js"></script>
		  {% endif %}
  {% else %}
	<script type="text/javascript" src="view/javascript/summernote/summernote.js"></script>
  {% endif %}
			]]></add>
		</operation>
	</file>	
	<file path="admin/view/template/extension/module/html.twig">
			<operation error="skip">
			<search><![CDATA[<script type="text/javascript" src="view/javascript/summernote/summernote.js"></script>]]></search>
			<add position="replace"><![CDATA[
			  {% if module_purpletree_multivendor_status %}
    <script type="text/javascript" src="view/javascript/purpletreejs/summernote.js"></script>
  {% else %}
	<script type="text/javascript" src="view/javascript/summernote/summernote.js"></script>
  {% endif %}
			]]></add>
		</operation>
	</file>	
	<file path="admin/controller/extension/module/html.php">
			<operation error="skip">
			<search><![CDATA[$data['header'] = $this->load->controller('common/header');]]></search>
			<add position="before"><![CDATA[
			$data['module_purpletree_multivendor_status'] = $this->config->get('module_purpletree_multivendor_status');
			]]></add>
		</operation>
	</file>	
	<file path="admin/controller/catalog/category.php">
		<operation error="skip">
			<search><![CDATA[$data['cancel'] = $this->url->link('catalog/category', 'user_token=' . $this->session->data['user_token'] . $url, true);]]></search>
			<add position="before"><![CDATA[
				$data['module_purpletree_multivendor_status'] = $this->config->get('module_purpletree_multivendor_status'); 
				if ($this->config->get('config_theme') == 'journal3') {
					$data['journal3'] = 1;
				}  else {
					$data['journal3'] = '';
				}
			]]></add>
		</operation>
	</file>
	
	<file path="catalog/view/theme/*/template/product/category.twig">
		<operation error="skip">
			<search><![CDATA[{% if products %}]]></search>
			<add position="before"><![CDATA[
{% if selleron_category %}
      <div class="pts-row">
        <div style="display: none" class="pts-col-md-2 pts-col-sm-6 hidden-xs">
          <div class="pts-btn-group pts-btn-group-sm">
            <button type="button" id="list-view" class="pts-btn btn-default" data-toggle="tooltip" title="{{ button_list }}"><i class="fa fa-th-list"></i></button>
            <button type="button" id="grid-view" class="pts-btn btn-default" data-toggle="tooltip" title="{{ button_grid }}"><i class="fa fa-th"></i></button>
          </div>
        </div>
        <div style="display: none" class="pts-col-md-3 pts-col-sm-6">
          <div class="pts-form-group"><a href="{{ compare }}" id="compare-total" class="pts-btn btn-link">{{ text_compare }}</a></div>
        </div>
        <div class="pts-col-md-4 pts-col-xs-6 pts-pull-right">
          <div class="pts-form-group pts-input-group pts-input-group-sm">
            <label class="pts-input-group-addon" for="input-limit">{{ text_limit }}</label>
            <select id="input-limit" class="pts-form-control" onchange="location = this.value;">
              {% for limits in limits %}
              {% if limits.value == limit %}
              <option value="{{ limits.href }}" selected="selected">{{ limits.text }}</option>
              {% else %}
              <option value="{{ limits.href }}">{{ limits.text }}</option>
              {% endif %}
              {% endfor %}
            </select>
          </div>
        </div>
      </div>   
		<div class="pts-row row">
			{% for product in store_categories %}
				{% if product.subscription_status %}
					<div class="product-layout product-list col-xs-12">
						<div class="product-thumb">
							<div class="image"><a href="{{ product.href }}"><img src="{{ product.thumb }}" alt="{{ product.name }}" title="{{ product.name }}" class="img-responsive" /></a></div>	
							<div>
								<div class="caption">
									<h4><a href="{{ product.href }}">{{ product.store_name }}</a></h4>
									<p>{{ product.store_address }}</p>
									<p>{{ product.description }}</p>
									<p class="price"> 
										<a href="{{ product.seller_id }}">{{ text_seller_contact }}</a>
									</p>
								</div>
							</div>
						</div>
					</div>
				{% endif %}
			{% endfor %}
		</div>	
		<div class="pts-row">
			<div class="col-sm-6 text-left">{{ pagination }}</div>
			<div class="col-sm-6 text-right">{{ results }}</div>
		</div>			
	{% endif %}
			]]></add>
		</operation>
	</file>	
	<file path="catalog/controller/product/category.php">
		<operation error="skip">
			<search><![CDATA[$pagination = new Pagination();]]></search>
			<add position="before"><![CDATA[
			if($this->config->get('module_purpletree_multivendor_allow_selleron_category') === 'service_mode'){
				$product_total = $this->model_catalog_category->getTotalStores($category_id);
			}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$data['sorts'] = array();]]></search>
			<add position="before"><![CDATA[
				if ($this->config->get('module_purpletree_multivendor_allow_selleron_category')){
			$data['products'] = array();
		}
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$data['categories'] = array();]]></search>
			<add position="before"><![CDATA[
			$filter_data = array(
				'filter_category_id' => $category_id,
				'filter_filter'      => $filter,
				'sort'               => $sort,
				'order'              => $order,
				'start'              => ($page - 1) * $limit,
				'limit'              => $limit
			);
			$data['selleron_category'] = $this->config->get('module_purpletree_multivendor_allow_selleron_category');
			$array23 = $this->model_catalog_category->checkAssignCategory($category_id);
			$results = array();
            $seller_id = array();
            $stordgory = array();
			$data['store_categories'] =array();
			$this->load->model('extension/purpletree_multivendor/sellers');	
			$array1 = array();
			$array2 = array();
			if($this->config->get('module_purpletree_multivendor_allow_selleron_category') === 'service_mode'){	
				$data['text_empty'] = '';
				$array1 = $this->model_catalog_category->getAssinCategoriesSeller($category_id,$filter_data);
			}else{
				$array1 = $this->model_catalog_category->getCategoriesBySellerStore($category_id);
				$array2 = $this->model_catalog_category->getCategoriesBySellerStoreFromTemplatePro($category_id);
			}	
			$stordgory = array_merge($array1,$array2);		
			if($this->config->get('module_purpletree_multivendor_allow_selleron_category') === 'service_mode'){
				$seller_idd = array();
				if(!empty($stordgory) and $array23){
					foreach($array23 as $value){
						 $seller_idd[] = $value['seller_id'];
					}
					foreach($stordgory as $key=>$value){
						if(in_array($value['seller_id'], $seller_idd)){
							$seller_id[] = $value['seller_id'];
							$results[$key] = $value;
						}
				
					}
				}
			}else{
				if(!empty($stordgory)){
					foreach($stordgory as $key=>$value){
						if(!in_array($value['seller_id'], $seller_id)){
							$seller_id[] = $value['seller_id'];
							$results[$key] = $value;
						}
				
					}
				}
			}
			foreach ($results as $result) {
				if ($result['store_logo']) {
					$store_logo = $this->model_tool_image->resize($result['store_logo'], $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height'));
				} else {
					$store_logo = $this->model_tool_image->resize('placeholder.png', $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_width'), $this->config->get('theme_' . $this->config->get('config_theme') . '_image_product_height'));
				}

				$subscription_status=1;
				if($this->config->get('module_purpletree_multivendor_subscription_plans')){
							
				$getSsellerplanStatus = $this->model_extension_purpletree_multivendor_sellers->getSsellerplanStatus($result['seller_id']);
				$invoiceStatus = $this->model_extension_purpletree_multivendor_sellers->getInvoiceStatus($result['seller_id']);
					if(!$getSsellerplanStatus && ($invoiceStatus==NULL || $invoiceStatus!=2)) {
						$subscription_status=0;			
					}	else {
						//$seller_totals++;			
					}	
					
				}else {
					//$seller_totals++;			
				}	
				$string = html_entity_decode($result['store_description'], ENT_QUOTES, 'UTF-8');
				$len = strlen($string);
				if($len>=70){
					$descriptions = substr($string, 0, 70).'....';
				}else{	
					$descriptions = $string;
				}
				$lend = strlen($result['store_address']);

				$addres = $result['store_address'] . ', ' . $result['country_name'];

				if($this->config->get('module_purpletree_multivendor_allow_selleron_category')==='service_mode'){	
					$result['product_id'] = '' ;
				}
				$data['store_categories'][] = array(
					'product_id'  => $result['product_id'],
					'category_id' => $result['category_id'],
					'store_id'    => $result['id'],
					'store_name'  => $result['store_name'],
					'store_address'  => $addres,
					'thumb'       => $store_logo,
					'description' => $descriptions,
					'subscription_status'=>$subscription_status,
					'href'        => $this->url->link('extension/account/purpletree_multivendor/sellerstore/storeview', '&seller_store_id=' . $result['id']),
					'seller_id'        => $this->url->link('extension/account/purpletree_multivendor/sellercontact/customerreply', '&seller_id=' . $result['seller_id'])
				);
			}
			]]></add>
		</operation>
	</file>			
	<file path="catalog/model/catalog/category.php">
		<operation error="skip">
			<search><![CDATA[public function getTotalCategoriesByCategoryId($parent_id = 0) {]]></search>
			<add position="before"><![CDATA[
	public function getCategoriesBySellerStore($path_id) {
		$query = $this->db->query("SELECT co.name AS country_name,ptc.*,cp.*, c2s.*,pvp.*,pvs.*,co.*,cd.*,c.* FROM " . DB_PREFIX . "product_to_category ptc LEFT JOIN " . DB_PREFIX . "category_path cp ON (ptc.category_id = cp.category_id) LEFT JOIN " . DB_PREFIX . "category c ON (c.category_id = ptc.category_id) LEFT JOIN " . DB_PREFIX . "category_description cd ON (c.category_id = cd.category_id) LEFT JOIN " . DB_PREFIX . "category_to_store c2s ON (c.category_id = c2s.category_id) LEFT JOIN " . DB_PREFIX . "purpletree_vendor_products pvp ON (pvp.product_id = ptc.product_id) Inner JOIN " . DB_PREFIX . "purpletree_vendor_stores pvs ON (pvp.seller_id = pvs.seller_id) LEFT JOIN " . DB_PREFIX . "country co ON (co.country_id = pvs.store_country) WHERE c.parent_id = '" . (int)"0" . "' AND cd.language_id = '" . (int)$this->config->get('config_language_id') . "' AND c2s.store_id = '" . (int)$this->config->get('config_store_id') . "' AND cp.path_id = '" . (int)$path_id . "'  AND c.status = '1' GROUP BY pvs.id ORDER BY c.sort_order, LCASE(cd.name)");

		return $query->rows;
	}
	public function getCategoriesBySellerStoreFromTemplatePro($path_id) {
		$query = $this->db->query("SELECT co.name AS country_name,ptc.*,cp.*, c2s.*,pvt.*,pvs.*,co.*,cd.*,c.* FROM " . DB_PREFIX . "product_to_category ptc LEFT JOIN " . DB_PREFIX . "category_path cp ON (ptc.category_id = cp.category_id) LEFT JOIN " . DB_PREFIX . "category c ON (c.category_id = ptc.category_id) LEFT JOIN " . DB_PREFIX . "category_description cd ON (c.category_id = cd.category_id) LEFT JOIN " . DB_PREFIX . "category_to_store c2s ON (c.category_id = c2s.category_id) LEFT JOIN " . DB_PREFIX . "purpletree_vendor_template pvt ON (pvt.product_id = ptc.product_id) LEFT JOIN " . DB_PREFIX . "purpletree_vendor_template_products pvtp ON (pvt.id = pvtp.template_id) Inner JOIN " . DB_PREFIX . "purpletree_vendor_stores pvs ON (pvtp.seller_id = pvs.seller_id) LEFT JOIN " . DB_PREFIX . "country co ON (co.country_id = pvs.store_country) WHERE c.parent_id = '" . (int)"0" . "' AND cd.language_id = '" . (int)$this->config->get('config_language_id') . "' AND c2s.store_id = '" . (int)$this->config->get('config_store_id') . "' AND cp.path_id = '" . (int)$path_id . "'  AND c.status = '1' GROUP BY pvs.id ORDER BY c.sort_order, LCASE(cd.name)");

		return $query->rows;
	}
	public function getAssinCategoriesSeller($category_id, $data=array()) {
		$sql = "SELECT *,co.name AS country_name FROM " . DB_PREFIX . "purpletree_vendor_allowed_category pvac INNER JOIN " . DB_PREFIX . "purpletree_vendor_stores pvs ON (pvs.seller_id = pvac.seller_id) LEFT JOIN " . DB_PREFIX . "country co ON (co.country_id = pvs.store_country) WHERE category_id = '" . (int)$category_id . "'";
		  
		if (isset($data['start']) || isset($data['limit'])) {
			if ($data['start'] < 0) {
				$data['start'] = 0;
			}

			if ($data['limit'] < 1) {
				$data['limit'] = 20;
			}

			$sql .= " LIMIT " . (int)$data['start'] . "," . (int)$data['limit'];
		}
		
		$query = $this->db->query($sql);
		
		return $query->rows;
	}
	public function getTotalStores($category_id) {

		$sql = "SELECT COUNT(DISTINCT pvs.seller_id) AS total FROM " . DB_PREFIX . "purpletree_vendor_allowed_category pvac INNER JOIN " . DB_PREFIX . "purpletree_vendor_stores pvs ON (pvs.seller_id = pvac.seller_id) LEFT JOIN " . DB_PREFIX . "country co ON (co.country_id = pvs.store_country) LEFT JOIN " . DB_PREFIX . "category_to_store c2s ON (c2s.category_id = pvac.category_id) WHERE pvac.category_id = '" . (int)$category_id . "' AND c2s.store_id = '" . (int)$this->config->get('config_store_id') . "'";
		
		$query = $this->db->query($sql);

		return $query->row['total'];
	}
	public function checkAssignCategory($category_id) {
		$query = $this->db->query("SELECT seller_id FROM " . DB_PREFIX . "purpletree_vendor_allowed_category  WHERE category_id = '" . (int)$category_id . "'");
		return $query->rows;
	}	
			]]></add>
		</operation>
	</file>
	<file path="catalog/controller/extension/module/category.php">
		<operation error="skip">
			<search><![CDATA[$categories = $this->model_catalog_category->getCategories(0);]]></search>
			<add position="after"><![CDATA[
				if($this->config->get('module_purpletree_multivendor_allow_selleron_category') === 'service_mode'){	
				foreach ($categories as $category) {
			$children_data = array();

			if ($category['category_id'] == $data['category_id']) {
				$children = $this->model_catalog_category->getCategories($category['category_id']);

				foreach($children as $child) {
					$filter_data = array('filter_category_id' => $child['category_id'], 'filter_sub_category' => true);
					
					$categoriess = $this->model_catalog_category->getTotalStores($child['category_id']);
					
					$children_data[] = array(
						'category_id' => $child['category_id'],
						'name' => $child['name'] . ($this->config->get('config_product_count') ? ' (' . $categoriess . ')' : ''),
						'href' => $this->url->link('product/category', 'path=' . $category['category_id'] . '_' . $child['category_id'])
					);
				}
			}

			$filter_data = array(
				'filter_category_id'  => $category['category_id'],
				'filter_sub_category' => true
			);
			
			$categoriess = $this->model_catalog_category->getTotalStores($category['category_id']);
			
			$data['categories'][] = array(
				'category_id' => $category['category_id'],
				'name'        => $category['name'] . ($this->config->get('config_product_count') ? ' (' . $categoriess . ')' : ''),
				'children'    => $children_data,
				'href'        => $this->url->link('product/category', 'path=' . $category['category_id'])
			);
		}
		} else {
			]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[return $this->load->view('extension/module/category', $data);]]></search>
			<add position="before"><![CDATA[
				}
			]]></add>
		</operation>
	</file>
	
	<file path="admin/controller/customer/custom_field.php">
		<operation error="skip">
			<search><![CDATA[foreach ($results as $result) {]]></search>
			<add position="after"><![CDATA[
			if ($this->config->get('module_purpletree_multivendor_status')) {
				$sellercutom = $this->model_customer_custom_field->getcustomsellerfiled($result['custom_field_id']);
		if($sellercutom) {
		continue;
		}
		}
			]]></add>
         </operation>
	</file>	
	<file path="admin/controller/customer/customer.php">
		<operation error="skip">
			<search><![CDATA[foreach ($custom_fields as $custom_field) {]]></search>
			<add position="before"><![CDATA[
				$this->load->model('customer/custom_field');
			]]></add>
         </operation>
		 <operation error="skip">
			<search><![CDATA[foreach ($custom_fields as $custom_field) {]]></search>
			<add position="after"><![CDATA[
			if ($this->config->get('module_purpletree_multivendor_status')) {
				$sellercutom = $this->model_customer_custom_field->getcustomsellerfiled($custom_field['custom_field_id']);
		if($sellercutom) {
		continue;
		}
		}
			]]></add>
         </operation>
	</file>	
	<file path="catalog/model/account/custom_field.php">
		 <operation error="skip">
			<search><![CDATA[foreach ($custom_field_query->rows as $custom_field) {]]></search>
			<add position="after"><![CDATA[
			if ($this->config->get('module_purpletree_multivendor_status')) {
				$query = $this->db->query("SELECT id FROM `" . DB_PREFIX . "purpletree_vendor_customfield` WHERE `custom_field_id`=".(int)$custom_field['custom_field_id']);
					if($query->num_rows) {
					continue;
					}
		}
			]]></add>
         </operation>
	</file>	
	<file path="catalog/controller/account/edit.php">
		<operation error="skip">
			<search><![CDATA[foreach ($custom_fields as $custom_field) {]]></search>
			<add position="before"><![CDATA[
				$this->load->model('extension/purpletree_multivendor/vendor');
			]]></add>
         </operation>
		 <operation error="skip">
			<search><![CDATA[foreach ($custom_fields as $custom_field) {]]></search>
			<add position="after"><![CDATA[
			if ($this->config->get('module_purpletree_multivendor_status')) {
				$sellercutom = $this->model_extension_purpletree_multivendor_vendor->getcustomsellerfiled($custom_field['custom_field_id']);
		if($sellercutom) {
		continue;
		}
		}
			]]></add>
         </operation>
	</file>	
	<file path="catalog/controller/account/address.php">
		<operation error="skip">
			<search><![CDATA[foreach ($custom_fields as $custom_field) {]]></search>
			<add position="before"><![CDATA[
				$this->load->model('extension/purpletree_multivendor/vendor');
			]]></add>
         </operation>
		 <operation error="skip">
			<search><![CDATA[foreach ($custom_fields as $custom_field) {]]></search>
			<add position="after"><![CDATA[
			if ($this->config->get('module_purpletree_multivendor_status')) {
				$sellercutom = $this->model_extension_purpletree_multivendor_vendor->getcustomsellerfiled($custom_field['custom_field_id']);
		if($sellercutom) {
		continue;
		}
		}
			]]></add>
         </operation>
	</file>	
	<file path="catalog/controller/account/affiliate.php">
		<operation error="skip">
			<search><![CDATA[foreach ($custom_fields as $custom_field) {]]></search>
			<add position="before"><![CDATA[
				$this->load->model('extension/purpletree_multivendor/vendor');
			]]></add>
         </operation>
		 <operation error="skip">
			<search><![CDATA[foreach ($custom_fields as $custom_field) {]]></search>
			<add position="after"><![CDATA[
			if ($this->config->get('module_purpletree_multivendor_status')) {
				$sellercutom = $this->model_extension_purpletree_multivendor_vendor->getcustomsellerfiled($custom_field['custom_field_id']);
		if($sellercutom) {
		continue;
		}
		}
			]]></add>
         </operation>
	</file>	
	<file path="catalog/controller/tool/upload.php">
		<operation error="skip">
			<search><![CDATA[$this->model_tool_upload->addUpload(]]></search>
			<add position="after"><![CDATA[
			if ($this->config->get('module_purpletree_multivendor_status')) {
					$json['filename'] = $filename;
				}
			]]></add>
         </operation>
	</file>	
	<file path="admin/model/customer/custom_field.php">
		<operation error="skip">
			<search><![CDATA[return $query->row['total'];]]></search>
			<add position="replace"><![CDATA[
			if ($this->config->get('module_purpletree_multivendor_status')) {
				return $query->row['total'] - $this->getTotalSellerCustomfields();
				} else {
				return $query->row['total'];
				}
			]]></add>
         </operation>
		<operation error="skip">
			<search><![CDATA[public function getTotalCustomFields() {]]></search>
			<add position="before"><![CDATA[
					public function getcustomsellerfiled($custom_field_id) {
					$query = $this->db->query("SELECT id FROM `" . DB_PREFIX . "purpletree_vendor_customfield` WHERE `custom_field_id`=".$custom_field_id);

						return $query->num_rows;
					}
					public function getTotalSellerCustomfields() {
					$query = $this->db->query("SELECT COUNT(*) AS total FROM `" . DB_PREFIX . "purpletree_vendor_customfield`");

						return $query->row['total'];
					}
			]]></add>
         </operation>
	
	</file>	
			<file path="catalog/controller/account/register.php">
		<operation error="skip">
			<search><![CDATA[if (isset($this->request->post['custom_field']['account'])) {]]></search>
			<add position="before"><![CDATA[
			if ($this->config->get('module_purpletree_multivendor_status')) {
				// Custom Fields Purpletree Multisellers
		$data['custom_fields'] = array();
		$data['custom'] = array();
		$custom = array();
		$this->load->model('extension/purpletree_multivendor/vendor');
		$custom_fields = $this->model_extension_purpletree_multivendor_vendor->getCustomFields();
		if(!empty($custom_fields)){
		    foreach ($custom_fields as $key=>$value) {
			    $custom[$key] = $value['custom_field_id'];
	    	}
		}
	
		$custom_fields = $this->model_account_custom_field->getCustomFields();
        if(!empty($custom_fields)){
            	foreach ($custom_fields as $custom_field) {
        			if ($custom_field['location'] == 'account') {
        				if (in_array($custom_field['custom_field_id'],$custom)){}else{
        					$data['custom_fields'][] = $custom_field;
        				}
        				
        			}
        		}
        }
		}
			]]></add>
			 </operation>
				<operation error="skip">
			<search><![CDATA[foreach ($custom_fields as $custom_field) {]]></search>
			<add position="before"><![CDATA[
				$this->load->model('extension/purpletree_multivendor/vendor');
			]]></add>
         </operation>
		 <operation error="skip">
			<search><![CDATA[foreach ($custom_fields as $custom_field) {]]></search>
			<add position="after"><![CDATA[
			if ($this->config->get('module_purpletree_multivendor_status')) {
				$sellercutom = $this->model_extension_purpletree_multivendor_vendor->getcustomsellerfiled($custom_field['custom_field_id']);
		if($sellercutom) {
		continue;
		}
		}
			]]></add>
         </operation>
	</file>		
	<file path="catalog/controller/affiliate/register.php">
				<operation error="skip">
			<search><![CDATA[foreach ($custom_fields as $custom_field) {]]></search>
			<add position="before"><![CDATA[
				$this->load->model('extension/purpletree_multivendor/vendor');
			]]></add>
         </operation>
		 <operation error="skip">
			<search><![CDATA[foreach ($custom_fields as $custom_field) {]]></search>
			<add position="after"><![CDATA[
			if ($this->config->get('module_purpletree_multivendor_status')) {
				$sellercutom = $this->model_extension_purpletree_multivendor_vendor->getcustomsellerfiled($custom_field['custom_field_id']);
		if($sellercutom) {
		continue;
		}
		}
			]]></add>
         </operation>
	</file>		
	<file path="catalog/controller/api/customer.php">
				<operation error="skip">
			<search><![CDATA[foreach ($custom_fields as $custom_field) {]]></search>
			<add position="before"><![CDATA[
				$this->load->model('extension/purpletree_multivendor/vendor');
			]]></add>
         </operation>
		 <operation error="skip">
			<search><![CDATA[foreach ($custom_fields as $custom_field) {]]></search>
			<add position="after"><![CDATA[
			if ($this->config->get('module_purpletree_multivendor_status')) {
				$sellercutom = $this->model_extension_purpletree_multivendor_vendor->getcustomsellerfiled($custom_field['custom_field_id']);
		if($sellercutom) {
		continue;
		}
		}
			]]></add>
         </operation>
	</file>	
	<file path="catalog/controller/api/payment.php">
				<operation error="skip">
			<search><![CDATA[foreach ($custom_fields as $custom_field) {]]></search>
			<add position="before"><![CDATA[
				$this->load->model('extension/purpletree_multivendor/vendor');
			]]></add>
         </operation>
		 <operation error="skip">
			<search><![CDATA[foreach ($custom_fields as $custom_field) {]]></search>
			<add position="after"><![CDATA[
			if ($this->config->get('module_purpletree_multivendor_status')) {
				$sellercutom = $this->model_extension_purpletree_multivendor_vendor->getcustomsellerfiled($custom_field['custom_field_id']);
		if($sellercutom) {
		continue;
		}
		}
			]]></add>
         </operation>
	</file>
	<file path="catalog/controller/api/shipping.php">
				<operation error="skip">
			<search><![CDATA[foreach ($custom_fields as $custom_field) {]]></search>
			<add position="before"><![CDATA[
				$this->load->model('extension/purpletree_multivendor/vendor');
			]]></add>
         </operation>
		 <operation error="skip">
			<search><![CDATA[foreach ($custom_fields as $custom_field) {]]></search>
			<add position="after"><![CDATA[
			if ($this->config->get('module_purpletree_multivendor_status')) {
				$sellercutom = $this->model_extension_purpletree_multivendor_vendor->getcustomsellerfiled($custom_field['custom_field_id']);
		if($sellercutom) {
		continue;
		}
		}
			]]></add>
         </operation>
	</file>	
	<file path="catalog/controller/checkout/checkout.php">
		<operation error="skip">
			<search><![CDATA[function index(]]></search>
			<add position="after"><![CDATA[
				if($this->config->get('payment_pts_stripe_status')) {
					$this->document->addScript('https://js.stripe.com/v3/');
				}
			]]></add>
         </operation>
		 <operation error="skip">
			<search><![CDATA[foreach ($custom_fields as $custom_field) {]]></search>
			<add position="before"><![CDATA[
				$this->load->model('extension/purpletree_multivendor/vendor');
			]]></add>
         </operation>
		 <operation error="skip">
			<search><![CDATA[foreach ($custom_fields as $custom_field) {]]></search>
			<add position="after"><![CDATA[
			if ($this->config->get('module_purpletree_multivendor_status')) {
				$sellercutom = $this->model_extension_purpletree_multivendor_vendor->getcustomsellerfiled($custom_field['custom_field_id']);
		if($sellercutom) {
		continue;
		}
		}
			]]></add>
         </operation>
	</file>	
	<file path="catalog/controller/checkout/guest.php">
				<operation error="skip">
			<search><![CDATA[foreach ($custom_fields as $custom_field) {]]></search>
			<add position="before"><![CDATA[
				$this->load->model('extension/purpletree_multivendor/vendor');
			]]></add>
         </operation>
		 <operation error="skip">
			<search><![CDATA[foreach ($custom_fields as $custom_field) {]]></search>
			<add position="after"><![CDATA[
			if ($this->config->get('module_purpletree_multivendor_status')) {
				$sellercutom = $this->model_extension_purpletree_multivendor_vendor->getcustomsellerfiled($custom_field['custom_field_id']);
		if($sellercutom) {
		continue;
		}
		}
			]]></add>
         </operation>
	</file>	
	<file path="catalog/controller/checkout/guest_shipping.php">
				<operation error="skip">
			<search><![CDATA[foreach ($custom_fields as $custom_field) {]]></search>
			<add position="before"><![CDATA[
				$this->load->model('extension/purpletree_multivendor/vendor');
			]]></add>
         </operation>
		 <operation error="skip">
			<search><![CDATA[foreach ($custom_fields as $custom_field) {]]></search>
			<add position="after"><![CDATA[
			if ($this->config->get('module_purpletree_multivendor_status')) {
				$sellercutom = $this->model_extension_purpletree_multivendor_vendor->getcustomsellerfiled($custom_field['custom_field_id']);
		if($sellercutom) {
		continue;
		}
		}
			]]></add>
         </operation>
	</file>	
	<file path="catalog/controller/checkout/payment_address.php">
				<operation error="skip">
			<search><![CDATA[foreach ($custom_fields as $custom_field) {]]></search>
			<add position="before"><![CDATA[
				$this->load->model('extension/purpletree_multivendor/vendor');
			]]></add>
         </operation>
		 <operation error="skip">
			<search><![CDATA[foreach ($custom_fields as $custom_field) {]]></search>
			<add position="after"><![CDATA[
			if ($this->config->get('module_purpletree_multivendor_status')) {
				$sellercutom = $this->model_extension_purpletree_multivendor_vendor->getcustomsellerfiled($custom_field['custom_field_id']);
		if($sellercutom) {
		continue;
		}
		}
			]]></add>
         </operation>
	</file>	
	<file path="catalog/controller/checkout/register.php">
				<operation error="skip">
			<search><![CDATA[foreach ($custom_fields as $custom_field) {]]></search>
			<add position="before"><![CDATA[
				$this->load->model('extension/purpletree_multivendor/vendor');
			]]></add>
         </operation>
		 <operation error="skip">
			<search><![CDATA[foreach ($custom_fields as $custom_field) {]]></search>
			<add position="after"><![CDATA[
			if ($this->config->get('module_purpletree_multivendor_status')) {
				$sellercutom = $this->model_extension_purpletree_multivendor_vendor->getcustomsellerfiled($custom_field['custom_field_id']);
		if($sellercutom) {
		continue;
		}
		}
			]]></add>
         </operation>
	</file>	
	<file path="catalog/controller/checkout/shipping_address.php">
				<operation error="skip">
			<search><![CDATA[foreach ($custom_fields as $custom_field) {]]></search>
			<add position="before"><![CDATA[
				$this->load->model('extension/purpletree_multivendor/vendor');
			]]></add>
         </operation>
		 <operation error="skip">
			<search><![CDATA[foreach ($custom_fields as $custom_field) {]]></search>
			<add position="after"><![CDATA[
			if ($this->config->get('module_purpletree_multivendor_status')) {
				$sellercutom = $this->model_extension_purpletree_multivendor_vendor->getcustomsellerfiled($custom_field['custom_field_id']);
		if($sellercutom) {
		continue;
		}
		}
			]]></add>
         </operation>
	</file>	
    
		<file path="catalog/model/extension/module/so_onepagecheckout.php">  
	<operation error="skip">
			<search><![CDATA[$this->order_data['products'][] = array(]]></search>
			<add position="before"><![CDATA[
			// purpletree code
				$cart_id='';
				$seller_id='';
				if((int)$product['cart_id']){
					$cart_id=$product['cart_id'];
				}
				if($cart_id){
					if(method_exists($this->cart,'getvendorcart')){
					$seller_id = $this->cart->getvendorcart($cart_id);
					}
				}
			// purpletree code
			]]></add>
         </operation>
		 	<operation error="skip">
			<search><![CDATA[$this->order_data['products'][] = array(]]></search>
			<add position="after"><![CDATA[
				'seller_id' => $seller_id,
			]]></add>
         </operation>
	</file>
	<file path="catalog/view/theme/amazing/template/product/product.twig">
	<operation error="skip">
			<search><![CDATA[<div class="price-tab">]]></search>
			<add position="before"><![CDATA[{% if seller_detail %}
			{% if module_purpletree_multivendor_hide_seller_detail != 1 %}
				<li>{{ text_seller_label }}&nbsp;<a href="{{ seller_detail.seller_href }}">{{ seller_detail.seller_name }}</a></li>
				{% if seller_review_status %}
				<li>{% if seller_detail.seller_rating %}
				<div class="rating" style="display:inline !important; border:none !important;">
							{{ text_seller_rating }}&nbsp;&nbsp;&nbsp;
							  {% for i in 1..5 %}
							  {% if seller_detail.seller_rating < i %}
							  <span class="fa fa-stack" style="min-width:0;"><i class="fa fa-star-o fa-stack-1x"></i></span>
							  {% else %}
							  <span class="fa fa-stack" style="min-width:0;"><i class="fa fa-star fa-stack-1x"></i></span>
							 {% endif %}
							  {% endfor %}
							  <a href="{{ seller_detail.seller_review_link }}" id = "pts_srating">{{ seller_detail.seller_count }} {{ text_seller_review }}</a>
							</div>
							{% else %}
							<div class="rating"  style="display:inline !important; border:none !important;">{{ text_seller_rating }}&nbsp;&nbsp;&nbsp;
								{% for i in 1..5 %}
									<span class="fa fa-stack" style="min-width:0;"><i class="fa fa-star-o fa-stack-1x"></i></span>
								{% endfor %}
								<a href="{{ seller_detail.seller_review_link }}" id = "pts_srating">{{ seller_detail.seller_count }} {{ text_seller_review }}</a>
							</div>
							{% endif %}</li>
				{% endif %}
					<li><a href="{{ seller_detail.seller_contact_link }}">{{ text_seller_contact }}</a></li>
			{% endif %}
			{% endif %}]]></add>
		</operation>
	</file>	
    

	<file path="catalog/controller/product/search.php">
	<operation error="skip">
			<search><![CDATA[$data['products'][] = array(]]></search>
			<add position="before"><![CDATA[$this->load->model('extension/purpletree_multivendor/sellertemplateproduct');
				$template_product_status = '';
                $template_product_status = $this->model_extension_purpletree_multivendor_sellertemplateproduct->checkTempstatus($result['product_id']);]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$data['products'][] = array(]]></search>
			<add position="after"><![CDATA['template_product_status'  => $template_product_status,]]></add>
		</operation>
	</file>
	<file path="catalog/controller/product/category.php">
	<operation error="skip">
			<search><![CDATA[$data['products'][] = array(]]></search>
			<add position="before"><![CDATA[$this->load->model('extension/purpletree_multivendor/sellertemplateproduct');
				$template_product_status = '';
                $template_product_status = $this->model_extension_purpletree_multivendor_sellertemplateproduct->checkTempstatus($result['product_id']);]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$data['products'][] = array(]]></search>
			<add position="after"><![CDATA['template_product_status'  => $template_product_status,]]></add>
		</operation>
	</file>
	<file path="catalog/controller/extension/module/featured.php">
	<operation error="skip">
			<search><![CDATA[$data['products'][] = array(]]></search>
			<add position="before"><![CDATA[$this->load->model('extension/purpletree_multivendor/sellerproduct');
                $this->load->language('account/ptsregister');
                $data['text_seller_label'] =$this->language->get('text_seller_label'); 
			$data['button_deliver'] =$this->language->get('button_deliver');
			$this->load->model('extension/purpletree_multivendor/vendor');
				$data['show_seller_name'] = $this->config->get('module_purpletree_multivendor_show_seller_name');
				$data['multivendor_status'] = $this->config->get('module_purpletree_multivendor_status');
                $data['show_seller_address'] = $this->config->get('module_purpletree_multivendor_show_seller_address');
					$seller_detail = array();
					$pts_quick_status = '';
					$seller_detail = $this->model_extension_purpletree_multivendor_sellerproduct->getSellername($product_info['product_id']);
					$pts_quick_status = $this->model_extension_purpletree_multivendor_sellerproduct->getQucikOrderStatus($product_info['product_id']);
					$seller_detailss = array();
					if($seller_detail){
				      $seller_detailss = $this->model_extension_purpletree_multivendor_vendor->getStoreDetail($seller_detail['seller_id']);
					}
					if(!empty($seller_detailss)){
					   $cuntry_name = $this->model_extension_purpletree_multivendor_vendor->getStoreDetail($seller_detail['seller_id']);
					   $cuntry_name = $this->model_extension_purpletree_multivendor_vendor->getCountryName($seller_detailss['store_country']);
					   $state_name = $this->model_extension_purpletree_multivendor_vendor->getStateName($seller_detailss['store_state'],$seller_detailss['store_country']);
					   $store_address = $seller_detailss['store_address'].','.$seller_detailss['store_city'].','.$state_name.','.$cuntry_name;
					   $seller_link  = $this->url->link('extension/account/purpletree_multivendor/sellerstore/storeview', 'seller_store_id=' . $seller_detailss['id']);
					    $google_map = $seller_detailss['google_map_link'];
					}else{
					$seller_link ='';
					$store_address = '';
					$google_map = '';
					}]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$data['products'][] = array(]]></search>
			<add position="after"><![CDATA['seller_name'  => isset($seller_detail['seller_name'])?$seller_detail['seller_name']:'',
						'store_address'  => $store_address,
						'google_map'  => $google_map,
						'seller_link'  => $seller_link,
						'pts_quick_status'  => $pts_quick_status,
						'quick_order'       => $this->url->link('extension/account/purpletree_multivendor/quick_order', '&product_id='.$product_info['product_id'], true),]]></add>
		</operation>
	</file>
	<file path="catalog/view/theme/*/template/extension/module/featured.twig">
	<operation error="skip">
			<search><![CDATA[{% if product.price %}]]></search>
			<add position="before"><![CDATA[{% if multivendor_status %}
        {% if show_seller_name %}
			{% if product.seller_name %}
			<p><a href="{{ product.seller_link }}">{{ text_seller_label }}&nbsp{{ product.seller_name }}</a></p>
			{% endif %}
		{% endif %}
		{% if show_seller_address %}		  
			{% if product.store_address %}		  
			  {% if product.google_map %}	
			<a href="{{ product.google_map }}"><p><i class ="fa fa-map-marker" style = "color: #6aa5d1;"></i>&nbsp{{ product.store_address }}</p></a>
			{% else %}
			<p><i class ="fa fa-map-marker" style = "color: #6aa5d1;"></i>&nbsp{{ product.store_address }}</p>
		{% endif %}
			{% endif %}
		{% endif %}
	{% endif %}]]></add>
		</operation>
		<!-- <operation error="skip">
			<search><![CDATA[<button type="button" data-toggle="tooltip" title="{{ button_wishlist }}" onclick="wishlist.add('{{ product.product_id }}');"><i class="fa fa-heart"></i></button>]]></search>
			<add position="before"><![CDATA[ {% if product.pts_quick_status %}
	  <button  type="button" style="width: 100%;"><a href="{{ product.quick_order }}"><i class="fa fa-shopping-cart"></i> <span class="hidden-xs hidden-sm hidden-md">{{ button_deliver }}</span></a></button>
	  {% else %}]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[<button type="button" data-toggle="tooltip" title="{{ button_compare }}" onclick="compare.add('{{ product.product_id }}');"><i class="fa fa-exchange"></i></button>]]></search>
			<add position="after"><![CDATA[{% endif %}]]></add>
		</operation> -->
	</file>
	<file path="catalog/controller/extension/module/latest.php">
	<operation error="skip">
			<search><![CDATA[$data['products'][] = array(]]></search>
			<add position="before"><![CDATA[$this->load->model('extension/purpletree_multivendor/sellerproduct');
                 $this->load->language('account/ptsregister');
                 $data['text_seller_label'] =$this->language->get('text_seller_label');
				$data['button_deliver'] =$this->language->get('button_deliver');
				$this->load->model('extension/purpletree_multivendor/vendor');
			$data['show_seller_name'] = $this->config->get('module_purpletree_multivendor_show_seller_name');
			$data['multivendor_status'] = $this->config->get('module_purpletree_multivendor_status');
            $data['show_seller_address'] = $this->config->get('module_purpletree_multivendor_show_seller_address');	         
					$seller_detail = array();
					$pts_quick_status = '';
					$seller_detail = $this->model_extension_purpletree_multivendor_sellerproduct->getSellername($result['product_id']);
					$pts_quick_status = $this->model_extension_purpletree_multivendor_sellerproduct->getQucikOrderStatus($result['product_id']);
					$seller_detailss = array();
					if($seller_detail){
				      $seller_detailss = $this->model_extension_purpletree_multivendor_vendor->getStoreDetail($seller_detail['seller_id']);
					}
					if(!empty($seller_detailss)){
					   $cuntry_name = $this->model_extension_purpletree_multivendor_vendor->getStoreDetail($seller_detail['seller_id']);
					   $cuntry_name = $this->model_extension_purpletree_multivendor_vendor->getCountryName($seller_detailss['store_country']);
					   $state_name = $this->model_extension_purpletree_multivendor_vendor->getStateName($seller_detailss['store_state'],$seller_detailss['store_country']);
					   $store_address = $seller_detailss['store_address'].','.$seller_detailss['store_city'].','.$state_name.','.$cuntry_name;
					   $seller_link  = $this->url->link('extension/account/purpletree_multivendor/sellerstore/storeview', 'seller_store_id=' . $seller_detailss['id']);
					    $google_map = $seller_detailss['google_map_link'];
					}else{
					$seller_link ='';
					$store_address = '';
					$google_map = '';
					}]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$data['products'][] = array(]]></search>
			<add position="after"><![CDATA['seller_name'  => isset($seller_detail['seller_name'])?$seller_detail['seller_name']:'',
						'store_address'  => $store_address,
						'google_map'  => $google_map,
						'seller_link'  => $seller_link,
						'pts_quick_status'  => $pts_quick_status,
						'quick_order'       => $this->url->link('extension/account/purpletree_multivendor/quick_order', '&product_id='.$result['product_id'], true),]]></add>
		</operation>
	</file>
	<file path="catalog/view/theme/*/template/extension/module/latest.twig">
	<operation error="skip">
			<search><![CDATA[{% if product.price %}]]></search>
			<add position="before"><![CDATA[{% if multivendor_status %}
        {% if show_seller_name %}
			{% if product.seller_name %}
			<p><a href="{{ product.seller_link }}">{{ text_seller_label }}&nbsp{{ product.seller_name }}</a></p>
			{% endif %}
		{% endif %}
		{% if show_seller_address %}		  
			{% if product.store_address %}		  
			  {% if product.google_map %}	
			<a href="{{ product.google_map }}"><p><i class ="fa fa-map-marker" style = "color: #6aa5d1;"></i>&nbsp{{ product.store_address }}</p></a>
			{% else %}
			<p><i class ="fa fa-map-marker" style = "color: #6aa5d1;"></i>&nbsp{{ product.store_address }}</p>
		{% endif %}
			{% endif %}
		{% endif %}
	{% endif %}]]></add>
		</operation>
		<!-- <operation error="skip">
			<search><![CDATA[<button type="button" onclick="cart.add('{{ product.product_id }}');"><i class="fa fa-shopping-cart"></i> <span class="hidden-xs hidden-sm hidden-md">{{ button_cart }}</span></button>]]></search>
			<add position="before"><![CDATA[ {% if product.pts_quick_status %}
	 <button  type="button" style="width: 100%;"><a href="{{ product.quick_order }}"><i class="fa fa-shopping-cart"></i> <span class="hidden-xs hidden-sm hidden-md">{{ button_deliver }}</span></a></button>
	  {% else %}]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[<button type="button" data-toggle="tooltip" title="{{ button_compare }}" onclick="compare.add('{{ product.product_id }}');"><i class="fa fa-exchange"></i></button>]]></search>
			<add position="after"><![CDATA[{% endif %}]]></add>
		</operation> -->
	</file>
	<file path="catalog/controller/product/category.php">
	<operation error="skip">
			<search><![CDATA[$data['products'][] = array(]]></search>
			<add position="before"><![CDATA[$this->load->model('extension/purpletree_multivendor/sellerproduct');			        $this->load->language('account/ptsregister');
            $data['text_seller_label'] =$this->language->get('text_seller_label');
			$data['button_deliver'] =$this->language->get('button_deliver');
            $data['show_seller_name'] = $this->config->get('module_purpletree_multivendor_show_seller_name');
			$data['multivendor_status'] = $this->config->get('module_purpletree_multivendor_status');
            $data['show_seller_address'] = $this->config->get('module_purpletree_multivendor_show_seller_address'); 
			$this->load->model('extension/purpletree_multivendor/vendor');
					$seller_detail = array();
					$pts_quick_status = '';
					$seller_detail = $this->model_extension_purpletree_multivendor_sellerproduct->getSellername($result['product_id']);
					$pts_quick_status = $this->model_extension_purpletree_multivendor_sellerproduct->getQucikOrderStatus($result['product_id']);
					$seller_detailss = array();
					if($seller_detail){
				      $seller_detailss = $this->model_extension_purpletree_multivendor_vendor->getStoreDetail($seller_detail['seller_id']);
					}
					if(!empty($seller_detailss)){
					   $cuntry_name = $this->model_extension_purpletree_multivendor_vendor->getStoreDetail($seller_detail['seller_id']);
					   $cuntry_name = $this->model_extension_purpletree_multivendor_vendor->getCountryName($seller_detailss['store_country']);
					   $state_name = $this->model_extension_purpletree_multivendor_vendor->getStateName($seller_detailss['store_state'],$seller_detailss['store_country']);
					   $store_address = $seller_detailss['store_address'].','.$seller_detailss['store_city'].','.$state_name.','.$cuntry_name;
					   $seller_link  = $this->url->link('extension/account/purpletree_multivendor/sellerstore/storeview', 'seller_store_id=' . $seller_detailss['id']);
					    $google_map = $seller_detailss['google_map_link'];
					}else{
					$seller_link ='';
					$store_address = '';
					$google_map = '';
					}]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$data['products'][] = array(]]></search>
			<add position="after"><![CDATA['seller_name'  => isset($seller_detail['seller_name'])?$seller_detail['seller_name']:'',
						'store_address'  => $store_address,
						'google_map'  => $google_map,
						'seller_link'  => $seller_link,
						'pts_quick_status'  => $pts_quick_status,
						'quick_order'       => $this->url->link('extension/account/purpletree_multivendor/quick_order', '&product_id='.$result['product_id'], true),]]></add>
		</operation>
	</file>
	<file path="catalog/view/theme/*/template/product/category.twig">
	<operation error="skip">
			<search><![CDATA[{% if product.price %}]]></search>
			<add position="before"><![CDATA[{% if multivendor_status %}
        {% if show_seller_name %}
			{% if product.seller_name %}
			<p><a href="{{ product.seller_link }}">{{ text_seller_label }}&nbsp{{ product.seller_name }}</a></p>
			{% endif %}
		{% endif %}
		{% if show_seller_address %}		  
			{% if product.store_address %}		  
			  {% if product.google_map %}	
			<a href="{{ product.google_map }}"><p><i class ="fa fa-map-marker" style = "color: #6aa5d1;"></i>&nbsp{{ product.store_address }}</p></a>
			{% else %}
			<p><i class ="fa fa-map-marker" style = "color: #6aa5d1;"></i>&nbsp{{ product.store_address }}</p>
		{% endif %}
			{% endif %}
		{% endif %}
	{% endif %}]]></add>
		</operation>
		<!-- <operation error="skip">
			<search><![CDATA[<button type="button" onclick="cart.add('{{ product.product_id }}', '{{ product.minimum }}');"><i class="fa fa-shopping-cart"></i> <span class="hidden-xs hidden-sm hidden-md">{{ button_cart }}</span></button>]]></search>
			<add position="before"><![CDATA[ {% if product.pts_quick_status %}
	  <button  type="button" style="width: 100%;"><a href="{{ product.quick_order }}"><i class="fa fa-shopping-cart"></i> <span class="hidden-xs hidden-sm hidden-md">{{ button_deliver }}</span></a></button>
	  {% else %}]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[<button type="button" data-toggle="tooltip" title="{{ button_compare }}" onclick="compare.add('{{ product.product_id }}');"><i class="fa fa-exchange"></i></button>]]></search>
			<add position="after"><![CDATA[{% endif %}]]></add>
		</operation> -->
	</file>
	<file path="catalog/controller/product/search.php">
	<operation error="skip">
			<search><![CDATA[$data['products'][] = array(]]></search>
			<add position="before"><![CDATA[$this->load->model('extension/purpletree_multivendor/sellerproduct');
			$this->load->language('account/ptsregister');
            $data['text_seller_label'] =$this->language->get('text_seller_label');
			$data['button_deliver'] =$this->language->get('button_deliver');
            $data['show_seller_name'] = $this->config->get('module_purpletree_multivendor_show_seller_name');
			$data['multivendor_status'] = $this->config->get('module_purpletree_multivendor_status');
            $data['show_seller_address'] = $this->config->get('module_purpletree_multivendor_show_seller_address');
			$this->load->model('extension/purpletree_multivendor/vendor');
					$seller_detail = array();
					$pts_quick_status = '';
					$seller_detail = $this->model_extension_purpletree_multivendor_sellerproduct->getSellername($result['product_id']);
					$pts_quick_status = $this->model_extension_purpletree_multivendor_sellerproduct->getQucikOrderStatus($result['product_id']);
					$seller_detailss = array();
					if($seller_detail){
				      $seller_detailss = $this->model_extension_purpletree_multivendor_vendor->getStoreDetail($seller_detail['seller_id']);
					}
					if(!empty($seller_detailss)){
					   $cuntry_name = $this->model_extension_purpletree_multivendor_vendor->getStoreDetail($seller_detail['seller_id']);
					   $cuntry_name = $this->model_extension_purpletree_multivendor_vendor->getCountryName($seller_detailss['store_country']);
					   $state_name = $this->model_extension_purpletree_multivendor_vendor->getStateName($seller_detailss['store_state'],$seller_detailss['store_country']);
					   $store_address = $seller_detailss['store_address'].','.$seller_detailss['store_city'].','.$state_name.','.$cuntry_name;
					   $seller_link  = $this->url->link('extension/account/purpletree_multivendor/sellerstore/storeview', 'seller_store_id=' . $seller_detailss['id']);
					    $google_map = $seller_detailss['google_map_link'];
					}else{
					$seller_link ='';
					$store_address = '';
					$google_map = '';
					}]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$data['products'][] = array(]]></search>
			<add position="after"><![CDATA['seller_name'  => isset($seller_detail['seller_name'])?$seller_detail['seller_name']:'',
						'store_address'  => $store_address,
						'google_map'  => $google_map,
						'seller_link'  => $seller_link,
						'pts_quick_status'  => $pts_quick_status,
						'quick_order'       => $this->url->link('extension/account/purpletree_multivendor/quick_order', '&product_id='.$result['product_id'], true),]]></add>
		</operation>
	</file>
	<file path="catalog/view/theme/*/template/product/search.twig">
	<operation error="skip">
			<search><![CDATA[{% if product.price %}]]></search>
			<add position="before"><![CDATA[{% if multivendor_status %}
        {% if show_seller_name %}
			{% if product.seller_name %}
			<p><a href="{{ product.seller_link }}">{{ text_seller_label }}&nbsp{{ product.seller_name }}</a></p>
			{% endif %}
		{% endif %}
		{% if show_seller_address %}		  
			{% if product.store_address %}		  
			  {% if product.google_map %}	
			<a href="{{ product.google_map }}"><p><i class ="fa fa-map-marker" style = "color: #6aa5d1;"></i>&nbsp{{ product.store_address }}</p></a>
			{% else %}
			<p><i class ="fa fa-map-marker" style = "color: #6aa5d1;"></i>&nbsp{{ product.store_address }}</p>
		{% endif %}
			{% endif %}
		{% endif %}
	{% endif %}]]></add>
		</operation>
		<!-- <operation error="skip">
			<search><![CDATA[<button type="button" onclick="cart.add('{{ product.product_id }}', '{{ product.minimum }}');"><i class="fa fa-shopping-cart"></i> <span class="hidden-xs hidden-sm hidden-md">{{ button_cart }}</span></button>]]></search>
			<add position="before"><![CDATA[ {% if product.pts_quick_status %}
	  <button  type="button" style="width: 100%;"><a href="{{ product.quick_order }}"><i class="fa fa-shopping-cart"></i> <span class="hidden-xs hidden-sm hidden-md">{{ button_deliver }}</span></a></button>
	  {% else %}]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[<button type="button" data-toggle="tooltip" title="{{ button_compare }}" onclick="compare.add('{{ product.product_id }}');"><i class="fa fa-exchange"></i></button>]]></search>
			<add position="after"><![CDATA[{% endif %}]]></add>
		</operation> -->
	</file>
		<file path="catalog/controller/product/manufacturer.php">
	<operation error="skip">
			<search><![CDATA[$data['products'][] = array(]]></search>
			<add position="before"><![CDATA[$this->load->model('extension/purpletree_multivendor/sellerproduct');
			$this->load->language('account/ptsregister');
            $data['text_seller_label'] =$this->language->get('text_seller_label');
			$data['button_deliver'] =$this->language->get('button_deliver');
             $data['show_seller_name'] = $this->config->get('module_purpletree_multivendor_show_seller_name');
             $data['show_seller_address'] = $this->config->get('module_purpletree_multivendor_show_seller_address');
			 $data['multivendor_status'] = $this->config->get('module_purpletree_multivendor_status');
			 $this->load->model('extension/purpletree_multivendor/vendor');
					$seller_detail = array();
					$pts_quick_status = '';
					$seller_detail = $this->model_extension_purpletree_multivendor_sellerproduct->getSellername($result['product_id']);
					$pts_quick_status = $this->model_extension_purpletree_multivendor_sellerproduct->getQucikOrderStatus($result['product_id']);
					$seller_detailss = array();
					if($seller_detail){
				      $seller_detailss = $this->model_extension_purpletree_multivendor_vendor->getStoreDetail($seller_detail['seller_id']);
					}
					if(!empty($seller_detailss)){
					   $cuntry_name = $this->model_extension_purpletree_multivendor_vendor->getStoreDetail($seller_detail['seller_id']);
					   $cuntry_name = $this->model_extension_purpletree_multivendor_vendor->getCountryName($seller_detailss['store_country']);
					   $state_name = $this->model_extension_purpletree_multivendor_vendor->getStateName($seller_detailss['store_state'],$seller_detailss['store_country']);
					   $store_address = $seller_detailss['store_address'].','.$seller_detailss['store_city'].','.$state_name.','.$cuntry_name;
					   $seller_link  = $this->url->link('extension/account/purpletree_multivendor/sellerstore/storeview', 'seller_store_id=' . $seller_detailss['id']);
					    $google_map = $seller_detailss['google_map_link'];
					}else{
					$seller_link ='';
					$store_address = '';
					$google_map = '';
					}]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$data['products'][] = array(]]></search>
			<add position="after"><![CDATA['seller_name'  => isset($seller_detail['seller_name'])?$seller_detail['seller_name']:'',
						'store_address'  => $store_address,
						'google_map'  => $google_map,
						'seller_link'  => $seller_link,
						'pts_quick_status'  => $pts_quick_status,
						'quick_order'       => $this->url->link('extension/account/purpletree_multivendor/quick_order', '&product_id='.$result['product_id'], true),]]></add>
		</operation>
	</file>
	<file path="catalog/view/theme/*/template/product/manufacturer_info.twig">
	<operation error="skip">
			<search><![CDATA[{% if product.price %}]]></search>
			<add position="before"><![CDATA[{% if multivendor_status %}
        {% if show_seller_name %}
			{% if product.seller_name %}
			<p><a href="{{ product.seller_link }}">{{ text_seller_label }}&nbsp{{ product.seller_name }}</a></p>
			{% endif %}
		{% endif %}
		{% if show_seller_address %}		  
			{% if product.store_address %}		  
			  {% if product.google_map %}	
			<a href="{{ product.google_map }}"><p><i class ="fa fa-map-marker" style = "color: #6aa5d1;"></i>&nbsp{{ product.store_address }}</p></a>
			{% else %}
			<p><i class ="fa fa-map-marker" style = "color: #6aa5d1;"></i>&nbsp{{ product.store_address }}</p>
		{% endif %}
			{% endif %}
		{% endif %}
	{% endif %}]]></add>
		</operation>
		<!-- <operation error="skip">
			<search><![CDATA[onclick="cart.add(]]></search>
			<add position="before"><![CDATA[ {% if product.pts_quick_status %}
	  <button  type="button" style="width: 100%;"><a href="{{ product.quick_order }}"><i class="fa fa-shopping-cart"></i> <span class="hidden-xs hidden-sm hidden-md">{{ button_deliver }}</span></a></button>
	  {% else %}]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[onclick="compare.add(]]></search>
			<add position="after"><![CDATA[{% endif %}]]></add>
		</operation> -->
	</file>
	<file path="catalog/view/theme/*/template/product/manufacturer_info.twig">
	<operation error="skip">
			<search><![CDATA[{% if  product.price %}]]></search>
			<add position="before"><![CDATA[{% if multivendor_status %}
        {% if show_seller_name %}
			{% if product.seller_name %}
			<p><a href="{{ product.seller_link }}">{{ text_seller_label }}&nbsp{{ product.seller_name }}</a></p>
			{% endif %}
		{% endif %}
		{% if show_seller_address %}		  
			{% if product.store_address %}		  
			  {% if product.google_map %}	
			<a href="{{ product.google_map }}"><p><i class ="fa fa-map-marker" style = "color: #6aa5d1;"></i>&nbsp{{ product.store_address }}</p></a>
			{% else %}
			<p><i class ="fa fa-map-marker" style = "color: #6aa5d1;"></i>&nbsp{{ product.store_address }}</p>
		{% endif %}
			{% endif %}
		{% endif %}
	{% endif %}]]></add>
		</operation>
	</file>
	
	<file path="catalog/controller/product/special.php">
	<operation error="skip">
			<search><![CDATA[$data['products'][] = array(]]></search>
			<add position="before"><![CDATA[$this->load->model('extension/purpletree_multivendor/sellerproduct');
			$this->load->language('account/ptsregister');
            $data['text_seller_label'] =$this->language->get('text_seller_label');
			$data['button_deliver'] =$this->language->get('button_deliver');
             $data['show_seller_name'] = $this->config->get('module_purpletree_multivendor_show_seller_name');
             $data['show_seller_address'] = $this->config->get('module_purpletree_multivendor_show_seller_address');
			 $data['multivendor_status'] = $this->config->get('module_purpletree_multivendor_status');
			 $this->load->model('extension/purpletree_multivendor/vendor');
					$seller_detail = array();
					$pts_quick_status = '';
					$seller_detail = $this->model_extension_purpletree_multivendor_sellerproduct->getSellername($result['product_id']);
					$pts_quick_status = $this->model_extension_purpletree_multivendor_sellerproduct->getQucikOrderStatus($result['product_id']);
					$seller_detailss = array();
					if($seller_detail){
				      $seller_detailss = $this->model_extension_purpletree_multivendor_vendor->getStoreDetail($seller_detail['seller_id']);
					}
					if(!empty($seller_detailss)){
					   $cuntry_name = $this->model_extension_purpletree_multivendor_vendor->getStoreDetail($seller_detail['seller_id']);
					   $cuntry_name = $this->model_extension_purpletree_multivendor_vendor->getCountryName($seller_detailss['store_country']);
					   $state_name = $this->model_extension_purpletree_multivendor_vendor->getStateName($seller_detailss['store_state'],$seller_detailss['store_country']);
					   $store_address = $seller_detailss['store_address'].','.$seller_detailss['store_city'].','.$state_name.','.$cuntry_name;
					   $seller_link  = $this->url->link('extension/account/purpletree_multivendor/sellerstore/storeview', 'seller_store_id=' . $seller_detailss['id']);
					    $google_map = $seller_detailss['google_map_link'];
					}else{
					$seller_link ='';
					$store_address = '';
					$google_map = '';
					}]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$data['products'][] = array(]]></search>
			<add position="after"><![CDATA['seller_name'  => isset($seller_detail['seller_name'])?$seller_detail['seller_name']:'',
						'store_address'  => $store_address,
						'google_map'  => $google_map,
						'seller_link'  => $seller_link,
						'pts_quick_status'  => $pts_quick_status,
						'quick_order'       => $this->url->link('extension/account/purpletree_multivendor/quick_order', '&product_id='.$result['product_id'], true),]]></add>
		</operation>
	</file>
	<file path="catalog/view/theme/*/template/product/special.twig">
	<operation error="skip">
			<search><![CDATA[{% if product.price %}]]></search>
			<add position="before"><![CDATA[{% if multivendor_status %}
        {% if show_seller_name %}
			{% if product.seller_name %}
			<p><a href="{{ product.seller_link }}">{{ text_seller_label }}&nbsp{{ product.seller_name }}</a></p>
			{% endif %}
		{% endif %}
		{% if show_seller_address %}		  
			{% if product.store_address %}		  
			  {% if product.google_map %}	
			<a href="{{ product.google_map }}"><p><i class ="fa fa-map-marker" style = "color: #6aa5d1;"></i>&nbsp{{ product.store_address }}</p></a>
			{% else %}
			<p><i class ="fa fa-map-marker" style = "color: #6aa5d1;"></i>&nbsp{{ product.store_address }}</p>
		{% endif %}
			{% endif %}
		{% endif %}
	{% endif %}]]></add>
		</operation>
		<!-- <operation error="skip">
			<search><![CDATA[<button type="button" onclick="cart.add('{{ product.product_id }}', '{{ product.minimum }}');"><i class="fa fa-shopping-cart"></i> <span class="hidden-xs hidden-sm hidden-md">{{ button_cart }}</span></button>]]></search>
			<add position="before"><![CDATA[ {% if product.pts_quick_status %}
	  <button  type="button" style="width: 100%;"><a href="{{ product.quick_order }}"><i class="fa fa-shopping-cart"></i> <span class="hidden-xs hidden-sm hidden-md">{{ button_deliver }}</span></a></button>
	  {% else %}]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[<button type="button" data-toggle="tooltip" title="{{ button_compare }}" onclick="compare.add('{{ product.product_id }}');"><i class="fa fa-exchange"></i></button>]]></search>
			<add position="after"><![CDATA[{% endif %}]]></add>
		</operation> -->
	</file>
	<file path="catalog/controller/extension/module/special.php">
	<operation error="skip">
			<search><![CDATA[$data['products'][] = array(]]></search>
			<add position="before"><![CDATA[$this->load->model('extension/purpletree_multivendor/sellerproduct');
			$this->load->language('account/ptsregister');
            $data['text_seller_label'] =$this->language->get('text_seller_label');
			$data['button_deliver'] =$this->language->get('button_deliver');
             $data['show_seller_name'] = $this->config->get('module_purpletree_multivendor_show_seller_name');
             $data['show_seller_address'] = $this->config->get('module_purpletree_multivendor_show_seller_address');
			 $data['multivendor_status'] = $this->config->get('module_purpletree_multivendor_status');
			 $this->load->model('extension/purpletree_multivendor/vendor');
					$seller_detail = array();
					$pts_quick_status = '';
					$seller_detail = $this->model_extension_purpletree_multivendor_sellerproduct->getSellername($result['product_id']);
					$pts_quick_status = $this->model_extension_purpletree_multivendor_sellerproduct->getQucikOrderStatus($result['product_id']);
					$seller_detailss = array();
					if($seller_detail){
				      $seller_detailss = $this->model_extension_purpletree_multivendor_vendor->getStoreDetail($seller_detail['seller_id']);
					}
					if(!empty($seller_detailss)){
					   $cuntry_name = $this->model_extension_purpletree_multivendor_vendor->getStoreDetail($seller_detail['seller_id']);
					   $cuntry_name = $this->model_extension_purpletree_multivendor_vendor->getCountryName($seller_detailss['store_country']);
					   $state_name = $this->model_extension_purpletree_multivendor_vendor->getStateName($seller_detailss['store_state'],$seller_detailss['store_country']);
					   $store_address = $seller_detailss['store_address'].','.$seller_detailss['store_city'].','.$state_name.','.$cuntry_name;
					   $seller_link  = $this->url->link('extension/account/purpletree_multivendor/sellerstore/storeview', 'seller_store_id=' . $seller_detailss['id']);
					    $google_map = $seller_detailss['google_map_link'];
					}else{
					$seller_link ='';
					$store_address = '';
					$google_map = '';
					}]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$data['products'][] = array(]]></search>
			<add position="after"><![CDATA['seller_name'  => isset($seller_detail['seller_name'])?$seller_detail['seller_name']:'',
						'store_address'  => $store_address,
						'google_map'  => $google_map,
						'seller_link'  => $seller_link,
						'pts_quick_status'  => $pts_quick_status,
						'quick_order'       => $this->url->link('extension/account/purpletree_multivendor/quick_order', '&product_id='.$result['product_id'], true),]]></add>
		</operation>
	</file>
	<file path="catalog/view/theme/*/template/extension/module/special.twig">
	<operation error="skip">
			<search><![CDATA[{% if product.price %}]]></search>
			<add position="before"><![CDATA[{% if multivendor_status %}
        {% if show_seller_name %}
			{% if product.seller_name %}
			<p><a href="{{ product.seller_link }}">{{ text_seller_label }}&nbsp{{ product.seller_name }}</a></p>
			{% endif %}
		{% endif %}
		{% if show_seller_address %}		  
			{% if product.store_address %}		  
			  {% if product.google_map %}	
			<a href="{{ product.google_map }}"><p><i class ="fa fa-map-marker" style = "color: #6aa5d1;"></i>&nbsp{{ product.store_address }}</p></a>
			{% else %}
			<p><i class ="fa fa-map-marker" style = "color: #6aa5d1;"></i>&nbsp{{ product.store_address }}</p>
		{% endif %}
			{% endif %}
		{% endif %}
	{% endif %}]]></add>
		</operation>
		<!-- <operation error="skip">
			<search><![CDATA[<button type="button" onclick="cart.add('{{ product.product_id }}');"><i class="fa fa-shopping-cart"></i> <span class="hidden-xs hidden-sm hidden-md">{{ button_cart }}</span></button>]]></search>
			<add position="before"><![CDATA[ {% if product.pts_quick_status %}
	  <button  type="button" style="width: 100%;"><a href="{{ product.quick_order }}"><i class="fa fa-shopping-cart"></i> <span class="hidden-xs hidden-sm hidden-md">{{ button_deliver }}</span></a></button>
	  {% else %}]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[<button type="button" data-toggle="tooltip" title="{{ button_compare }}" onclick="compare.add('{{ product.product_id }}');"><i class="fa fa-exchange"></i></button>]]></search>
			<add position="after"><![CDATA[{% endif %}]]></add>
		</operation> -->
	</file>
	<file path="catalog/controller/extension/module/bestseller.php">
	<operation error="skip">
			<search><![CDATA[$data['products'][] = array(]]></search>
			<add position="before"><![CDATA[$this->load->model('extension/purpletree_multivendor/sellerproduct');
			$this->load->language('account/ptsregister');
            $data['text_seller_label'] =$this->language->get('text_seller_label');
			$data['button_deliver'] =$this->language->get('button_deliver');
             $data['show_seller_name'] = $this->config->get('module_purpletree_multivendor_show_seller_name');
             $data['show_seller_address'] = $this->config->get('module_purpletree_multivendor_show_seller_address');
			 $data['multivendor_status'] = $this->config->get('module_purpletree_multivendor_status');
			 $this->load->model('extension/purpletree_multivendor/vendor');
					$seller_detail = array();
					$pts_quick_status = '';
					$seller_detail = $this->model_extension_purpletree_multivendor_sellerproduct->getSellername($result['product_id']);
					$pts_quick_status = $this->model_extension_purpletree_multivendor_sellerproduct->getQucikOrderStatus($result['product_id']);
					$seller_detailss = array();
					if($seller_detail){
				      $seller_detailss = $this->model_extension_purpletree_multivendor_vendor->getStoreDetail($seller_detail['seller_id']);
					}
					if(!empty($seller_detailss)){
					   $cuntry_name = $this->model_extension_purpletree_multivendor_vendor->getStoreDetail($seller_detail['seller_id']);
					   $cuntry_name = $this->model_extension_purpletree_multivendor_vendor->getCountryName($seller_detailss['store_country']);
					   $state_name = $this->model_extension_purpletree_multivendor_vendor->getStateName($seller_detailss['store_state'],$seller_detailss['store_country']);
					   $store_address = $seller_detailss['store_address'].','.$seller_detailss['store_city'].','.$state_name.','.$cuntry_name;
					   $seller_link  = $this->url->link('extension/account/purpletree_multivendor/sellerstore/storeview', 'seller_store_id=' . $seller_detailss['id']);
					    $google_map = $seller_detailss['google_map_link'];
					}else{
					$seller_link ='';
					$store_address = '';
					$google_map = '';
					}]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[$data['products'][] = array(]]></search>
			<add position="after"><![CDATA['seller_name'  => isset($seller_detail['seller_name'])?$seller_detail['seller_name']:'',
						'store_address'  => $store_address,
						'google_map'  => $google_map,
						'seller_link'  => $seller_link,
						'pts_quick_status'  => $pts_quick_status,
						'quick_order'       => $this->url->link('extension/account/purpletree_multivendor/quick_order', '&product_id='.$result['product_id'], true),]]></add>
		</operation>
	</file>	
	<file path="catalog/view/theme/*/template/extension/module/bestseller.twig">
	<operation error="skip">
			<search><![CDATA[{% if product.price %}]]></search>
			<add position="before"><![CDATA[{% if multivendor_status %}
        {% if show_seller_name %}
			{% if product.seller_name %}
			<p><a href="{{ product.seller_link }}">{{ text_seller_label }}&nbsp{{ product.seller_name }}</a></p>
			{% endif %}
		{% endif %}
		{% if show_seller_address %}		  
			{% if product.store_address %}		  
			  {% if product.google_map %}	
			<a href="{{ product.google_map }}"><p><i class ="fa fa-map-marker" style = "color: #6aa5d1;"></i>&nbsp{{ product.store_address }}</p></a>
			{% else %}
			<p><i class ="fa fa-map-marker" style = "color: #6aa5d1;"></i>&nbsp{{ product.store_address }}</p>
		{% endif %}
			{% endif %}
		{% endif %}
	{% endif %}]]></add>
		</operation>
		<!-- <operation error="skip">
			<search><![CDATA[<button type="button" onclick="cart.add('{{ product.product_id }}');"><i class="fa fa-shopping-cart"></i> <span class="hidden-xs hidden-sm hidden-md">{{ button_cart }}</span></button>]]></search>
			<add position="before"><![CDATA[ {% if product.pts_quick_status %}
	  <button  type="button" style="width: 100%;"><a href="{{ product.quick_order }}"><i class="fa fa-shopping-cart"></i> <span class="hidden-xs hidden-sm hidden-md">{{ button_deliver }}</span></a></button>
	  {% else %}]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[<button type="button" data-toggle="tooltip" title="{{ button_compare }}" onclick="compare.add('{{ product.product_id }}');"><i class="fa fa-exchange"></i></button>]]></search>
			<add position="after"><![CDATA[{% endif %}]]></add>
		</operation> -->
	</file>
	<file path="catalog/view/theme/*/template/common/success.twig">
	<operation error="skip">
			<search><![CDATA[{{ text_message }}]]></search>
			<add position="replace"><![CDATA[{% if seller_info_on_order_sucess %}
	  {{ pts_text_message }}
	  {% for product in products %}
		{% if product.seller_id %}
		 <a href="{{ product.seller_link }}">{{ product.seller_store_name }}</a>
			{% if product.google_map %} 
				<a href="{{ product.google_map }}"><p><i class ="fa fa-map-marker" style = "color: #6aa5d1;"></i>&nbsp {{ product.store_address }}</p></a>
			{% else %}
				<p><i class ="fa fa-map-marker" style = "color: #6aa5d1;"></i>&nbsp {{ product.store_address }}</p>
			{% endif %}
		{% else %}
		 {{ pts_text_store_owner }}
		{% endif %}		
	  {% endfor %}
	  {{ pts_text_thanks }}
	  {% else %}
		 {{ text_message }}
		{% endif %}]]></add>
		</operation>
	</file>
	<file path="catalog/controller/checkout/success.php">
	<operation error="skip">
			<search><![CDATA[$this->cart->clear();]]></search>
			<add position="before"><![CDATA[
			$this->load->model('checkout/order');
			$logger = new Log('error.log'); 
			$logger->write($_GET);
			$logger->write($this->session->data['order_id']);
			if(isset($this->request->get['payment']) && $this->request->get['payment']=="paypalpayout"){
				$logger->write($this->request->get['payment']);
				$logger->write($_POST);
				$this->model_checkout_order->addOrderHistory($this->session->data['order_id'], $this->config->get('payment_pp_adaptive_pending_status_id'));
				$this->load->model('extension/payment/pp_adaptive');
				$this->model_extension_payment_pp_adaptive->authorizeAndCapture($_POST);	
			}
			]]></add>
         </operation>
	<operation error="skip">
			<search><![CDATA[if (isset($this->session->data['order_id'])) {]]></search>
			<add position="after"><![CDATA[/// quick order ////
		$data['seller_info_on_order_sucess'] = $this->config->get('module_purpletree_multivendor_seller_info_on_order_sucess');
			$this->load->language('account/ptsregister');
			 $this->load->model('account/order');
			 $this->load->model('catalog/product');
			$products = $this->model_account_order->getOrderProducts($this->session->data['order_id']);
            if ($this->customer->isLogged()) {
			$data['pts_text_message'] = sprintf($this->language->get('pts_text_customer'), $this->url->link('account/account', '', true), $this->url->link('account/order', '', true), $this->url->link('account/download', '', true));
		} else {
			$data['pts_text_message'] = $this->language->get('pts_text_guest');
		}
		
		$data['pts_text_thanks'] = $this->language->get('pts_text_thanks');
		$data['pts_text_store_owner'] = sprintf($this->language->get('pts_text_store_owner'),$this->url->link('information/contact'));
			foreach ($products as $product) {			
               
				$product_info = $this->model_catalog_product->getProduct($product['product_id']);
                $orderd_pro_seller_id = "";
				//$seller_datile = "";
                $orderd_pro_seller_id = $this->model_account_order->getOrderedProductsellerid($this->session->data['order_id'],$product['product_id']);
				$this->load->model('extension/purpletree_multivendor/sellerorder');
				$seller_datile = $this->model_account_order->getsellerInfofororder($orderd_pro_seller_id);
				$this->load->model('extension/purpletree_multivendor/vendor');
				$seller_detailss = $this->model_extension_purpletree_multivendor_vendor->getStoreDetail($orderd_pro_seller_id);
				$cuntry_name = '';
				if(isset($seller_detailss['store_country'])) {
				$cuntry_name = $this->model_extension_purpletree_multivendor_vendor->getCountryName($seller_detailss['store_country']);
				}
				$state_name = '';
				if(isset($seller_detailss['store_state']) && isset($seller_detailss['store_country'])) {
				$state_name = $this->model_extension_purpletree_multivendor_vendor->getStateName($seller_detailss['store_state'],$seller_detailss['store_country']);
				}
				$store_address1 = '';
				if(isset($seller_detailss['store_address'])) {
					$store_address1 = $seller_detailss['store_address'];
				}
				$store_city = '';
				if(isset($seller_detailss['store_city'])) {
					$store_city = $seller_detailss['store_city'];
				}
				$store_address = $store_address1.','.$store_city.','.$state_name.','.$cuntry_name;
				$seller_link  = '';
				if(isset($seller_detailss['id'])) {
				$seller_link  = $this->url->link('extension/account/purpletree_multivendor/sellerstore/storeview', 'seller_store_id=' . $seller_detailss['id']);
				}
				$google_map = '';
				if(isset($seller_detailss['google_map_link'])) {
				$google_map = $seller_detailss['google_map_link'];
				}
				if(empty($seller_datile)){
					$seller_datile['store_name'] = '';
					$seller_datile['store_id'] = '';
					$store_address = '';
					$google_map = '';
				}			
				$data['products'][] = array(
                    'seller_store_name'    => $seller_datile['store_name'],
					'google_map'  => $google_map,
                    'seller_id'    => $orderd_pro_seller_id,
					'seller_store_id'    => $seller_datile['store_id'],					
					'name'     => $product['name'],	
					'store_address'     => $store_address,
					'seller_link'     => $seller_link				
				);
			}
			/// End quick order /////]]></add>
		</operation>
	</file>
		<file path="catalog/model/catalog/product.php">
		<operation error="skip">
			<search><![CDATA[return $query->row['total'];]]></search>
		<add position="before" index="1"><![CDATA[/// hyper local code 
		if($this->config->get('module_purpletree_multivendor_status')){
		if($this->config->get('module_purpletree_multivendor_hyperlocal_status')){
		if(isset($this->session->data['seller_area'])){
		$sql1 = "SELECT p.product_id, (SELECT AVG(rating) AS total FROM " . DB_PREFIX . "review r1 WHERE r1.product_id = p.product_id AND r1.status = '1' GROUP BY r1.product_id) AS rating, (SELECT price FROM " . DB_PREFIX . "product_discount pd2 WHERE pd2.product_id = p.product_id AND pd2.customer_group_id = '" . (int)$this->config->get('config_customer_group_id') . "' AND pd2.quantity = '1' AND ((pd2.date_start = '0000-00-00' OR pd2.date_start < NOW()) AND (pd2.date_end = '0000-00-00' OR pd2.date_end > NOW())) ORDER BY pd2.priority ASC, pd2.price ASC LIMIT 1) AS discount, (SELECT price FROM " . DB_PREFIX . "product_special ps WHERE ps.product_id = p.product_id AND ps.customer_group_id = '" . (int)$this->config->get('config_customer_group_id') . "' AND ((ps.date_start = '0000-00-00' OR ps.date_start < NOW()) AND (ps.date_end = '0000-00-00' OR ps.date_end > NOW())) ORDER BY ps.priority ASC, ps.price ASC LIMIT 1) AS special";

		if (!empty($data['filter_category_id'])) {
			if (!empty($data['filter_sub_category'])) {
				$sql1 .= " FROM " . DB_PREFIX . "category_path cp LEFT JOIN " . DB_PREFIX . "product_to_category p2c ON (cp.category_id = p2c.category_id)";
			} else {
				$sql1 .= " FROM " . DB_PREFIX . "product_to_category p2c";
			}

			if (!empty($data['filter_filter'])) {
				$sql1 .= " LEFT JOIN " . DB_PREFIX . "product_filter pf ON (p2c.product_id = pf.product_id) LEFT JOIN " . DB_PREFIX . "product p ON (pf.product_id = p.product_id)";
			} else {
				$sql1 .= " LEFT JOIN " . DB_PREFIX . "product p ON (p2c.product_id = p.product_id)";
			}
		} else {
			$sql1 .= " FROM " . DB_PREFIX . "product p";
		}

		$sql1 .= " LEFT JOIN " . DB_PREFIX . "product_description pd ON (p.product_id = pd.product_id) LEFT JOIN " . DB_PREFIX . "product_to_store p2s ON (p.product_id = p2s.product_id) WHERE pd.language_id = '" . (int)$this->config->get('config_language_id') . "' AND p.status = '1' AND p.date_available <= NOW() AND p2s.store_id = '" . (int)$this->config->get('config_store_id') . "'";

		if (!empty($data['filter_category_id'])) {
			if (!empty($data['filter_sub_category'])) {
				$sql1 .= " AND cp.path_id = '" . (int)$data['filter_category_id'] . "'";
			} else {
				$sql1 .= " AND p2c.category_id = '" . (int)$data['filter_category_id'] . "'";
			}

			if (!empty($data['filter_filter'])) {
				$implode = array();

				$filters = explode(',', $data['filter_filter']);

				foreach ($filters as $filter_id) {
					$implode[] = (int)$filter_id;
				}

				$sql1 .= " AND pf.filter_id IN (" . implode(',', $implode) . ")";
			}
		}

		if (!empty($data['filter_name']) || !empty($data['filter_tag'])) {
			$sql1 .= " AND (";

			if (!empty($data['filter_name'])) {
				$implode = array();

				$words = explode(' ', trim(preg_replace('/\s+/', ' ', $data['filter_name'])));

				foreach ($words as $word) {
					$implode[] = "pd.name LIKE '%" . $this->db->escape($word) . "%'";
				}

				if ($implode) {
					$sql1 .= " " . implode(" AND ", $implode) . "";
				}

				if (!empty($data['filter_description'])) {
					$sql1 .= " OR pd.description LIKE '%" . $this->db->escape($data['filter_name']) . "%'";
				}
			}

			if (!empty($data['filter_name']) && !empty($data['filter_tag'])) {
				$sql1 .= " OR ";
			}

			if (!empty($data['filter_tag'])) {
				$implode = array();

				$words = explode(' ', trim(preg_replace('/\s+/', ' ', $data['filter_tag'])));

				foreach ($words as $word) {
					$implode[] = "pd.tag LIKE '%" . $this->db->escape($word) . "%'";
				}

				if ($implode) {
					$sql1 .= " " . implode(" AND ", $implode) . "";
				}
			}

			if (!empty($data['filter_name'])) {
				$sql1 .= " OR LCASE(p.model) = '" . $this->db->escape(utf8_strtolower($data['filter_name'])) . "'";
				$sql1 .= " OR LCASE(p.sku) = '" . $this->db->escape(utf8_strtolower($data['filter_name'])) . "'";
				$sql1 .= " OR LCASE(p.upc) = '" . $this->db->escape(utf8_strtolower($data['filter_name'])) . "'";
				$sql1 .= " OR LCASE(p.ean) = '" . $this->db->escape(utf8_strtolower($data['filter_name'])) . "'";
				$sql1 .= " OR LCASE(p.jan) = '" . $this->db->escape(utf8_strtolower($data['filter_name'])) . "'";
				$sql1 .= " OR LCASE(p.isbn) = '" . $this->db->escape(utf8_strtolower($data['filter_name'])) . "'";
				$sql1 .= " OR LCASE(p.mpn) = '" . $this->db->escape(utf8_strtolower($data['filter_name'])) . "'";
			}

			$sql1 .= ")";
		}

		if (!empty($data['filter_manufacturer_id'])) {
			$sql1 .= " AND p.manufacturer_id = '" . (int)$data['filter_manufacturer_id'] . "'";
		}

		$sql1 .= " GROUP BY p.product_id";

		$sort_data = array(
			'pd.name',
			'p.model',
			'p.quantity',
			'p.price',
			'rating',
			'p.sort_order',
			'p.date_added'
		);

		if (isset($data['sort']) && in_array($data['sort'], $sort_data)) {
			if ($data['sort'] == 'pd.name' || $data['sort'] == 'p.model') {
				$sql1 .= " ORDER BY LCASE(" . $data['sort'] . ")";
			} elseif ($data['sort'] == 'p.price') {
				$sql1 .= " ORDER BY (CASE WHEN special IS NOT NULL THEN special WHEN discount IS NOT NULL THEN discount ELSE p.price END)";
			} else {
				$sql1 .= " ORDER BY " . $data['sort'];
			}
		} else {
			$sql1 .= " ORDER BY p.sort_order";
		}

		if (isset($data['order']) && ($data['order'] == 'DESC')) {
			$sql1 .= " DESC, LCASE(pd.name) DESC";
		} else {
			$sql1 .= " ASC, LCASE(pd.name) ASC";
		}

		if (isset($data['start']) || isset($data['limit'])) {
			if ($data['start'] < 0) {
				$data['start'] = 0;
			}

			if ($data['limit'] < 1) {
				$data['limit'] = 20;
			}

			$sql1 .= " LIMIT " . (int)$data['start'] . "," . (int)$data['limit'];
		}

		$product_data = array();

		$query1 = $this->db->query($sql1);

		foreach ($query1->rows as $result) {
			$product_data[$result['product_id']] = $this->getProduct($result['product_id']);
		}
		$current_area = '';	
		$assign_area = array();
		     $filter_products = array();
			$this->load->model('extension/purpletree_multivendor/sellerproduct');
			$this->load->model('extension/purpletree_multivendor/vendor');
			if(!empty($product_data)){
			foreach($product_data as $key => $value){
			    $seller_detail = $this->model_extension_purpletree_multivendor_sellerproduct->getSellername($value['product_id']);
				if($seller_detail){
				$seller_detailss = $this->model_extension_purpletree_multivendor_vendor->getStoreDetail($seller_detail['seller_id']);
				    $current_area = $this->session->data['seller_area'];	
					$assign_area = unserialize($seller_detailss['store_area']);
					if(!empty($assign_area)){
					if(!in_array($current_area,$assign_area)){
					    $query->row['total'] = $query->row['total'] - 1;
						}
					}
				   }
			   }
			 }
		   }
		  }
		}]]></add>
		</operation>
	</file>
	<file path="admin/controller/sale/order.php">
		<operation error="skip">
			<search><![CDATA[public function getForm() {]]></search>
		<add position="after" index="0"><![CDATA[///Help code///	
			$data['module_purpletree_multivendor_status'] = $this->config->get('module_purpletree_multivendor_status');
			if($this->config->get('module_purpletree_multivendor_status')){
			$data['helplink'] = "https://www.purpletreesoftware.com/knowledgebase/tag/opencart-multivendor-order";
			if (defined ('DISABLED_PTS_HELP')){if(DISABLED_PTS_HELP == 0){$data['helpcheck'] = 1;}else{$data['helpcheck'] = 0;}}else{$data['helpcheck'] = 1;}
			if ($this->request->server['HTTPS']) {
				$data['helpimage'] = HTTPS_SERVER . 'view/image/help.png';
			 } else {
				$data['helpimage'] = HTTP_SERVER . 'view/image/help.png';
			}
			}
			/// End Help code///]]></add>
		</operation>
	</file>
	<file path="admin/view/template/sale/order_form.twig">
		<operation error="skip">
			<search><![CDATA[<div class="pull-right"><a href="{{ cancel }}" class="btn btn-default"><i class="fa fa-reply"></i> {{ button_cancel }}</a></div>]]></search>
		<add position="replace" index="0"><![CDATA[<div class="pull-right"><a href="{{ cancel }}" class="btn btn-default"><i class="fa fa-reply"></i> {{ button_cancel }}</a>
			{% if module_purpletree_multivendor_status %}
				 {% if helpcheck %}
				<a href="{{ helplink }}" target="_blank" id="button-pts-help" class="btn"><img src="{{ helpimage }}" alt="Help" width="85" height="43"></a>				
		{% endif %}
		{% endif %}
			</div>]]></add>
		</operation>
	</file>
	<file path="admin/controller/sale/return.php">
		<operation error="skip">
			<search><![CDATA[protected function getList() {]]></search>
		<add position="after" index="0"><![CDATA[///Help code///	
			$data['module_purpletree_multivendor_status'] = $this->config->get('module_purpletree_multivendor_status');
			if($this->config->get('module_purpletree_multivendor_status')){
			$data['helplink'] = "https://www.purpletreesoftware.com/knowledgebase/tag/opencart-multivendor-return";
			if (defined ('DISABLED_PTS_HELP')){if(DISABLED_PTS_HELP == 0){$data['helpcheck'] = 1;}else{$data['helpcheck'] = 0;}}else{$data['helpcheck'] = 1;}
			if ($this->request->server['HTTPS']) {
				$data['helpimage'] = HTTPS_SERVER . 'view/image/help.png';
			 } else {
				$data['helpimage'] = HTTP_SERVER . 'view/image/help.png';
			}
			}
			/// End Help code///]]></add>
		</operation>
		<operation error="skip">
			<search><![CDATA[protected function getForm() {]]></search>
		<add position="after" index="0"><![CDATA[///Help code///	
			$data['module_purpletree_multivendor_status'] = $this->config->get('module_purpletree_multivendor_status');
			if($this->config->get('module_purpletree_multivendor_status')){
			$data['helplink'] = "https://www.purpletreesoftware.com/knowledgebase/tag/opencart-multivendor-return";
			if (defined ('DISABLED_PTS_HELP')){if(DISABLED_PTS_HELP == 0){$data['helpcheck'] = 1;}else{$data['helpcheck'] = 0;}}else{$data['helpcheck'] = 1;}
			if ($this->request->server['HTTPS']) {
				$data['helpimage'] = HTTPS_SERVER . 'view/image/help.png';
			 } else {
				$data['helpimage'] = HTTP_SERVER . 'view/image/help.png';
			}
			}
			/// End Help code///]]></add>
		</operation>
	</file>
	<file path="admin/view/template/sale/return_list.twig">
		<operation error="skip">
			<search><![CDATA[<button type="button" data-toggle="tooltip" title="{{ button_delete }}" class="btn btn-danger" onclick="confirm('{{ text_confirm }}') ? $('#form-return').submit() : false;"><i class="fa fa-trash-o"></i></button>]]></search>
		<add position="after" index="0"><![CDATA[
			{% if module_purpletree_multivendor_status %}
				 {% if helpcheck %}
				<a href="{{ helplink }}" target="_blank" id="button-pts-help" class="btn"><img src="{{ helpimage }}" alt="Help" width="85" height="43"></a>				
		{% endif %}
		{% endif %}
		]]></add>
		</operation>
	</file>
	<file path="admin/view/template/sale/return_form.twig">
		<operation error="skip">
			<search><![CDATA[<a href="{{ cancel }}" data-toggle="tooltip" title="{{ button_cancel }}" class="btn btn-default"><i class="fa fa-reply"></i></a> </div>]]></search>
		<add position="replace" index="0"><![CDATA[<a href="{{ cancel }}" data-toggle="tooltip" title="{{ button_cancel }}" class="btn btn-default"><i class="fa fa-reply"></i></a>
			{% if module_purpletree_multivendor_status %}
				 {% if helpcheck %}
				<a href="{{ helplink }}" target="_blank" id="button-pts-help" class="btn"><img src="{{ helpimage }}" alt="Help" width="85" height="43"></a>				
		{% endif %}
		{% endif %}
			</div>]]></add>
		</operation>
	</file>
</modification>